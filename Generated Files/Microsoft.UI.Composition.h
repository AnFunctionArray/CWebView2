/* Header file automatically generated from Microsoft.UI.Composition.idl */
/*
 * File built with Microsoft(R) MIDLRT Compiler Engine Version 10.00.0226 
 */

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __Microsoft2EUI2EComposition_h__
#define __Microsoft2EUI2EComposition_h__
#ifndef __Microsoft2EUI2EComposition_p_h__
#define __Microsoft2EUI2EComposition_p_h__


#pragma once

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "never"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(MICROSOFT_GRAPHICS_LIFTEDCONTRACT_VERSION)
#define MICROSOFT_GRAPHICS_LIFTEDCONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_GRAPHICS_LIFTEDCONTRACT_VERSION)

#if !defined(MICROSOFT_SYSTEM_LIFTEDCONTRACT_VERSION)
#define MICROSOFT_SYSTEM_LIFTEDCONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_SYSTEM_LIFTEDCONTRACT_VERSION)

#if !defined(MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION)
#define MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION 0x50000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0x80000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if !defined(WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION)
#define WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION)

#if !defined(WINDOWS_PHONE_PHONECONTRACT_VERSION)
#define WINDOWS_PHONE_PHONECONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_PHONE_PHONECONTRACT_VERSION)

#if !defined(WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION)
#define WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION)

#if !defined(WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION)
#define WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Microsoft.Graphics.h"
#include "Microsoft.System.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.h"
#include "Windows.Graphics.DirectX.h"
#include "Windows.Graphics.Effects.h"
#include "Windows.UI.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionNotificationDeferralCompletedHandler;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler Microsoft::UI::Composition::ICompositionNotificationDeferralCompletedHandler

#endif // ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAmbientLight_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IAmbientLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIAmbientLight Microsoft::UI::Composition::IAmbientLight

#endif // ____x_Microsoft_CUI_CComposition_CIAmbientLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IAmbientLight2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIAmbientLight2 Microsoft::UI::Composition::IAmbientLight2

#endif // ____x_Microsoft_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationController_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationController_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IAnimationController;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIAnimationController Microsoft::UI::Composition::IAnimationController

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationController_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IAnimationControllerStatics;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics Microsoft::UI::Composition::IAnimationControllerStatics

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IAnimationObject;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIAnimationObject Microsoft::UI::Composition::IAnimationObject

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IAnimationPropertyInfo;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo Microsoft::UI::Composition::IAnimationPropertyInfo

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IBooleanKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation Microsoft::UI::Composition::IBooleanKeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IBounceScalarNaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation Microsoft::UI::Composition::IBounceScalarNaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IBounceVector2NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation Microsoft::UI::Composition::IBounceVector2NaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IBounceVector3NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation Microsoft::UI::Composition::IBounceVector3NaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IColorKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation Microsoft::UI::Composition::IColorKeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnchor_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnchor_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnchor;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnchor Microsoft::UI::Composition::ICompositionAnchor

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnchor_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnimation Microsoft::UI::Composition::ICompositionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnimation2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2 Microsoft::UI::Composition::ICompositionAnimation2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnimation3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnimation3 Microsoft::UI::Composition::ICompositionAnimation3

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnimation4;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnimation4 Microsoft::UI::Composition::ICompositionAnimation4

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnimationBase;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnimationBase Microsoft::UI::Composition::ICompositionAnimationBase

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnimationFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory Microsoft::UI::Composition::ICompositionAnimationFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnimationGroup;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup Microsoft::UI::Composition::ICompositionAnimationGroup

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionBackdropBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush Microsoft::UI::Composition::ICompositionBackdropBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionBatchCompletedEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs Microsoft::UI::Composition::ICompositionBatchCompletedEventArgs

#endif // ____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionBrush Microsoft::UI::Composition::ICompositionBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionBrushFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionBrushFactory Microsoft::UI::Composition::ICompositionBrushFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionCapabilities;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities Microsoft::UI::Composition::ICompositionCapabilities

#endif // ____x_Microsoft_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionCapabilitiesStatics;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics Microsoft::UI::Composition::ICompositionCapabilitiesStatics

#endif // ____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionClip_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionClip_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionClip;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionClip Microsoft::UI::Composition::ICompositionClip

#endif // ____x_Microsoft_CUI_CComposition_CICompositionClip_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionClip2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionClip2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionClip2 Microsoft::UI::Composition::ICompositionClip2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionClip2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionClipFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionClipFactory Microsoft::UI::Composition::ICompositionClipFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionColorBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush Microsoft::UI::Composition::ICompositionColorBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionColorGradientStop;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop Microsoft::UI::Composition::ICompositionColorGradientStop

#endif // ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionColorGradientStopCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection Microsoft::UI::Composition::ICompositionColorGradientStopCollection

#endif // ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionCommitBatch;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch Microsoft::UI::Composition::ICompositionCommitBatch

#endif // ____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionContainerShape;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionContainerShape Microsoft::UI::Composition::ICompositionContainerShape

#endif // ____x_Microsoft_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionDrawingSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface Microsoft::UI::Composition::ICompositionDrawingSurface

#endif // ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionDrawingSurface2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 Microsoft::UI::Composition::ICompositionDrawingSurface2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionDrawingSurfaceFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory Microsoft::UI::Composition::ICompositionDrawingSurfaceFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionEasingFunction;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunction Microsoft::UI::Composition::ICompositionEasingFunction

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionEasingFunctionFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory Microsoft::UI::Composition::ICompositionEasingFunctionFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionEffectBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush Microsoft::UI::Composition::ICompositionEffectBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionEffectFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory Microsoft::UI::Composition::ICompositionEffectFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionEffectSourceParameter;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter Microsoft::UI::Composition::ICompositionEffectSourceParameter

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionEffectSourceParameterFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory Microsoft::UI::Composition::ICompositionEffectSourceParameterFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionEllipseGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry Microsoft::UI::Composition::ICompositionEllipseGeometry

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGeometricClip;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip Microsoft::UI::Composition::ICompositionGeometricClip

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGeometry Microsoft::UI::Composition::ICompositionGeometry

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGeometryFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory Microsoft::UI::Composition::ICompositionGeometryFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGradientBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush Microsoft::UI::Composition::ICompositionGradientBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGradientBrush2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 Microsoft::UI::Composition::ICompositionGradientBrush2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGradientBrushFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory Microsoft::UI::Composition::ICompositionGradientBrushFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGraphicsDevice;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice Microsoft::UI::Composition::ICompositionGraphicsDevice

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGraphicsDevice2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 Microsoft::UI::Composition::ICompositionGraphicsDevice2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionGraphicsDevice3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 Microsoft::UI::Composition::ICompositionGraphicsDevice3

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIsland_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIsland_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIsland;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIsland Microsoft::UI::Composition::ICompositionIsland

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIsland_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIslandAutomationProviderRequestedEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs Microsoft::UI::Composition::ICompositionIslandAutomationProviderRequestedEventArgs

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIslandEnvironment;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment Microsoft::UI::Composition::ICompositionIslandEnvironment

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIslandEnvironmentStatics;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics Microsoft::UI::Composition::ICompositionIslandEnvironmentStatics

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIslandEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs Microsoft::UI::Composition::ICompositionIslandEventArgs

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIslandFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIslandFactory Microsoft::UI::Composition::ICompositionIslandFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandSite_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandSite_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIslandSite;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIslandSite Microsoft::UI::Composition::ICompositionIslandSite

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandSite_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIslandSiteFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory Microsoft::UI::Composition::ICompositionIslandSiteFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionIslandStatics;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics Microsoft::UI::Composition::ICompositionIslandStatics

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionLight Microsoft::UI::Composition::ICompositionLight

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLight2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionLight2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionLight2 Microsoft::UI::Composition::ICompositionLight2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLight3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionLight3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionLight3 Microsoft::UI::Composition::ICompositionLight3

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLight3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionLightFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionLightFactory Microsoft::UI::Composition::ICompositionLightFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionLineGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry Microsoft::UI::Composition::ICompositionLineGeometry

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionLinearGradientBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush Microsoft::UI::Composition::ICompositionLinearGradientBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionMaskBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush Microsoft::UI::Composition::ICompositionMaskBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionMipmapSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface Microsoft::UI::Composition::ICompositionMipmapSurface

#endif // ____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionNineGridBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush Microsoft::UI::Composition::ICompositionNineGridBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionNotificationDeferral;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral Microsoft::UI::Composition::ICompositionNotificationDeferral

#endif // ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObject_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObject_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionObject;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionObject Microsoft::UI::Composition::ICompositionObject

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObject_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObject2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionObject2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionObject2 Microsoft::UI::Composition::ICompositionObject2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObject2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObject3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionObject3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionObject3 Microsoft::UI::Composition::ICompositionObject3

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObject3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObject4_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionObject4;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionObject4 Microsoft::UI::Composition::ICompositionObject4

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObject4_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionObjectFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionObjectFactory Microsoft::UI::Composition::ICompositionObjectFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionObjectStatics;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics Microsoft::UI::Composition::ICompositionObjectStatics

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPath_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPath_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionPath;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionPath Microsoft::UI::Composition::ICompositionPath

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPath_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionPathFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionPathFactory Microsoft::UI::Composition::ICompositionPathFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionPathGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry Microsoft::UI::Composition::ICompositionPathGeometry

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadow;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow Microsoft::UI::Composition::ICompositionProjectedShadow

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadow2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 Microsoft::UI::Composition::ICompositionProjectedShadow2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadowCaster;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster Microsoft::UI::Composition::ICompositionProjectedShadowCaster

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadowCaster2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 Microsoft::UI::Composition::ICompositionProjectedShadowCaster2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadowCasterCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection Microsoft::UI::Composition::ICompositionProjectedShadowCasterCollection

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadowCasterCollectionStatics;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics Microsoft::UI::Composition::ICompositionProjectedShadowCasterCollectionStatics

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadowReceiver;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver Microsoft::UI::Composition::ICompositionProjectedShadowReceiver

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadowReceiver2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 Microsoft::UI::Composition::ICompositionProjectedShadowReceiver2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionProjectedShadowReceiverUnorderedCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection Microsoft::UI::Composition::ICompositionProjectedShadowReceiverUnorderedCollection

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionPropertySet;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet Microsoft::UI::Composition::ICompositionPropertySet

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionPropertySet2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 Microsoft::UI::Composition::ICompositionPropertySet2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionRadialGradientBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush Microsoft::UI::Composition::ICompositionRadialGradientBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionRectangleGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry Microsoft::UI::Composition::ICompositionRectangleGeometry

#endif // ____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionRoundedRectangleGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry Microsoft::UI::Composition::ICompositionRoundedRectangleGeometry

#endif // ____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionScopedBatch;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch Microsoft::UI::Composition::ICompositionScopedBatch

#endif // ____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionShadow_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionShadow;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionShadow Microsoft::UI::Composition::ICompositionShadow

#endif // ____x_Microsoft_CUI_CComposition_CICompositionShadow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionShadowFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionShadowFactory Microsoft::UI::Composition::ICompositionShadowFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionShape_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionShape_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionShape;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionShape Microsoft::UI::Composition::ICompositionShape

#endif // ____x_Microsoft_CUI_CComposition_CICompositionShape_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionShapeFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionShapeFactory Microsoft::UI::Composition::ICompositionShapeFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionSpriteShape;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape Microsoft::UI::Composition::ICompositionSpriteShape

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionSurface Microsoft::UI::Composition::ICompositionSurface

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionSurfaceBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush Microsoft::UI::Composition::ICompositionSurfaceBrush

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionSurfaceBrush2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 Microsoft::UI::Composition::ICompositionSurfaceBrush2

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionSurfaceBrush3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 Microsoft::UI::Composition::ICompositionSurfaceBrush3

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionTarget_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionTarget;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionTarget Microsoft::UI::Composition::ICompositionTarget

#endif // ____x_Microsoft_CUI_CComposition_CICompositionTarget_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionTargetFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionTargetFactory Microsoft::UI::Composition::ICompositionTargetFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionTransform_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionTransform;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionTransform Microsoft::UI::Composition::ICompositionTransform

#endif // ____x_Microsoft_CUI_CComposition_CICompositionTransform_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionTransformFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionTransformFactory Microsoft::UI::Composition::ICompositionTransformFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionViewBox;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionViewBox Microsoft::UI::Composition::ICompositionViewBox

#endif // ____x_Microsoft_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionVirtualDrawingSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface Microsoft::UI::Composition::ICompositionVirtualDrawingSurface

#endif // ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionVirtualDrawingSurfaceFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory Microsoft::UI::Composition::ICompositionVirtualDrawingSurfaceFactory

#endif // ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionVisualSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface Microsoft::UI::Composition::ICompositionVisualSurface

#endif // ____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositor;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositor Microsoft::UI::Composition::ICompositor

#endif // ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositor2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositor2 Microsoft::UI::Composition::ICompositor2

#endif // ____x_Microsoft_CUI_CComposition_CICompositor2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositor3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositor3 Microsoft::UI::Composition::ICompositor3

#endif // ____x_Microsoft_CUI_CComposition_CICompositor3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor4_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor4_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositor4;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositor4 Microsoft::UI::Composition::ICompositor4

#endif // ____x_Microsoft_CUI_CComposition_CICompositor4_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor5_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor5_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositor5;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositor5 Microsoft::UI::Composition::ICompositor5

#endif // ____x_Microsoft_CUI_CComposition_CICompositor5_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor6_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor6_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositor6;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositor6 Microsoft::UI::Composition::ICompositor6

#endif // ____x_Microsoft_CUI_CComposition_CICompositor6_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositorStatics;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositorStatics Microsoft::UI::Composition::ICompositorStatics

#endif // ____x_Microsoft_CUI_CComposition_CICompositorStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositorWithCompositionIslands;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands Microsoft::UI::Composition::ICompositorWithCompositionIslands

#endif // ____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositorWithProjectedShadow;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow Microsoft::UI::Composition::ICompositorWithProjectedShadow

#endif // ____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositorWithRadialGradient;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient Microsoft::UI::Composition::ICompositorWithRadialGradient

#endif // ____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositorWithVisualSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface Microsoft::UI::Composition::ICompositorWithVisualSurface

#endif // ____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIContainerVisual_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IContainerVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIContainerVisual Microsoft::UI::Composition::IContainerVisual

#endif // ____x_Microsoft_CUI_CComposition_CIContainerVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IContainerVisualFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIContainerVisualFactory Microsoft::UI::Composition::IContainerVisualFactory

#endif // ____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICubicBezierEasingFunction;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction Microsoft::UI::Composition::ICubicBezierEasingFunction

#endif // ____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIDistantLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIDistantLight_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IDistantLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIDistantLight Microsoft::UI::Composition::IDistantLight

#endif // ____x_Microsoft_CUI_CComposition_CIDistantLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIDistantLight2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IDistantLight2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIDistantLight2 Microsoft::UI::Composition::IDistantLight2

#endif // ____x_Microsoft_CUI_CComposition_CIDistantLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIDropShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIDropShadow_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IDropShadow;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIDropShadow Microsoft::UI::Composition::IDropShadow

#endif // ____x_Microsoft_CUI_CComposition_CIDropShadow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIDropShadow2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IDropShadow2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIDropShadow2 Microsoft::UI::Composition::IDropShadow2

#endif // ____x_Microsoft_CUI_CComposition_CIDropShadow2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IExpressionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation Microsoft::UI::Composition::IExpressionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IImplicitAnimationCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection Microsoft::UI::Composition::IImplicitAnimationCollection

#endif // ____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIInsetClip_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIInsetClip_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IInsetClip;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIInsetClip Microsoft::UI::Composition::IInsetClip

#endif // ____x_Microsoft_CUI_CComposition_CIInsetClip_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation Microsoft::UI::Composition::IKeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IKeyFrameAnimation2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 Microsoft::UI::Composition::IKeyFrameAnimation2

#endif // ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IKeyFrameAnimation3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 Microsoft::UI::Composition::IKeyFrameAnimation3

#endif // ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IKeyFrameAnimationFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory Microsoft::UI::Composition::IKeyFrameAnimationFactory

#endif // ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CILayerVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CILayerVisual_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ILayerVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CILayerVisual Microsoft::UI::Composition::ILayerVisual

#endif // ____x_Microsoft_CUI_CComposition_CILayerVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CILayerVisual2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ILayerVisual2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CILayerVisual2 Microsoft::UI::Composition::ILayerVisual2

#endif // ____x_Microsoft_CUI_CComposition_CILayerVisual2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ILinearEasingFunction;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CILinearEasingFunction Microsoft::UI::Composition::ILinearEasingFunction

#endif // ____x_Microsoft_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface INaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation Microsoft::UI::Composition::INaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface INaturalMotionAnimationFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory Microsoft::UI::Composition::INaturalMotionAnimationFactory

#endif // ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IPathKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation Microsoft::UI::Composition::IPathKeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPointLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPointLight_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IPointLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIPointLight Microsoft::UI::Composition::IPointLight

#endif // ____x_Microsoft_CUI_CComposition_CIPointLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPointLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPointLight2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IPointLight2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIPointLight2 Microsoft::UI::Composition::IPointLight2

#endif // ____x_Microsoft_CUI_CComposition_CIPointLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPointLight3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPointLight3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IPointLight3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIPointLight3 Microsoft::UI::Composition::IPointLight3

#endif // ____x_Microsoft_CUI_CComposition_CIPointLight3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPopupIslandSite_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPopupIslandSite_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IPopupIslandSite;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite Microsoft::UI::Composition::IPopupIslandSite

#endif // ____x_Microsoft_CUI_CComposition_CIPopupIslandSite_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IQuaternionKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation Microsoft::UI::Composition::IQuaternionKeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IRedirectVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIRedirectVisual Microsoft::UI::Composition::IRedirectVisual

#endif // ____x_Microsoft_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IRenderingDeviceReplacedEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs Microsoft::UI::Composition::IRenderingDeviceReplacedEventArgs

#endif // ____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IScalarKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation Microsoft::UI::Composition::IScalarKeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IScalarNaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation Microsoft::UI::Composition::IScalarNaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IScalarNaturalMotionAnimationFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory Microsoft::UI::Composition::IScalarNaturalMotionAnimationFactory

#endif // ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIShapeVisual_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IShapeVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIShapeVisual Microsoft::UI::Composition::IShapeVisual

#endif // ____x_Microsoft_CUI_CComposition_CIShapeVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpotLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpotLight_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISpotLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISpotLight Microsoft::UI::Composition::ISpotLight

#endif // ____x_Microsoft_CUI_CComposition_CISpotLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpotLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpotLight2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISpotLight2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISpotLight2 Microsoft::UI::Composition::ISpotLight2

#endif // ____x_Microsoft_CUI_CComposition_CISpotLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpotLight3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpotLight3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISpotLight3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISpotLight3 Microsoft::UI::Composition::ISpotLight3

#endif // ____x_Microsoft_CUI_CComposition_CISpotLight3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISpringScalarNaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation Microsoft::UI::Composition::ISpringScalarNaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISpringVector2NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation Microsoft::UI::Composition::ISpringVector2NaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISpringVector3NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation Microsoft::UI::Composition::ISpringVector3NaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpriteVisual_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISpriteVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISpriteVisual Microsoft::UI::Composition::ISpriteVisual

#endif // ____x_Microsoft_CUI_CComposition_CISpriteVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISpriteVisual2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISpriteVisual2 Microsoft::UI::Composition::ISpriteVisual2

#endif // ____x_Microsoft_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IStepEasingFunction;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction Microsoft::UI::Composition::IStepEasingFunction

#endif // ____x_Microsoft_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISwapChainIsland_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISwapChainIsland_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ISwapChainIsland;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CISwapChainIsland Microsoft::UI::Composition::ISwapChainIsland

#endif // ____x_Microsoft_CUI_CComposition_CISwapChainIsland_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVector2KeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation Microsoft::UI::Composition::IVector2KeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVector2NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation Microsoft::UI::Composition::IVector2NaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVector2NaturalMotionAnimationFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory Microsoft::UI::Composition::IVector2NaturalMotionAnimationFactory

#endif // ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVector3KeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation Microsoft::UI::Composition::IVector3KeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVector3NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation Microsoft::UI::Composition::IVector3NaturalMotionAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVector3NaturalMotionAnimationFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory Microsoft::UI::Composition::IVector3NaturalMotionAnimationFactory

#endif // ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVector4KeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation Microsoft::UI::Composition::IVector4KeyFrameAnimation

#endif // ____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisual_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisual Microsoft::UI::Composition::IVisual

#endif // ____x_Microsoft_CUI_CComposition_CIVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisual2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisual2_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisual2;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisual2 Microsoft::UI::Composition::IVisual2

#endif // ____x_Microsoft_CUI_CComposition_CIVisual2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisual3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisual3_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisual3;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisual3 Microsoft::UI::Composition::IVisual3

#endif // ____x_Microsoft_CUI_CComposition_CIVisual3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualCollection_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisualCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisualCollection Microsoft::UI::Composition::IVisualCollection

#endif // ____x_Microsoft_CUI_CComposition_CIVisualCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisualElement;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisualElement Microsoft::UI::Composition::IVisualElement

#endif // ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisualFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisualFactory Microsoft::UI::Composition::IVisualFactory

#endif // ____x_Microsoft_CUI_CComposition_CIVisualFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualIslandSite_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualIslandSite_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisualIslandSite;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite Microsoft::UI::Composition::IVisualIslandSite

#endif // ____x_Microsoft_CUI_CComposition_CIVisualIslandSite_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisualIslandSiteEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs Microsoft::UI::Composition::IVisualIslandSiteEventArgs

#endif // ____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisualTreeIsland;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisualTreeIsland Microsoft::UI::Composition::IVisualTreeIsland

#endif // ____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisualUnorderedCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection Microsoft::UI::Composition::IVisualUnorderedCollection

#endif // ____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisual_CompositionIslands;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands Microsoft::UI::Composition::IVisual_CompositionIslands

#endif // ____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions

namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_USE
#define DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3094fcbe-7d8f-5bb0-bf52-085bcee76496"))
IIterator<Microsoft::UI::Composition::CompositionAnimation*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionAnimation*, Microsoft::UI::Composition::ICompositionAnimation*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Composition.CompositionAnimation>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Composition::CompositionAnimation*> __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_t;
#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionAnimation*>
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionAnimation*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_USE
#define DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1def86ce-4be1-5ccc-ba28-05d746d9bb8d"))
IIterable<Microsoft::UI::Composition::CompositionAnimation*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionAnimation*, Microsoft::UI::Composition::ICompositionAnimation*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Composition.CompositionAnimation>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Composition::CompositionAnimation*> __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_t;
#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionAnimation*>
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionAnimation*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionColorGradientStop;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE
#define DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5865f61c-2bca-5f80-968a-8e06bdc28cb0"))
IIterator<Microsoft::UI::Composition::CompositionColorGradientStop*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionColorGradientStop*, Microsoft::UI::Composition::ICompositionColorGradientStop*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Composition.CompositionColorGradientStop>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Composition::CompositionColorGradientStop*> __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t;
#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionColorGradientStop*>
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionColorGradientStop*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE
#define DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0a1f6ff8-2211-5f18-b959-2bc40431fd37"))
IIterable<Microsoft::UI::Composition::CompositionColorGradientStop*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionColorGradientStop*, Microsoft::UI::Composition::ICompositionColorGradientStop*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Composition.CompositionColorGradientStop>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Composition::CompositionColorGradientStop*> __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t;
#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionColorGradientStop*>
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionColorGradientStop*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionProjectedShadowCaster;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_USE
#define DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1ac58905-0d81-581d-b718-801297568ec1"))
IIterator<Microsoft::UI::Composition::CompositionProjectedShadowCaster*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionProjectedShadowCaster*, Microsoft::UI::Composition::ICompositionProjectedShadowCaster*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Composition.CompositionProjectedShadowCaster>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Composition::CompositionProjectedShadowCaster*> __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_t;
#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionProjectedShadowCaster*>
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionProjectedShadowCaster*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_USE
#define DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7cc33343-15e6-5a20-acbd-a2af4cb216a3"))
IIterable<Microsoft::UI::Composition::CompositionProjectedShadowCaster*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionProjectedShadowCaster*, Microsoft::UI::Composition::ICompositionProjectedShadowCaster*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Composition.CompositionProjectedShadowCaster>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Composition::CompositionProjectedShadowCaster*> __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_t;
#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionProjectedShadowCaster*>
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionProjectedShadowCaster*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionProjectedShadowReceiver;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_USE
#define DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d0a7e89f-a01e-5c64-bf5e-37d03eaea320"))
IIterator<Microsoft::UI::Composition::CompositionProjectedShadowReceiver*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionProjectedShadowReceiver*, Microsoft::UI::Composition::ICompositionProjectedShadowReceiver*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Composition.CompositionProjectedShadowReceiver>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Composition::CompositionProjectedShadowReceiver*> __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_t;
#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionProjectedShadowReceiver*>
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionProjectedShadowReceiver*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_USE
#define DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("89fadb12-ce6b-5056-b34b-42cf6463a87b"))
IIterable<Microsoft::UI::Composition::CompositionProjectedShadowReceiver*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionProjectedShadowReceiver*, Microsoft::UI::Composition::ICompositionProjectedShadowReceiver*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Composition.CompositionProjectedShadowReceiver>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Composition::CompositionProjectedShadowReceiver*> __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_t;
#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionProjectedShadowReceiver*>
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionProjectedShadowReceiver*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionShape;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_USE
#define DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4ec94e18-f15c-5432-9bb3-77bdcd96dc04"))
IIterator<Microsoft::UI::Composition::CompositionShape*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionShape*, Microsoft::UI::Composition::ICompositionShape*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Composition.CompositionShape>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Composition::CompositionShape*> __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_t;
#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionShape*>
//#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::ICompositionShape*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_USE
#define DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c9e6839b-5066-5658-afc8-57d50f1bde3f"))
IIterable<Microsoft::UI::Composition::CompositionShape*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionShape*, Microsoft::UI::Composition::ICompositionShape*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Composition.CompositionShape>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Composition::CompositionShape*> __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_t;
#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionShape*>
//#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::ICompositionShape*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class Visual;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterator_1_Microsoft__CUI__CComposition__CVisual_USE
#define DEF___FIIterator_1_Microsoft__CUI__CComposition__CVisual_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("44b22f94-798f-5841-bb05-0d1aaa22f668"))
IIterator<Microsoft::UI::Composition::Visual*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::Visual*, Microsoft::UI::Composition::IVisual*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Composition.Visual>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Composition::Visual*> __FIIterator_1_Microsoft__CUI__CComposition__CVisual_t;
#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CComposition__CVisual_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::IVisual*>
//#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Composition::IVisual*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CComposition__CVisual_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterable_1_Microsoft__CUI__CComposition__CVisual_USE
#define DEF___FIIterable_1_Microsoft__CUI__CComposition__CVisual_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1d4a1b0e-a493-58b9-80f4-200cd04400f9"))
IIterable<Microsoft::UI::Composition::Visual*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::Visual*, Microsoft::UI::Composition::IVisual*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Composition.Visual>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Composition::Visual*> __FIIterable_1_Microsoft__CUI__CComposition__CVisual_t;
#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CComposition__CVisual_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::IVisual*>
//#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Composition::IVisual*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CComposition__CVisual_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e1ea9d61-0e9e-5375-ac74-502e67f9ede1"))
IKeyValuePair<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> : IKeyValuePair_impl<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, Microsoft.UI.Composition.ICompositionAnimationBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>
//#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d7585c8c-8ac4-575f-8a96-0de9c3159ea9"))
IIterator<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Microsoft.UI.Composition.ICompositionAnimationBase>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase*> __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>*>
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("999d6f68-b74e-5e06-a798-d254c4895670"))
IIterable<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Microsoft.UI.Composition.ICompositionAnimationBase>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase*> __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>*>
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("60d8d804-d025-5b6e-800c-b038cdedbab4"))
IMapView<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> : IMapView_impl<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, Microsoft.UI.Composition.ICompositionAnimationBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::__FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::IMapView<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>
//#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t Windows::Foundation::Collections::IMapView<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#define DEF___FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6a91806a-8668-5938-93f9-759d0021ab9b"))
IMap<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> : IMap_impl<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMap`2<String, Microsoft.UI.Composition.ICompositionAnimationBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*> __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t;
#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::__FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase Windows::Foundation::Collections::IMap<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>
//#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_t Windows::Foundation::Collections::IMap<HSTRING,Microsoft::UI::Composition::ICompositionAnimationBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b3f66d8c-130e-52d4-803e-5305519d5056"))
IVectorView<Microsoft::UI::Composition::CompositionColorGradientStop*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionColorGradientStop*, Microsoft::UI::Composition::ICompositionColorGradientStop*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Composition.CompositionColorGradientStop>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Composition::CompositionColorGradientStop*> __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t;
#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop Windows::Foundation::Collections::IVectorView<Microsoft::UI::Composition::ICompositionColorGradientStop*>
//#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Composition::ICompositionColorGradientStop*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7c3d1b0a-2533-568b-963c-7fdb5769dbe8"))
IVectorView<Microsoft::UI::Composition::CompositionShape*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionShape*, Microsoft::UI::Composition::ICompositionShape*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Composition.CompositionShape>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Composition::CompositionShape*> __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_t;
#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape Windows::Foundation::Collections::IVectorView<Microsoft::UI::Composition::ICompositionShape*>
//#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Composition::ICompositionShape*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE
#define DEF___FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("77fa9267-b867-5f77-8c02-7d85819d563b"))
IVector<Microsoft::UI::Composition::CompositionColorGradientStop*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionColorGradientStop*, Microsoft::UI::Composition::ICompositionColorGradientStop*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Composition.CompositionColorGradientStop>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Composition::CompositionColorGradientStop*> __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t;
#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop Windows::Foundation::Collections::IVector<Microsoft::UI::Composition::ICompositionColorGradientStop*>
//#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_t Windows::Foundation::Collections::IVector<Microsoft::UI::Composition::ICompositionColorGradientStop*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_USE
#define DEF___FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7397ef7a-aabd-50a3-9308-06d2a7050621"))
IVector<Microsoft::UI::Composition::CompositionShape*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionShape*, Microsoft::UI::Composition::ICompositionShape*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Composition.CompositionShape>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Composition::CompositionShape*> __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_t;
#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape Windows::Foundation::Collections::IVector<Microsoft::UI::Composition::ICompositionShape*>
//#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_t Windows::Foundation::Collections::IVector<Microsoft::UI::Composition::ICompositionShape*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c89efa6d-6f22-5e04-8059-b5628e3f0180"))
IAsyncOperationCompletedHandler<Microsoft::UI::Composition::ICompositionSurface*> : IAsyncOperationCompletedHandler_impl<Microsoft::UI::Composition::ICompositionSurface*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Microsoft.UI.Composition.ICompositionSurface>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<Microsoft::UI::Composition::ICompositionSurface*> __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_t;
#define __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface Windows::Foundation::IAsyncOperationCompletedHandler<Microsoft::UI::Composition::ICompositionSurface*>
//#define __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_t Windows::Foundation::IAsyncOperationCompletedHandler<Microsoft::UI::Composition::ICompositionSurface*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_USE
#define DEF___FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("92ceaa5d-b255-57d9-ab7c-0f304485c1bd"))
IAsyncOperation<Microsoft::UI::Composition::ICompositionSurface*> : IAsyncOperation_impl<Microsoft::UI::Composition::ICompositionSurface*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IAsyncOperation`1<Microsoft.UI.Composition.ICompositionSurface>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<Microsoft::UI::Composition::ICompositionSurface*> __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_t;
#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface Windows::Foundation::__FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface Windows::Foundation::IAsyncOperation<Microsoft::UI::Composition::ICompositionSurface*>
//#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_t Windows::Foundation::IAsyncOperation<Microsoft::UI::Composition::ICompositionSurface*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionBatchCompletedEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_USE
#define DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("de522e05-2e72-52ee-bd1f-ac25a0708003"))
ITypedEventHandler<IInspectable*,Microsoft::UI::Composition::CompositionBatchCompletedEventArgs*> : ITypedEventHandler_impl<IInspectable*,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionBatchCompletedEventArgs*, Microsoft::UI::Composition::ICompositionBatchCompletedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Object, Microsoft.UI.Composition.CompositionBatchCompletedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<IInspectable*,Microsoft::UI::Composition::CompositionBatchCompletedEventArgs*> __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_t;
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs Windows::Foundation::__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Composition::ICompositionBatchCompletedEventArgs*>
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_t Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Composition::ICompositionBatchCompletedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionCapabilities;
        } /* Composition */
    } /* UI */
} /* Microsoft */



#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d81e5eac-c5ba-59aa-aed3-f8afdd07a351"))
ITypedEventHandler<Microsoft::UI::Composition::CompositionCapabilities*,IInspectable*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionCapabilities*, Microsoft::UI::Composition::ICompositionCapabilities*>,IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Composition.CompositionCapabilities, Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Composition::CompositionCapabilities*,IInspectable*> __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::ICompositionCapabilities*,IInspectable*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::ICompositionCapabilities*,IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionGraphicsDevice;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class RenderingDeviceReplacedEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e17b6595-d252-54aa-a0b8-665874df2664"))
ITypedEventHandler<Microsoft::UI::Composition::CompositionGraphicsDevice*,Microsoft::UI::Composition::RenderingDeviceReplacedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionGraphicsDevice*, Microsoft::UI::Composition::ICompositionGraphicsDevice*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::RenderingDeviceReplacedEventArgs*, Microsoft::UI::Composition::IRenderingDeviceReplacedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Composition.CompositionGraphicsDevice, Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Composition::CompositionGraphicsDevice*,Microsoft::UI::Composition::RenderingDeviceReplacedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::ICompositionGraphicsDevice*,Microsoft::UI::Composition::IRenderingDeviceReplacedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::ICompositionGraphicsDevice*,Microsoft::UI::Composition::IRenderingDeviceReplacedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionIsland;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionIslandAutomationProviderRequestedEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("4282793b-1191-5662-9184-b7d2d93ae7c6"))
ITypedEventHandler<Microsoft::UI::Composition::CompositionIsland*,Microsoft::UI::Composition::CompositionIslandAutomationProviderRequestedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionIsland*, Microsoft::UI::Composition::ICompositionIsland*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionIslandAutomationProviderRequestedEventArgs*, Microsoft::UI::Composition::ICompositionIslandAutomationProviderRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Composition.CompositionIsland, Microsoft.UI.Composition.CompositionIslandAutomationProviderRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Composition::CompositionIsland*,Microsoft::UI::Composition::CompositionIslandAutomationProviderRequestedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::ICompositionIsland*,Microsoft::UI::Composition::ICompositionIslandAutomationProviderRequestedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::ICompositionIsland*,Microsoft::UI::Composition::ICompositionIslandAutomationProviderRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionIslandEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a5ff3d57-b5c2-5c76-8474-def60e610186"))
ITypedEventHandler<Microsoft::UI::Composition::CompositionIsland*,Microsoft::UI::Composition::CompositionIslandEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionIsland*, Microsoft::UI::Composition::ICompositionIsland*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::CompositionIslandEventArgs*, Microsoft::UI::Composition::ICompositionIslandEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Composition.CompositionIsland, Microsoft.UI.Composition.CompositionIslandEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Composition::CompositionIsland*,Microsoft::UI::Composition::CompositionIslandEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::ICompositionIsland*,Microsoft::UI::Composition::ICompositionIslandEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::ICompositionIsland*,Microsoft::UI::Composition::ICompositionIslandEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Composition {
            class VisualIslandSite;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class VisualIslandSiteEventArgs;
        } /* Composition */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("a9e8d4d7-ba68-5e44-89e0-4c9031fa3cd2"))
ITypedEventHandler<Microsoft::UI::Composition::VisualIslandSite*,Microsoft::UI::Composition::VisualIslandSiteEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::VisualIslandSite*, Microsoft::UI::Composition::IVisualIslandSite*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Composition::VisualIslandSiteEventArgs*, Microsoft::UI::Composition::IVisualIslandSiteEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Composition.VisualIslandSite, Microsoft.UI.Composition.VisualIslandSiteEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Composition::VisualIslandSite*,Microsoft::UI::Composition::VisualIslandSiteEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::IVisualIslandSite*,Microsoft::UI::Composition::IVisualIslandSiteEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Composition::IVisualIslandSite*,Microsoft::UI::Composition::IVisualIslandSiteEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_USE */


#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#ifndef DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("60310303-49c5-52e6-abc6-a9b36eccc716"))
IKeyValuePair<HSTRING,HSTRING> : IKeyValuePair_impl<HSTRING,HSTRING> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, String>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING,HSTRING> __FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIKeyValuePair_2_HSTRING_HSTRING Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIKeyValuePair_2_HSTRING_HSTRING Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>
//#define __FIKeyValuePair_2_HSTRING_HSTRING_t Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_HSTRING_USE */





#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("05eb86f1-7140-5517-b88d-cbaebe57e6b1"))
IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_HSTRING*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>*>
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_t Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */





#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e9bdaaf0-cbf6-5c72-be90-29cbf3a1319b"))
IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_HSTRING*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, String>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_HSTRING*> __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>*>
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_t Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING,HSTRING>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_USE */




#ifndef DEF___FIMapView_2_HSTRING_HSTRING_USE
#define DEF___FIMapView_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ac7f26f2-feb7-5b2a-8ac4-345bc62caede"))
IMapView<HSTRING,HSTRING> : IMapView_impl<HSTRING,HSTRING> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, String>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING,HSTRING> __FIMapView_2_HSTRING_HSTRING_t;
#define __FIMapView_2_HSTRING_HSTRING Windows::Foundation::Collections::__FIMapView_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMapView_2_HSTRING_HSTRING Windows::Foundation::Collections::IMapView<HSTRING,HSTRING>
//#define __FIMapView_2_HSTRING_HSTRING_t Windows::Foundation::Collections::IMapView<HSTRING,HSTRING>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_HSTRING_USE */




#ifndef DEF___FIMap_2_HSTRING_HSTRING_USE
#define DEF___FIMap_2_HSTRING_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f6d1f700-49c2-52ae-8154-826f9908773c"))
IMap<HSTRING,HSTRING> : IMap_impl<HSTRING,HSTRING> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMap`2<String, String>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING,HSTRING> __FIMap_2_HSTRING_HSTRING_t;
#define __FIMap_2_HSTRING_HSTRING Windows::Foundation::Collections::__FIMap_2_HSTRING_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMap_2_HSTRING_HSTRING Windows::Foundation::Collections::IMap<HSTRING,HSTRING>
//#define __FIMap_2_HSTRING_HSTRING_t Windows::Foundation::Collections::IMap<HSTRING,HSTRING>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_HSTRING_USE */




#ifndef DEF___FIIterator_1_float_USE
#define DEF___FIIterator_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("42614e61-b0aa-5e72-9354-2771db20b7a8"))
IIterator<float> : IIterator_impl<float> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Single>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<float> __FIIterator_1_float_t;
#define __FIIterator_1_float Windows::Foundation::Collections::__FIIterator_1_float_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_float Windows::Foundation::Collections::IIterator<FLOAT>
//#define __FIIterator_1_float_t Windows::Foundation::Collections::IIterator<FLOAT>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_float_USE */




#ifndef DEF___FIIterable_1_float_USE
#define DEF___FIIterable_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b01bee51-063a-5fda-bd72-d76637bb8cb8"))
IIterable<float> : IIterable_impl<float> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Single>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<float> __FIIterable_1_float_t;
#define __FIIterable_1_float Windows::Foundation::Collections::__FIIterable_1_float_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_float Windows::Foundation::Collections::IIterable<FLOAT>
//#define __FIIterable_1_float_t Windows::Foundation::Collections::IIterable<FLOAT>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_float_USE */




#ifndef DEF___FIVectorView_1_float_USE
#define DEF___FIVectorView_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7bca64fd-150c-5d50-b56b-9f4f474c5930"))
IVectorView<float> : IVectorView_impl<float> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Single>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<float> __FIVectorView_1_float_t;
#define __FIVectorView_1_float Windows::Foundation::Collections::__FIVectorView_1_float_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_float Windows::Foundation::Collections::IVectorView<FLOAT>
//#define __FIVectorView_1_float_t Windows::Foundation::Collections::IVectorView<FLOAT>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_float_USE */




#ifndef DEF___FIVector_1_float_USE
#define DEF___FIVector_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("61cf693f-db4c-579f-b905-5dd3d23cfd4d"))
IVector<float> : IVector_impl<float> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Single>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<float> __FIVector_1_float_t;
#define __FIVector_1_float Windows::Foundation::Collections::__FIVector_1_float_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_float Windows::Foundation::Collections::IVector<FLOAT>
//#define __FIVector_1_float_t Windows::Foundation::Collections::IVector<FLOAT>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_float_USE */




#ifndef DEF___FIIterator_1_HSTRING_USE
#define DEF___FIIterator_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8c304ebb-6615-50a4-8829-879ecd443236"))
IIterator<HSTRING> : IIterator_impl<HSTRING> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<String>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<HSTRING> __FIIterator_1_HSTRING_t;
#define __FIIterator_1_HSTRING Windows::Foundation::Collections::__FIIterator_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_HSTRING Windows::Foundation::Collections::IIterator<HSTRING>
//#define __FIIterator_1_HSTRING_t Windows::Foundation::Collections::IIterator<HSTRING>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_HSTRING_USE */




#ifndef DEF___FIIterable_1_HSTRING_USE
#define DEF___FIIterable_1_HSTRING_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e2fcc7c1-3bfc-5a0b-b2b0-72e769d1cb7e"))
IIterable<HSTRING> : IIterable_impl<HSTRING> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<String>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<HSTRING> __FIIterable_1_HSTRING_t;
#define __FIIterable_1_HSTRING Windows::Foundation::Collections::__FIIterable_1_HSTRING_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_HSTRING Windows::Foundation::Collections::IIterable<HSTRING>
//#define __FIIterable_1_HSTRING_t Windows::Foundation::Collections::IIterable<HSTRING>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_HSTRING_USE */




#ifndef DEF___FIReference_1_float_USE
#define DEF___FIReference_1_float_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("719cc2ba-3e76-5def-9f1a-38d85a145ea8"))
IReference<float> : IReference_impl<float> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IReference`1<Single>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<float> __FIReference_1_float_t;
#define __FIReference_1_float Windows::Foundation::__FIReference_1_float_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIReference_1_float Windows::Foundation::IReference<FLOAT>
//#define __FIReference_1_float_t Windows::Foundation::IReference<FLOAT>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_float_USE */




namespace Windows {
    namespace Foundation {
        namespace Numerics {
            struct Vector2;
            
        } /* Numerics */
    } /* Foundation */
} /* Windows */


#ifndef DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector2_USE
#define DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector2_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("48f6a69e-8465-57ae-9400-9764087f65ad"))
IReference<struct Windows::Foundation::Numerics::Vector2> : IReference_impl<struct Windows::Foundation::Numerics::Vector2> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector2>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct Windows::Foundation::Numerics::Vector2> __FIReference_1_Windows__CFoundation__CNumerics__CVector2_t;
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2 Windows::Foundation::__FIReference_1_Windows__CFoundation__CNumerics__CVector2_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2 Windows::Foundation::IReference<Windows::Foundation::Numerics::Vector2>
//#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_t Windows::Foundation::IReference<Windows::Foundation::Numerics::Vector2>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector2_USE */




namespace Windows {
    namespace Foundation {
        namespace Numerics {
            struct Vector3;
            
        } /* Numerics */
    } /* Foundation */
} /* Windows */


#ifndef DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector3_USE
#define DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector3_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("1ee770ff-c954-59ca-a754-6199a9be282c"))
IReference<struct Windows::Foundation::Numerics::Vector3> : IReference_impl<struct Windows::Foundation::Numerics::Vector3> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Numerics.Vector3>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct Windows::Foundation::Numerics::Vector3> __FIReference_1_Windows__CFoundation__CNumerics__CVector3_t;
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3 Windows::Foundation::__FIReference_1_Windows__CFoundation__CNumerics__CVector3_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3 Windows::Foundation::IReference<Windows::Foundation::Numerics::Vector3>
//#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_t Windows::Foundation::IReference<Windows::Foundation::Numerics::Vector3>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CNumerics__CVector3_USE */







namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum AnimationControllerProgressBehavior : int AnimationControllerProgressBehavior;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum AnimationDelayBehavior : int AnimationDelayBehavior;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum AnimationDirection : int AnimationDirection;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum AnimationIterationBehavior : int AnimationIterationBehavior;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum AnimationPropertyAccessMode : int AnimationPropertyAccessMode;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum AnimationStopBehavior : int AnimationStopBehavior;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionBackfaceVisibility : int CompositionBackfaceVisibility;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionBatchTypes : unsigned int CompositionBatchTypes;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionBitmapInterpolationMode : int CompositionBitmapInterpolationMode;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionBorderMode : int CompositionBorderMode;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionColorSpace : int CompositionColorSpace;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionCompositeMode : int CompositionCompositeMode;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionDropShadowSourcePolicy : int CompositionDropShadowSourcePolicy;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionEffectFactoryLoadStatus : int CompositionEffectFactoryLoadStatus;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionGetValueStatus : int CompositionGetValueStatus;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionGradientExtendMode : int CompositionGradientExtendMode;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionIslandVisibilityHints : int CompositionIslandVisibilityHints;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionMappingMode : int CompositionMappingMode;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionProjectedShadowDrawOrder : int CompositionProjectedShadowDrawOrder;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionStretch : int CompositionStretch;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionStrokeCap : int CompositionStrokeCap;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Composition {
            
            typedef enum CompositionStrokeLineJoin : int CompositionStrokeLineJoin;
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

























































































































































































namespace Microsoft {
    namespace UI {
        namespace Composition {
            class AmbientLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class AnimationController;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class AnimationPropertyInfo;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class BooleanKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class BounceScalarNaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class BounceVector2NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class BounceVector3NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class ColorKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionAnchor;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionAnimationGroup;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionBackdropBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionClip;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionColorBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionColorGradientStopCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionCommitBatch;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionContainerShape;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionDrawingSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionEasingFunction;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionEffectBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionEffectFactory;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionEffectSourceParameter;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionEllipseGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionGeometricClip;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionGradientBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */






namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionIslandEnvironment;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionIslandSite;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionLineGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionLinearGradientBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionMaskBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionMipmapSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionNineGridBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionNotificationDeferral;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionObject;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionPath;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionPathGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionProjectedShadow;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionProjectedShadowCasterCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionProjectedShadowReceiverUnorderedCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionPropertySet;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionRadialGradientBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionRectangleGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionRoundedRectangleGeometry;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionScopedBatch;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionShadow;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionShapeCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionSpriteShape;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionStrokeDashArray;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionSurfaceBrush;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionTarget;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionTransform;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionViewBox;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionVirtualDrawingSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CompositionVisualSurface;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class Compositor;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class ContainerVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class CubicBezierEasingFunction;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class DistantLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class DropShadow;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class ExpressionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class ImplicitAnimationCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class InitialValueExpressionCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class InsetClip;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class KeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class LayerVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class LinearEasingFunction;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class PathKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class PointLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class PopupIslandSite;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class QuaternionKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class RedirectVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class ScalarKeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class ScalarNaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class ShapeVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class SpotLight;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class SpringScalarNaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class SpringVector2NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class SpringVector3NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class SpriteVisual;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class StepEasingFunction;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class SwapChainIsland;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class Vector2KeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class Vector2NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class Vector3KeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class Vector3NaturalMotionAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class Vector4KeyFrameAnimation;
        } /* Composition */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Composition {
            class VisualCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */





namespace Microsoft {
    namespace UI {
        namespace Composition {
            class VisualTreeIsland;
        } /* Composition */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class VisualUnorderedCollection;
        } /* Composition */
    } /* UI */
} /* Microsoft */











/*
 *
 * Struct Microsoft.UI.Composition.AnimationControllerProgressBehavior
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum AnimationControllerProgressBehavior : int
            {
                AnimationControllerProgressBehavior_Default = 0,
                AnimationControllerProgressBehavior_IncludesDelayTime = 1,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationDelayBehavior
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum AnimationDelayBehavior : int
            {
                AnimationDelayBehavior_SetInitialValueAfterDelay = 0,
                AnimationDelayBehavior_SetInitialValueBeforeDelay = 1,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationDirection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum AnimationDirection : int
            {
                AnimationDirection_Normal = 0,
                AnimationDirection_Reverse = 1,
                AnimationDirection_Alternate = 2,
                AnimationDirection_AlternateReverse = 3,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationIterationBehavior
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum AnimationIterationBehavior : int
            {
                AnimationIterationBehavior_Count = 0,
                AnimationIterationBehavior_Forever = 1,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationPropertyAccessMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum AnimationPropertyAccessMode : int
            {
                AnimationPropertyAccessMode_None = 0,
                AnimationPropertyAccessMode_ReadOnly = 1,
                AnimationPropertyAccessMode_WriteOnly = 2,
                AnimationPropertyAccessMode_ReadWrite = 3,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationStopBehavior
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum AnimationStopBehavior : int
            {
                AnimationStopBehavior_LeaveCurrentValue = 0,
                AnimationStopBehavior_SetToInitialValue = 1,
                AnimationStopBehavior_SetToFinalValue = 2,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionBackfaceVisibility
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionBackfaceVisibility : int
            {
                CompositionBackfaceVisibility_Inherit = 0,
                CompositionBackfaceVisibility_Visible = 1,
                CompositionBackfaceVisibility_Hidden = 2,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionBatchTypes
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, flags, experimental, contract] */
            enum CompositionBatchTypes : unsigned int
            {
                CompositionBatchTypes_None = 0,
                CompositionBatchTypes_Animation = 0x1,
                CompositionBatchTypes_Effect = 0x2,
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBatchTypes_InfiniteAnimation = 0x4,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBatchTypes_AllAnimations = 0x5,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
            };
            
            DEFINE_ENUM_FLAG_OPERATORS(CompositionBatchTypes)
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionBitmapInterpolationMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionBitmapInterpolationMode : int
            {
                CompositionBitmapInterpolationMode_NearestNeighbor = 0,
                CompositionBitmapInterpolationMode_Linear = 1,
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBitmapInterpolationMode_MagLinearMinLinearMipLinear = 2,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBitmapInterpolationMode_MagLinearMinLinearMipNearest = 3,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBitmapInterpolationMode_MagLinearMinNearestMipLinear = 4,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBitmapInterpolationMode_MagLinearMinNearestMipNearest = 5,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBitmapInterpolationMode_MagNearestMinLinearMipLinear = 6,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBitmapInterpolationMode_MagNearestMinLinearMipNearest = 7,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBitmapInterpolationMode_MagNearestMinNearestMipLinear = 8,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionBitmapInterpolationMode_MagNearestMinNearestMipNearest = 9,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionBorderMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionBorderMode : int
            {
                CompositionBorderMode_Inherit = 0,
                CompositionBorderMode_Soft = 1,
                CompositionBorderMode_Hard = 2,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionColorSpace
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionColorSpace : int
            {
                CompositionColorSpace_Auto = 0,
                CompositionColorSpace_Hsl = 1,
                CompositionColorSpace_Rgb = 2,
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionColorSpace_HslLinear = 3,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionColorSpace_RgbLinear = 4,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionCompositeMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionCompositeMode : int
            {
                CompositionCompositeMode_Inherit = 0,
                CompositionCompositeMode_SourceOver = 1,
                CompositionCompositeMode_DestinationInvert = 2,
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
                CompositionCompositeMode_MinBlend = 3,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
                
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionDropShadowSourcePolicy
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionDropShadowSourcePolicy : int
            {
                CompositionDropShadowSourcePolicy_Default = 0,
                CompositionDropShadowSourcePolicy_InheritFromVisualContent = 1,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionEffectFactoryLoadStatus : int
            {
                CompositionEffectFactoryLoadStatus_Success = 0,
                CompositionEffectFactoryLoadStatus_EffectTooComplex = 1,
                CompositionEffectFactoryLoadStatus_Pending = 2,
                CompositionEffectFactoryLoadStatus_Other = -1,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionGetValueStatus
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionGetValueStatus : int
            {
                CompositionGetValueStatus_Succeeded = 0,
                CompositionGetValueStatus_TypeMismatch = 1,
                CompositionGetValueStatus_NotFound = 2,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionGradientExtendMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionGradientExtendMode : int
            {
                CompositionGradientExtendMode_Clamp = 0,
                CompositionGradientExtendMode_Wrap = 1,
                CompositionGradientExtendMode_Mirror = 2,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionIslandVisibilityHints
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionIslandVisibilityHints : int
            {
                CompositionIslandVisibilityHints_Visible = 0,
                CompositionIslandVisibilityHints_CompletelyOcculuded = 1,
                CompositionIslandVisibilityHints_FullyTransparent = 2,
                CompositionIslandVisibilityHints_NotTreeVisible = 4,
                CompositionIslandVisibilityHints_NotConnectedToRoot = 8,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionMappingMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionMappingMode : int
            {
                CompositionMappingMode_Absolute = 0,
                CompositionMappingMode_Relative = 1,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionProjectedShadowDrawOrder : int
            {
                CompositionProjectedShadowDrawOrder_PostChildren = 0,
                CompositionProjectedShadowDrawOrder_PreChildren = 1,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionStretch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionStretch : int
            {
                CompositionStretch_None = 0,
                CompositionStretch_Fill = 1,
                CompositionStretch_Uniform = 2,
                CompositionStretch_UniformToFill = 3,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionStrokeCap
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionStrokeCap : int
            {
                CompositionStrokeCap_Flat = 0,
                CompositionStrokeCap_Square = 1,
                CompositionStrokeCap_Round = 2,
                CompositionStrokeCap_Triangle = 3,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionStrokeLineJoin
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [v1_enum, experimental, contract] */
            enum CompositionStrokeLineJoin : int
            {
                CompositionStrokeLineJoin_Miter = 0,
                CompositionStrokeLineJoin_Bevel = 1,
                CompositionStrokeLineJoin_Round = 2,
                CompositionStrokeLineJoin_MiterOrBevel = 3,
            };
            
        } /* Composition */
    } /* UI */
} /* Microsoft */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Composition.CompositionNotificationDeferralCompletedHandler
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("8CC7DBBB-3876-5F86-899B-184009EFFDD9"), contract] */
            MIDL_INTERFACE("8CC7DBBB-3876-5F86-899B-184009EFFDD9")
            ICompositionNotificationDeferralCompletedHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */UINT32 connection
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionNotificationDeferralCompletedHandler=_uuidof(ICompositionNotificationDeferralCompletedHandler);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAmbientLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AmbientLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAmbientLight[] = L"Microsoft.UI.Composition.IAmbientLight";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("4540525E-B70D-5A14-BBFA-63BEF42313C7"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("4540525E-B70D-5A14-BBFA-63BEF42313C7")
            IAmbientLight : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Color(
                    /* [retval, out] */Windows::UI::Color * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Color(
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAmbientLight=_uuidof(IAmbientLight);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAmbientLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAmbientLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AmbientLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAmbientLight2[] = L"Microsoft.UI.Composition.IAmbientLight2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("3356F963-040C-54D4-9DFC-B61C51AAADD1"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("3356F963-040C-54D4-9DFC-B61C51AAADD1")
            IAmbientLight2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Intensity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Intensity(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAmbientLight2=_uuidof(IAmbientLight2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAmbientLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAnimationController
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AnimationController
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAnimationController[] = L"Microsoft.UI.Composition.IAnimationController";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("BD0F88A8-A415-5322-8C3D-1A6D9192754F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("BD0F88A8-A415-5322-8C3D-1A6D9192754F")
            IAnimationController : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PlaybackRate(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_PlaybackRate(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Progress(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Progress(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ProgressBehavior(
                    /* [retval, out] */Microsoft::UI::Composition::AnimationControllerProgressBehavior * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ProgressBehavior(
                    /* [in] */Microsoft::UI::Composition::AnimationControllerProgressBehavior value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Pause(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Resume(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAnimationController=_uuidof(IAnimationController);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAnimationController;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAnimationControllerStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AnimationController
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAnimationControllerStatics[] = L"Microsoft.UI.Composition.IAnimationControllerStatics";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("B63B0FB6-286B-57AF-B096-16066D43DC00"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("B63B0FB6-286B-57AF-B096-16066D43DC00")
            IAnimationControllerStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxPlaybackRate(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinPlaybackRate(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAnimationControllerStatics=_uuidof(IAnimationControllerStatics);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAnimationControllerStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAnimationObject
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAnimationObject[] = L"Microsoft.UI.Composition.IAnimationObject";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("8F56119D-B96D-58D0-9916-D1C5E390F890"), experimental, contract] */
            MIDL_INTERFACE("8F56119D-B96D-58D0-9916-D1C5E390F890")
            IAnimationObject : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE PopulatePropertyInfo(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Microsoft::UI::Composition::IAnimationPropertyInfo * propertyInfo
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAnimationObject=_uuidof(IAnimationObject);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAnimationObject;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAnimationPropertyInfo
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AnimationPropertyInfo
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAnimationPropertyInfo[] = L"Microsoft.UI.Composition.IAnimationPropertyInfo";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("3D721A2B-9CCD-57BD-B6C2-CE9E04AE3606"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("3D721A2B-9CCD-57BD-B6C2-CE9E04AE3606")
            IAnimationPropertyInfo : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AccessMode(
                    /* [retval, out] */Microsoft::UI::Composition::AnimationPropertyAccessMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AccessMode(
                    /* [in] */Microsoft::UI::Composition::AnimationPropertyAccessMode value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAnimationPropertyInfo=_uuidof(IAnimationPropertyInfo);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IBooleanKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.BooleanKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IBooleanKeyFrameAnimation[] = L"Microsoft.UI.Composition.IBooleanKeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7FE485E9-E874-5FF3-8DDC-826C3818BFC3"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7FE485E9-E874-5FF3-8DDC-826C3818BFC3")
            IBooleanKeyFrameAnimation : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBooleanKeyFrameAnimation=_uuidof(IBooleanKeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IBounceScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("1C0C4B76-C4D6-5DD9-8DD6-DBE35C7B7E55"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("1C0C4B76-C4D6-5DD9-8DD6-DBE35C7B7E55")
            IBounceScalarNaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Acceleration(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Acceleration(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Restitution(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Restitution(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBounceScalarNaturalMotionAnimation=_uuidof(IBounceScalarNaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IBounceVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("EC528D1F-22E2-573E-AB87-757071E50012"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("EC528D1F-22E2-573E-AB87-757071E50012")
            IBounceVector2NaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Acceleration(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Acceleration(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Restitution(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Restitution(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBounceVector2NaturalMotionAnimation=_uuidof(IBounceVector2NaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IBounceVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("E3E2EE98-1211-586D-8A6D-FEA5EFC3957F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("E3E2EE98-1211-586D-8A6D-FEA5EFC3957F")
            IBounceVector3NaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Acceleration(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Acceleration(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Restitution(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Restitution(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBounceVector3NaturalMotionAnimation=_uuidof(IBounceVector3NaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IColorKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ColorKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IColorKeyFrameAnimation[] = L"Microsoft.UI.Composition.IColorKeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("F0237928-353C-5867-BE93-71547E989F44"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("F0237928-353C-5867-BE93-71547E989F44")
            IColorKeyFrameAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InterpolationColorSpace(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionColorSpace * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InterpolationColorSpace(
                    /* [in] */Microsoft::UI::Composition::CompositionColorSpace value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::UI::Color value,
                    /* [in] */Microsoft::UI::Composition::ICompositionEasingFunction * easingFunction
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IColorKeyFrameAnimation=_uuidof(IColorKeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnchor
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnchor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnchor_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnchor_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnchor[] = L"Microsoft.UI.Composition.ICompositionAnchor";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("DED3F36B-2897-561E-87E5-081F5867F623"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("DED3F36B-2897-561E-87E5-081F5867F623")
            ICompositionAnchor : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionAnchor=_uuidof(ICompositionAnchor);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnchor;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnchor_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimation[] = L"Microsoft.UI.Composition.ICompositionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("A829CCC8-6FDE-5B90-AD37-EFD307E1B631"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("A829CCC8-6FDE-5B90-AD37-EFD307E1B631")
            ICompositionAnimation : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE ClearAllParameters(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE ClearParameter(
                    /* [in] */HSTRING key
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetColorParameter(
                    /* [in] */HSTRING key,
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetMatrix3x2Parameter(
                    /* [in] */HSTRING key,
                    /* [in] */Windows::Foundation::Numerics::Matrix3x2 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetMatrix4x4Parameter(
                    /* [in] */HSTRING key,
                    /* [in] */Windows::Foundation::Numerics::Matrix4x4 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetQuaternionParameter(
                    /* [in] */HSTRING key,
                    /* [in] */Windows::Foundation::Numerics::Quaternion value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetReferenceParameter(
                    /* [in] */HSTRING key,
                    /* [in] */Microsoft::UI::Composition::ICompositionObject * compositionObject
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetScalarParameter(
                    /* [in] */HSTRING key,
                    /* [in] */FLOAT value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetVector2Parameter(
                    /* [in] */HSTRING key,
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetVector3Parameter(
                    /* [in] */HSTRING key,
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetVector4Parameter(
                    /* [in] */HSTRING key,
                    /* [in] */Windows::Foundation::Numerics::Vector4 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionAnimation=_uuidof(ICompositionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimation2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimation2[] = L"Microsoft.UI.Composition.ICompositionAnimation2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("0926EB58-8965-5C74-BDAC-852EBB5E8542"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("0926EB58-8965-5C74-BDAC-852EBB5E8542")
            ICompositionAnimation2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE SetBooleanParameter(
                    /* [in] */HSTRING key,
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Target(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Target(
                    /* [in] */HSTRING value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionAnimation2=_uuidof(ICompositionAnimation2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimation2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimation3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimation3[] = L"Microsoft.UI.Composition.ICompositionAnimation3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("60063F53-4167-5914-A2F1-9EFCC2F86C76"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("60063F53-4167-5914-A2F1-9EFCC2F86C76")
            ICompositionAnimation3 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InitialValueExpressions(
                    /* [retval, out] */__FIMap_2_HSTRING_HSTRING * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionAnimation3=_uuidof(ICompositionAnimation3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimation3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimation4
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimation4[] = L"Microsoft.UI.Composition.ICompositionAnimation4";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C4101447-DFE4-597F-B5BC-96443F5D18A1"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C4101447-DFE4-597F-B5BC-96443F5D18A1")
            ICompositionAnimation4 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE SetExpressionReferenceParameter(
                    /* [in] */HSTRING parameterName,
                    /* [in] */Microsoft::UI::Composition::IAnimationObject * source
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionAnimation4=_uuidof(ICompositionAnimation4);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimation4;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimationBase
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimationBase[] = L"Microsoft.UI.Composition.ICompositionAnimationBase";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("A77C0E5A-F059-4E85-BCEF-C068694CEC78"), experimental, contract] */
            MIDL_INTERFACE("A77C0E5A-F059-4E85-BCEF-C068694CEC78")
            ICompositionAnimationBase : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionAnimationBase=_uuidof(ICompositionAnimationBase);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimationBase;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimationFactory[] = L"Microsoft.UI.Composition.ICompositionAnimationFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("2ED278CA-4CCA-5F7F-8D47-F930552A7769"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("2ED278CA-4CCA-5F7F-8D47-F930552A7769")
            ICompositionAnimationFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionAnimationFactory=_uuidof(ICompositionAnimationFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimationGroup
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimationGroup
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimationGroup[] = L"Microsoft.UI.Composition.ICompositionAnimationGroup";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("A51CDCAC-B972-5AE7-81D0-9D91C71ECB7A"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("A51CDCAC-B972-5AE7-81D0-9D91C71ECB7A")
            ICompositionAnimationGroup : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Count(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Add(
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimation * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Remove(
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimation * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionAnimationGroup=_uuidof(ICompositionAnimationGroup);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimationGroup;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionBackdropBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionBackdropBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionBackdropBrush[] = L"Microsoft.UI.Composition.ICompositionBackdropBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6C866BB3-172A-570C-82AC-BF9848D99A59"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("6C866BB3-172A-570C-82AC-BF9848D99A59")
            ICompositionBackdropBrush : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionBackdropBrush=_uuidof(ICompositionBackdropBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionBackdropBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionBatchCompletedEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionBatchCompletedEventArgs[] = L"Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("AC400334-4358-5FB0-BFC3-117FE581998F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("AC400334-4358-5FB0-BFC3-117FE581998F")
            ICompositionBatchCompletedEventArgs : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionBatchCompletedEventArgs=_uuidof(ICompositionBatchCompletedEventArgs);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionBrush[] = L"Microsoft.UI.Composition.ICompositionBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("483924E7-99A5-5377-968B-DEC6D40BBCCD"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("483924E7-99A5-5377-968B-DEC6D40BBCCD")
            ICompositionBrush : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionBrush=_uuidof(ICompositionBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionBrushFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionBrushFactory[] = L"Microsoft.UI.Composition.ICompositionBrushFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("ABF2B354-7130-53D9-8324-365D7E02EDE7"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("ABF2B354-7130-53D9-8324-365D7E02EDE7")
            ICompositionBrushFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionBrushFactory=_uuidof(ICompositionBrushFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionBrushFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionCapabilities
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionCapabilities
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionCapabilities[] = L"Microsoft.UI.Composition.ICompositionCapabilities";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7689BF12-75C0-52EA-81CB-463ED1C16C45"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7689BF12-75C0-52EA-81CB-463ED1C16C45")
            ICompositionCapabilities : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE AreEffectsSupported(
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE AreEffectsFast(
                    /* [retval, out] */::boolean * result
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Changed(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Changed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionCapabilities=_uuidof(ICompositionCapabilities);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionCapabilities;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionCapabilitiesStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionCapabilities
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionCapabilitiesStatics[] = L"Microsoft.UI.Composition.ICompositionCapabilitiesStatics";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6AB5C5B7-F23D-5B7A-B44D-D87A54AF8FE4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("6AB5C5B7-F23D-5B7A-B44D-D87A54AF8FE4")
            ICompositionCapabilitiesStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetForCurrentView(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionCapabilities * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionCapabilitiesStatics=_uuidof(ICompositionCapabilitiesStatics);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionClip[] = L"Microsoft.UI.Composition.ICompositionClip";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("B66B55CB-B5A5-5BEE-8972-AE78233CB34C"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("B66B55CB-B5A5-5BEE-8972-AE78233CB34C")
            ICompositionClip : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionClip=_uuidof(ICompositionClip);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionClip;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionClip2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionClip2[] = L"Microsoft.UI.Composition.ICompositionClip2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("CDF6BF80-AFD7-57DC-8148-6CCBBB5D78BB"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("CDF6BF80-AFD7-57DC-8148-6CCBBB5D78BB")
            ICompositionClip2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AnchorPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AnchorPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Scale(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Scale(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                    /* [retval, out] */Windows::Foundation::Numerics::Matrix3x2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                    /* [in] */Windows::Foundation::Numerics::Matrix3x2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionClip2=_uuidof(ICompositionClip2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionClip2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionClipFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionClipFactory[] = L"Microsoft.UI.Composition.ICompositionClipFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("611DEC65-D302-52BC-92AB-A295BD141AE4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("611DEC65-D302-52BC-92AB-A295BD141AE4")
            ICompositionClipFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionClipFactory=_uuidof(ICompositionClipFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionClipFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionColorBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionColorBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionColorBrush[] = L"Microsoft.UI.Composition.ICompositionColorBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("3F8FFB69-3E71-55A7-8E79-F27A214C56AE"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("3F8FFB69-3E71-55A7-8E79-F27A214C56AE")
            ICompositionColorBrush : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Color(
                    /* [retval, out] */Windows::UI::Color * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Color(
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionColorBrush=_uuidof(ICompositionColorBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionColorBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionColorGradientStop
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionColorGradientStop
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionColorGradientStop[] = L"Microsoft.UI.Composition.ICompositionColorGradientStop";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("868030D8-C5C0-5DD8-A765-E32CD3497AA9"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("868030D8-C5C0-5DD8-A765-E32CD3497AA9")
            ICompositionColorGradientStop : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Color(
                    /* [retval, out] */Windows::UI::Color * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Color(
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionColorGradientStop=_uuidof(ICompositionColorGradientStop);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionColorGradientStop;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionColorGradientStopCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionColorGradientStopCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionColorGradientStopCollection[] = L"Microsoft.UI.Composition.ICompositionColorGradientStopCollection";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("4794CB29-CE9D-5837-9FC9-847DF3E197DE"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("4794CB29-CE9D-5837-9FC9-847DF3E197DE")
            ICompositionColorGradientStopCollection : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionColorGradientStopCollection=_uuidof(ICompositionColorGradientStopCollection);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionCommitBatch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionCommitBatch
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionCommitBatch[] = L"Microsoft.UI.Composition.ICompositionCommitBatch";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C4550FA8-A7F2-5259-BF74-33B2F5240A28"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C4550FA8-A7F2-5259-BF74-33B2F5240A28")
            ICompositionCommitBatch : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsActive(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsEnded(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Completed(
                    /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Completed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionCommitBatch=_uuidof(ICompositionCommitBatch);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionCommitBatch;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionContainerShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionContainerShape
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionContainerShape[] = L"Microsoft.UI.Composition.ICompositionContainerShape";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("064AABD5-2DAB-52D3-824B-C72456540F29"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("064AABD5-2DAB-52D3-824B-C72456540F29")
            ICompositionContainerShape : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Shapes(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionContainerShape=_uuidof(ICompositionContainerShape);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionContainerShape;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionDrawingSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionDrawingSurface[] = L"Microsoft.UI.Composition.ICompositionDrawingSurface";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("BF6D23B5-0117-58DE-BF21-AD672B2B6128"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("BF6D23B5-0117-58DE-BF21-AD672B2B6128")
            ICompositionDrawingSurface : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                    /* [retval, out] */Windows::Graphics::DirectX::DirectXAlphaMode * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PixelFormat(
                    /* [retval, out] */Windows::Graphics::DirectX::DirectXPixelFormat * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Size(
                    /* [retval, out] */Windows::Foundation::Size * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionDrawingSurface=_uuidof(ICompositionDrawingSurface);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionDrawingSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionDrawingSurface2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionDrawingSurface2[] = L"Microsoft.UI.Composition.ICompositionDrawingSurface2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6BE6F652-BEC8-5ADF-A6AF-5ACFC00A968E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("6BE6F652-BEC8-5ADF-A6AF-5ACFC00A968E")
            ICompositionDrawingSurface2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SizeInt32(
                    /* [retval, out] */Windows::Graphics::SizeInt32 * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Resize(
                    /* [in] */Windows::Graphics::SizeInt32 sizePixels
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE Scroll(
                    /* [in] */Windows::Graphics::PointInt32 offset
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE ScrollRect(
                    /* [in] */Windows::Graphics::PointInt32 offset,
                    /* [in] */Windows::Graphics::RectInt32 scrollRect
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE ScrollWithClip(
                    /* [in] */Windows::Graphics::PointInt32 offset,
                    /* [in] */Windows::Graphics::RectInt32 clipRect
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE ScrollRectWithClip(
                    /* [in] */Windows::Graphics::PointInt32 offset,
                    /* [in] */Windows::Graphics::RectInt32 clipRect,
                    /* [in] */Windows::Graphics::RectInt32 scrollRect
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionDrawingSurface2=_uuidof(ICompositionDrawingSurface2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionDrawingSurfaceFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionDrawingSurfaceFactory[] = L"Microsoft.UI.Composition.ICompositionDrawingSurfaceFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("4791E19A-C83B-58B0-AC86-DFC58494F5F9"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("4791E19A-C83B-58B0-AC86-DFC58494F5F9")
            ICompositionDrawingSurfaceFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionDrawingSurfaceFactory=_uuidof(ICompositionDrawingSurfaceFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEasingFunction[] = L"Microsoft.UI.Composition.ICompositionEasingFunction";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("8E1ECD0D-57D8-5BC9-9BCD-E43D0DD733C4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("8E1ECD0D-57D8-5BC9-9BCD-E43D0DD733C4")
            ICompositionEasingFunction : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionEasingFunction=_uuidof(ICompositionEasingFunction);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEasingFunction;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEasingFunctionFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEasingFunctionFactory[] = L"Microsoft.UI.Composition.ICompositionEasingFunctionFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7D7D32C3-574B-5620-9902-DB426851802F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7D7D32C3-574B-5620-9902-DB426851802F")
            ICompositionEasingFunctionFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionEasingFunctionFactory=_uuidof(ICompositionEasingFunctionFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEffectBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEffectBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEffectBrush[] = L"Microsoft.UI.Composition.ICompositionEffectBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("62E0BBAB-1F45-5A44-9DDF-F0C38A02ED85"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("62E0BBAB-1F45-5A44-9DDF-F0C38A02ED85")
            ICompositionEffectBrush : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetSourceParameter(
                    /* [in] */HSTRING name,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetSourceParameter(
                    /* [in] */HSTRING name,
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * source
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionEffectBrush=_uuidof(ICompositionEffectBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEffectBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEffectFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEffectFactory
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEffectFactory[] = L"Microsoft.UI.Composition.ICompositionEffectFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C50F407A-0231-5ED2-B7A7-CA66D3E14B3B"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C50F407A-0231-5ED2-B7A7-CA66D3E14B3B")
            ICompositionEffectFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionEffectBrush * * result
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ExtendedError(
                    /* [retval, out] */HRESULT * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LoadStatus(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionEffectFactoryLoadStatus * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionEffectFactory=_uuidof(ICompositionEffectFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEffectFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEffectSourceParameter
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEffectSourceParameter
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEffectSourceParameter[] = L"Microsoft.UI.Composition.ICompositionEffectSourceParameter";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("BECE3367-5704-59F7-BE8C-D6293AF9C95F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("BECE3367-5704-59F7-BE8C-D6293AF9C95F")
            ICompositionEffectSourceParameter : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Name(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionEffectSourceParameter=_uuidof(ICompositionEffectSourceParameter);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEffectSourceParameter
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEffectSourceParameterFactory[] = L"Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("26185954-4489-5D0E-AE4D-7BC4BBBC6161"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("26185954-4489-5D0E-AE4D-7BC4BBBC6161")
            ICompositionEffectSourceParameterFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Create(
                    /* [in] */HSTRING name,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionEffectSourceParameter * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionEffectSourceParameterFactory=_uuidof(ICompositionEffectSourceParameterFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEllipseGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEllipseGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEllipseGeometry[] = L"Microsoft.UI.Composition.ICompositionEllipseGeometry";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("F2A21042-7A57-58C1-8B47-8BC8B21D3AA0"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("F2A21042-7A57-58C1-8B47-8BC8B21D3AA0")
            ICompositionEllipseGeometry : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Center(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Center(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Radius(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Radius(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionEllipseGeometry=_uuidof(ICompositionEllipseGeometry);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGeometricClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGeometricClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGeometricClip[] = L"Microsoft.UI.Composition.ICompositionGeometricClip";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("E3C0A8C5-5297-5D69-8B91-F5330BB1CB27"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("E3C0A8C5-5297-5D69-8B91-F5330BB1CB27")
            ICompositionGeometricClip : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Geometry(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionGeometry * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Geometry(
                    /* [in] */Microsoft::UI::Composition::ICompositionGeometry * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ViewBox(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionViewBox * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ViewBox(
                    /* [in] */Microsoft::UI::Composition::ICompositionViewBox * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGeometricClip=_uuidof(ICompositionGeometricClip);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGeometricClip;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGeometry[] = L"Microsoft.UI.Composition.ICompositionGeometry";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("4E40BDB2-450B-5A81-9E9B-149417980CC4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("4E40BDB2-450B-5A81-9E9B-149417980CC4")
            ICompositionGeometry : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TrimEnd(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TrimEnd(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TrimOffset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TrimOffset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TrimStart(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TrimStart(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGeometry=_uuidof(ICompositionGeometry);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGeometryFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGeometryFactory[] = L"Microsoft.UI.Composition.ICompositionGeometryFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("B2FB802B-C691-5554-8312-9C6D358D6B9E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("B2FB802B-C691-5554-8312-9C6D358D6B9E")
            ICompositionGeometryFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGeometryFactory=_uuidof(ICompositionGeometryFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGeometryFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGradientBrush[] = L"Microsoft.UI.Composition.ICompositionGradientBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("9165D1FB-C738-5F44-ADDC-309EE071D588"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("9165D1FB-C738-5F44-ADDC-309EE071D588")
            ICompositionGradientBrush : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AnchorPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AnchorPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ColorStops(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionColorGradientStopCollection * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ExtendMode(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGradientExtendMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ExtendMode(
                    /* [in] */Microsoft::UI::Composition::CompositionGradientExtendMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InterpolationSpace(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionColorSpace * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InterpolationSpace(
                    /* [in] */Microsoft::UI::Composition::CompositionColorSpace value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Scale(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Scale(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                    /* [retval, out] */Windows::Foundation::Numerics::Matrix3x2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                    /* [in] */Windows::Foundation::Numerics::Matrix3x2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGradientBrush=_uuidof(ICompositionGradientBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGradientBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGradientBrush2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGradientBrush2[] = L"Microsoft.UI.Composition.ICompositionGradientBrush2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("03E9EDF3-EE3D-58FC-8C0B-95E4B6060A94"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("03E9EDF3-EE3D-58FC-8C0B-95E4B6060A94")
            ICompositionGradientBrush2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MappingMode(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionMappingMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MappingMode(
                    /* [in] */Microsoft::UI::Composition::CompositionMappingMode value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGradientBrush2=_uuidof(ICompositionGradientBrush2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGradientBrush2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGradientBrushFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGradientBrushFactory[] = L"Microsoft.UI.Composition.ICompositionGradientBrushFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("B043B155-4B40-590D-A0D9-F8C1A7E0C88F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("B043B155-4B40-590D-A0D9-F8C1A7E0C88F")
            ICompositionGradientBrushFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGradientBrushFactory=_uuidof(ICompositionGradientBrushFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGraphicsDevice
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGraphicsDevice
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGraphicsDevice[] = L"Microsoft.UI.Composition.ICompositionGraphicsDevice";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("EC99495F-AE5A-5680-B4D3-82E6ABCB20FB"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("EC99495F-AE5A-5680-B4D3-82E6ABCB20FB")
            ICompositionGraphicsDevice : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateDrawingSurface(
                    /* [in] */Windows::Foundation::Size sizePixels,
                    /* [in] */Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                    /* [in] */Windows::Graphics::DirectX::DirectXAlphaMode alphaMode,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionDrawingSurface * * result
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_RenderingDeviceReplaced(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_RenderingDeviceReplaced(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGraphicsDevice=_uuidof(ICompositionGraphicsDevice);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGraphicsDevice2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGraphicsDevice
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGraphicsDevice2[] = L"Microsoft.UI.Composition.ICompositionGraphicsDevice2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("72DD5DD9-B2B5-5FFA-B835-84CF3D57F8DB"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("72DD5DD9-B2B5-5FFA-B835-84CF3D57F8DB")
            ICompositionGraphicsDevice2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateDrawingSurface2(
                    /* [in] */Windows::Graphics::SizeInt32 sizePixels,
                    /* [in] */Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                    /* [in] */Windows::Graphics::DirectX::DirectXAlphaMode alphaMode,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionDrawingSurface * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateVirtualDrawingSurface(
                    /* [in] */Windows::Graphics::SizeInt32 sizePixels,
                    /* [in] */Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                    /* [in] */Windows::Graphics::DirectX::DirectXAlphaMode alphaMode,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionVirtualDrawingSurface * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGraphicsDevice2=_uuidof(ICompositionGraphicsDevice2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGraphicsDevice3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGraphicsDevice
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGraphicsDevice3[] = L"Microsoft.UI.Composition.ICompositionGraphicsDevice3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("1B248AAE-F59E-586C-9E1C-DD19AA54B0A5"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("1B248AAE-F59E-586C-9E1C-DD19AA54B0A5")
            ICompositionGraphicsDevice3 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateMipmapSurface(
                    /* [in] */Windows::Graphics::SizeInt32 sizePixels,
                    /* [in] */Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                    /* [in] */Windows::Graphics::DirectX::DirectXAlphaMode alphaMode,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionMipmapSurface * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Trim(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionGraphicsDevice3=_uuidof(ICompositionGraphicsDevice3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIsland_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIsland_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIsland[] = L"Microsoft.UI.Composition.ICompositionIsland";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7CE745FC-2E3F-58BD-B536-3D47A52E83A0"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7CE745FC-2E3F-58BD-B536-3D47A52E83A0")
            ICompositionIsland : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualSize(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AutomationHostProvider(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DisplayScale(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Environment(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionIslandEnvironment * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Environment(
                    /* [in] */Microsoft::UI::Composition::ICompositionIslandEnvironment * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Id(
                    /* [retval, out] */UINT64 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsContentVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsContentVisible(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsSiteVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Orientation(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RasterizationScale(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RequestedSize(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RequestedSize(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SnapToPixelAdjustment(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VisiblityHints(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionIslandVisibilityHints * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateStateChangedDeferral(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionNotificationDeferral * * result
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_AutomationProviderRequested(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_AutomationProviderRequested(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Closed(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Closed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_CompositorConnected(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_CompositorConnected(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_StateChanged(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_StateChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIsland=_uuidof(ICompositionIsland);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIsland;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIsland_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandAutomationProviderRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandAutomationProviderRequestedEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandAutomationProviderRequestedEventArgs[] = L"Microsoft.UI.Composition.ICompositionIslandAutomationProviderRequestedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("5D51EE3F-F962-50A9-8296-26558307B6F0"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("5D51EE3F-F962-50A9-8296-26558307B6F0")
            ICompositionIslandAutomationProviderRequestedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AutomationProvider(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AutomationProvider(
                    /* [in] */IInspectable * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIslandAutomationProviderRequestedEventArgs=_uuidof(ICompositionIslandAutomationProviderRequestedEventArgs);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandEnvironment
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandEnvironment
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandEnvironment[] = L"Microsoft.UI.Composition.ICompositionIslandEnvironment";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("3E52A90A-89D2-5EE3-92AC-7565A4B3FDCE"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("3E52A90A-89D2-5EE3-92AC-7565A4B3FDCE")
            ICompositionIslandEnvironment : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DefaultOrientation(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DefaultRasterizationScale(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DisplayScale(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ChangeValues(
                    /* [in] */Windows::Foundation::Numerics::Vector3 defaultOrientation,
                    /* [in] */FLOAT defaultRasterizationScale,
                    /* [in] */FLOAT displayScale
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIslandEnvironment=_uuidof(ICompositionIslandEnvironment);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandEnvironmentStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandEnvironment
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandEnvironmentStatics[] = L"Microsoft.UI.Composition.ICompositionIslandEnvironmentStatics";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("31AD3870-F397-5742-A704-ADF767577613"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("31AD3870-F397-5742-A704-ADF767577613")
            ICompositionIslandEnvironmentStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Create(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionIslandEnvironment * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIslandEnvironmentStatics=_uuidof(ICompositionIslandEnvironmentStatics);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandEventArgs[] = L"Microsoft.UI.Composition.ICompositionIslandEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7A196583-EE7A-5783-B4C0-5E9473DB6474"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7A196583-EE7A-5783-B4C0-5E9473DB6474")
            ICompositionIslandEventArgs : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIslandEventArgs=_uuidof(ICompositionIslandEventArgs);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandFactory[] = L"Microsoft.UI.Composition.ICompositionIslandFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("B98A2C72-8E76-5A66-9C4B-92FB9F653DF2"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("B98A2C72-8E76-5A66-9C4B-92FB9F653DF2")
            ICompositionIslandFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIslandFactory=_uuidof(ICompositionIslandFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandSite_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandSite_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandSite[] = L"Microsoft.UI.Composition.ICompositionIslandSite";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6AC5913A-A507-5A00-9656-44B92A725C6D"), experimental, contract] */
            MIDL_INTERFACE("6AC5913A-A507-5A00-9656-44B92A725C6D")
            ICompositionIslandSite : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateTransformChangedDeferral(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionNotificationDeferral * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIslandSite=_uuidof(ICompositionIslandSite);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandSite;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandSite_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandSiteFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandSite
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandSiteFactory[] = L"Microsoft.UI.Composition.ICompositionIslandSiteFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("05EA3F9A-C6CF-5FE9-93B2-969AE75A484D"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("05EA3F9A-C6CF-5FE9-93B2-969AE75A484D")
            ICompositionIslandSiteFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIslandSiteFactory=_uuidof(ICompositionIslandSiteFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandStatics[] = L"Microsoft.UI.Composition.ICompositionIslandStatics";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("10C54EE0-CB9E-5985-B187-491DA59AB363"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("10C54EE0-CB9E-5985-B187-491DA59AB363")
            ICompositionIslandStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE ConnectIsland(
                    /* [in] */Microsoft::UI::Composition::ICompositionIslandSite * islandSite,
                    /* [in] */Microsoft::UI::Composition::ICompositionIsland * island
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE DisconnectIsland(
                    /* [in] */Microsoft::UI::Composition::ICompositionIslandSite * islandSite,
                    /* [in] */Microsoft::UI::Composition::ICompositionIsland * island
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ConnectIslandAsync(
                    /* [in] */Microsoft::UI::Composition::ICompositionIslandSite * islandSite,
                    /* [in] */Microsoft::UI::Composition::ICompositionIsland * island,
                    /* [retval, out] */Windows::Foundation::IAsyncAction * * operation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE DisconnectIslandAsync(
                    /* [in] */Microsoft::UI::Composition::ICompositionIslandSite * islandSite,
                    /* [in] */Microsoft::UI::Composition::ICompositionIsland * island,
                    /* [retval, out] */Windows::Foundation::IAsyncAction * * operation
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionIslandStatics=_uuidof(ICompositionIslandStatics);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLight[] = L"Microsoft.UI.Composition.ICompositionLight";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6D633E77-A6B8-5A2D-8235-E0C380C3B47B"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("6D633E77-A6B8-5A2D-8235-E0C380C3B47B")
            ICompositionLight : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Targets(
                    /* [retval, out] */Microsoft::UI::Composition::IVisualUnorderedCollection * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionLight=_uuidof(ICompositionLight);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLight2[] = L"Microsoft.UI.Composition.ICompositionLight2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("0BB940A4-05EF-5920-BAE1-918B36D44380"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("0BB940A4-05EF-5920-BAE1-918B36D44380")
            ICompositionLight2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ExclusionsFromTargets(
                    /* [retval, out] */Microsoft::UI::Composition::IVisualUnorderedCollection * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionLight2=_uuidof(ICompositionLight2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLight3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLight3[] = L"Microsoft.UI.Composition.ICompositionLight3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("95CE4859-DD55-5C38-A3EB-13D053CEBB1E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("95CE4859-DD55-5C38-A3EB-13D053CEBB1E")
            ICompositionLight3 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsEnabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsEnabled(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionLight3=_uuidof(ICompositionLight3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLight3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLightFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLightFactory[] = L"Microsoft.UI.Composition.ICompositionLightFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("CB29CAED-9245-51A6-BA56-ADDBAEFA54CC"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("CB29CAED-9245-51A6-BA56-ADDBAEFA54CC")
            ICompositionLightFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionLightFactory=_uuidof(ICompositionLightFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLightFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLineGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLineGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLineGeometry[] = L"Microsoft.UI.Composition.ICompositionLineGeometry";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("489F9382-C186-5936-8946-C4F927E844AA"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("489F9382-C186-5936-8946-C4F927E844AA")
            ICompositionLineGeometry : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Start(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Start(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_End(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_End(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionLineGeometry=_uuidof(ICompositionLineGeometry);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLineGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLinearGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLinearGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLinearGradientBrush[] = L"Microsoft.UI.Composition.ICompositionLinearGradientBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("F726FB52-270C-58B1-A902-89576772DEDC"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("F726FB52-270C-58B1-A902-89576772DEDC")
            ICompositionLinearGradientBrush : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_EndPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_EndPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StartPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StartPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionLinearGradientBrush=_uuidof(ICompositionLinearGradientBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionMaskBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionMaskBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionMaskBrush[] = L"Microsoft.UI.Composition.ICompositionMaskBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C9502786-65AA-5BE5-A679-C3B5DBFB0DC6"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C9502786-65AA-5BE5-A679-C3B5DBFB0DC6")
            ICompositionMaskBrush : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Mask(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Mask(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Source(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Source(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionMaskBrush=_uuidof(ICompositionMaskBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionMaskBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionMipmapSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionMipmapSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionMipmapSurface[] = L"Microsoft.UI.Composition.ICompositionMipmapSurface";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("A65F0AB0-2DBD-5D59-8C16-A0EDB5EA2990"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("A65F0AB0-2DBD-5D59-8C16-A0EDB5EA2990")
            ICompositionMipmapSurface : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LevelCount(
                    /* [retval, out] */UINT32 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AlphaMode(
                    /* [retval, out] */Windows::Graphics::DirectX::DirectXAlphaMode * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PixelFormat(
                    /* [retval, out] */Windows::Graphics::DirectX::DirectXPixelFormat * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SizeInt32(
                    /* [retval, out] */Windows::Graphics::SizeInt32 * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetDrawingSurfaceForLevel(
                    /* [in] */UINT32 level,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionDrawingSurface * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionMipmapSurface=_uuidof(ICompositionMipmapSurface);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionMipmapSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionNineGridBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionNineGridBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionNineGridBrush[] = L"Microsoft.UI.Composition.ICompositionNineGridBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C77A3D21-C7EE-517A-98F4-AD9A7202BC86"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C77A3D21-C7EE-517A-98F4-AD9A7202BC86")
            ICompositionNineGridBrush : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BottomInset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BottomInset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BottomInsetScale(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BottomInsetScale(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsCenterHollow(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsCenterHollow(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LeftInset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_LeftInset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LeftInsetScale(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_LeftInsetScale(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RightInset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RightInset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RightInsetScale(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RightInsetScale(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Source(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Source(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TopInset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TopInset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TopInsetScale(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TopInsetScale(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetInsets(
                    /* [in] */FLOAT inset
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetInsetsWithValues(
                    /* [in] */FLOAT left,
                    /* [in] */FLOAT top,
                    /* [in] */FLOAT right,
                    /* [in] */FLOAT bottom
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetInsetScales(
                    /* [in] */FLOAT scale
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetInsetScalesWithValues(
                    /* [in] */FLOAT left,
                    /* [in] */FLOAT top,
                    /* [in] */FLOAT right,
                    /* [in] */FLOAT bottom
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionNineGridBrush=_uuidof(ICompositionNineGridBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionNineGridBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionNotificationDeferral
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionNotificationDeferral
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionNotificationDeferral[] = L"Microsoft.UI.Composition.ICompositionNotificationDeferral";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("396698B7-437B-5ACF-AEC9-6342C437FAF1"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("396698B7-437B-5ACF-AEC9-6342C437FAF1")
            ICompositionNotificationDeferral : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Complete(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionNotificationDeferral=_uuidof(ICompositionNotificationDeferral);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObject
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObject[] = L"Microsoft.UI.Composition.ICompositionObject";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("0E583D49-FB5E-5481-A426-D3C41E059A5A"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("0E583D49-FB5E-5481-A426-D3C41E059A5A")
            ICompositionObject : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Compositor(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositor * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Properties(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionPropertySet * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StartAnimation(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimation * animation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StopAnimation(
                    /* [in] */HSTRING propertyName
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionObject=_uuidof(ICompositionObject);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObject;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObject2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObject2[] = L"Microsoft.UI.Composition.ICompositionObject2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("BCBBFEBF-799C-51CE-9C82-B6E49E7E62E1"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("BCBBFEBF-799C-51CE-9C82-B6E49E7E62E1")
            ICompositionObject2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Comment(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Comment(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ImplicitAnimations(
                    /* [retval, out] */Microsoft::UI::Composition::IImplicitAnimationCollection * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ImplicitAnimations(
                    /* [in] */Microsoft::UI::Composition::IImplicitAnimationCollection * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StartAnimationGroup(
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimationBase * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StopAnimationGroup(
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimationBase * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionObject2=_uuidof(ICompositionObject2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObject2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObject3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObject3[] = L"Microsoft.UI.Composition.ICompositionObject3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("E571858A-4DB6-58D7-8A77-A9F1F0281DB4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("E571858A-4DB6-58D7-8A77-A9F1F0281DB4")
            ICompositionObject3 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DispatcherQueue(
                    /* [retval, out] */Microsoft::System::IDispatcherQueue * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionObject3=_uuidof(ICompositionObject3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObject3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObject4
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObject4[] = L"Microsoft.UI.Composition.ICompositionObject4";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("029AD57C-5497-51F3-8B40-E4E235992C6F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("029AD57C-5497-51F3-8B40-E4E235992C6F")
            ICompositionObject4 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE TryGetAnimationController(
                    /* [in] */HSTRING propertyName,
                    /* [retval, out] */Microsoft::UI::Composition::IAnimationController * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionObject4=_uuidof(ICompositionObject4);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObject4;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObjectFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObjectFactory[] = L"Microsoft.UI.Composition.ICompositionObjectFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6133C5F9-CD3B-56B2-876F-EB849DB14911"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("6133C5F9-CD3B-56B2-876F-EB849DB14911")
            ICompositionObjectFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionObjectFactory=_uuidof(ICompositionObjectFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObjectFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObjectStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObjectStatics[] = L"Microsoft.UI.Composition.ICompositionObjectStatics";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("A091356C-38AE-514C-9B58-AD5C8C7936AD"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("A091356C-38AE-514C-9B58-AD5C8C7936AD")
            ICompositionObjectStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE StartAnimationWithIAnimationObject(
                    /* [in] */Microsoft::UI::Composition::IAnimationObject * target,
                    /* [in] */HSTRING propertyName,
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimation * animation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StartAnimationGroupWithIAnimationObject(
                    /* [in] */Microsoft::UI::Composition::IAnimationObject * target,
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimationBase * animation
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionObjectStatics=_uuidof(ICompositionObjectStatics);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObjectStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPath
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPath
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPath[] = L"Microsoft.UI.Composition.ICompositionPath";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("17C518C0-D7A2-54BE-AC7F-C408562A6A20"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("17C518C0-D7A2-54BE-AC7F-C408562A6A20")
            ICompositionPath : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionPath=_uuidof(ICompositionPath);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPath;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPathFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPath
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPathFactory[] = L"Microsoft.UI.Composition.ICompositionPathFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("618601F8-4CA8-53F9-8E76-5DDC40DFE7F4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("618601F8-4CA8-53F9-8E76-5DDC40DFE7F4")
            ICompositionPathFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Create(
                    /* [in] */Microsoft::Graphics::IGeometrySource2D * source,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionPath * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionPathFactory=_uuidof(ICompositionPathFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPathFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPathGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPathGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPathGeometry[] = L"Microsoft.UI.Composition.ICompositionPathGeometry";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("0F6E6B82-060B-571E-B849-AB8E0D723962"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("0F6E6B82-060B-571E-B849-AB8E0D723962")
            ICompositionPathGeometry : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Path(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionPath * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Path(
                    /* [in] */Microsoft::UI::Composition::ICompositionPath * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionPathGeometry=_uuidof(ICompositionPathGeometry);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPathGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadow[] = L"Microsoft.UI.Composition.ICompositionProjectedShadow";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("D400AB10-8B92-5ABB-9E23-807974FC6961"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("D400AB10-8B92-5ABB-9E23-807974FC6961")
            ICompositionProjectedShadow : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BlurRadiusMultiplier(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BlurRadiusMultiplier(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Casters(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionProjectedShadowCasterCollection * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LightSource(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionLight * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_LightSource(
                    /* [in] */Microsoft::UI::Composition::ICompositionLight * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxBlurRadius(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MaxBlurRadius(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinBlurRadius(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MinBlurRadius(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Receivers(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionProjectedShadowReceiverUnorderedCollection * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadow=_uuidof(ICompositionProjectedShadow);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadow;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadow2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadow2[] = L"Microsoft.UI.Composition.ICompositionProjectedShadow2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("BE1AA693-593C-5CAC-A001-B2B4CF090098"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("BE1AA693-593C-5CAC-A001-B2B4CF090098")
            ICompositionProjectedShadow2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxOpacity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MaxOpacity(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinOpacity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MinOpacity(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OpacityFalloff(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OpacityFalloff(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadow2=_uuidof(ICompositionProjectedShadow2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowCaster
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowCaster
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowCaster[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowCaster";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("15A9F2D0-6BAE-521B-90C7-C7500F2BF562"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("15A9F2D0-6BAE-521B-90C7-C7500F2BF562")
            ICompositionProjectedShadowCaster : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Brush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Brush(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CastingVisual(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CastingVisual(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadowCaster=_uuidof(ICompositionProjectedShadowCaster);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowCaster2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowCaster
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowCaster2[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowCaster2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("0EB2F457-2EE9-5745-A0FD-E11D9E111F98"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("0EB2F457-2EE9-5745-A0FD-E11D9E111F98")
            ICompositionProjectedShadowCaster2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AncestorClip(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AncestorClip(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Mask(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Mask(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadowCaster2=_uuidof(ICompositionProjectedShadowCaster2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("B120BFDC-533C-57A9-AE16-D43BA52472C4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("B120BFDC-533C-57A9-AE16-D43BA52472C4")
            ICompositionProjectedShadowCasterCollection : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Count(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertAbove(
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowCaster * newCaster,
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowCaster * reference
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertAtBottom(
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowCaster * newCaster
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertAtTop(
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowCaster * newCaster
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertBelow(
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowCaster * newCaster,
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowCaster * reference
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Remove(
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowCaster * caster
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadowCasterCollection=_uuidof(ICompositionProjectedShadowCasterCollection);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("43A98014-B88B-5B2A-B1E2-5E776AB77538"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("43A98014-B88B-5B2A-B1E2-5E776AB77538")
            ICompositionProjectedShadowCasterCollectionStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxRespectedCasters(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadowCasterCollectionStatics=_uuidof(ICompositionProjectedShadowCasterCollectionStatics);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiver
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowReceiver
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowReceiver[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowReceiver";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("29FE12B0-F1A0-50E1-AF28-2E943BC819D6"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("29FE12B0-F1A0-50E1-AF28-2E943BC819D6")
            ICompositionProjectedShadowReceiver : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ReceivingVisual(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ReceivingVisual(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadowReceiver=_uuidof(ICompositionProjectedShadowReceiver);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiver2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowReceiver
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowReceiver2[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowReceiver2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("931AF4B8-6DB0-5C6E-8B5A-2A39A83FFCEF"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("931AF4B8-6DB0-5C6E-8B5A-2A39A83FFCEF")
            ICompositionProjectedShadowReceiver2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DrawOrder(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionProjectedShadowDrawOrder * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DrawOrder(
                    /* [in] */Microsoft::UI::Composition::CompositionProjectedShadowDrawOrder value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Mask(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Mask(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadowReceiver2=_uuidof(ICompositionProjectedShadowReceiver2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("2D35F751-A1FA-5FFF-B156-6D8FCD8362ED"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("2D35F751-A1FA-5FFF-B156-6D8FCD8362ED")
            ICompositionProjectedShadowReceiverUnorderedCollection : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Add(
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowReceiver * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Count(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Remove(
                    /* [in] */Microsoft::UI::Composition::ICompositionProjectedShadowReceiver * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionProjectedShadowReceiverUnorderedCollection=_uuidof(ICompositionProjectedShadowReceiverUnorderedCollection);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPropertySet
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPropertySet
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPropertySet[] = L"Microsoft.UI.Composition.ICompositionPropertySet";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("97F7A17B-97BE-5545-9F1C-0B9D44577F57"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("97F7A17B-97BE-5545-9F1C-0B9D44577F57")
            ICompositionPropertySet : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE InsertColor(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertMatrix3x2(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Windows::Foundation::Numerics::Matrix3x2 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertMatrix4x4(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Windows::Foundation::Numerics::Matrix4x4 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertQuaternion(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Windows::Foundation::Numerics::Quaternion value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertScalar(
                    /* [in] */HSTRING propertyName,
                    /* [in] */FLOAT value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertVector2(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertVector3(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertVector4(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Windows::Foundation::Numerics::Vector4 value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetColor(
                    /* [in] */HSTRING propertyName,
                    /* [out] */Windows::UI::Color * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetMatrix3x2(
                    /* [in] */HSTRING propertyName,
                    /* [out] */Windows::Foundation::Numerics::Matrix3x2 * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetMatrix4x4(
                    /* [in] */HSTRING propertyName,
                    /* [out] */Windows::Foundation::Numerics::Matrix4x4 * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetQuaternion(
                    /* [in] */HSTRING propertyName,
                    /* [out] */Windows::Foundation::Numerics::Quaternion * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetScalar(
                    /* [in] */HSTRING propertyName,
                    /* [out] */FLOAT * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetVector2(
                    /* [in] */HSTRING propertyName,
                    /* [out] */Windows::Foundation::Numerics::Vector2 * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetVector3(
                    /* [in] */HSTRING propertyName,
                    /* [out] */Windows::Foundation::Numerics::Vector3 * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetVector4(
                    /* [in] */HSTRING propertyName,
                    /* [out] */Windows::Foundation::Numerics::Vector4 * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionPropertySet=_uuidof(ICompositionPropertySet);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPropertySet;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPropertySet2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPropertySet
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPropertySet2[] = L"Microsoft.UI.Composition.ICompositionPropertySet2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("3DB6D621-3497-55E4-95BF-8AE5E7C34C33"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("3DB6D621-3497-55E4-95BF-8AE5E7C34C33")
            ICompositionPropertySet2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE InsertBoolean(
                    /* [in] */HSTRING propertyName,
                    /* [in] */::boolean value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryGetBoolean(
                    /* [in] */HSTRING propertyName,
                    /* [out] */::boolean * value,
                    /* [retval, out] */Microsoft::UI::Composition::CompositionGetValueStatus * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionPropertySet2=_uuidof(ICompositionPropertySet2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPropertySet2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionRadialGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionRadialGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionRadialGradientBrush[] = L"Microsoft.UI.Composition.ICompositionRadialGradientBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("17662F3F-D351-5435-B3B4-EC26CEFECCC5"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("17662F3F-D351-5435-B3B4-EC26CEFECCC5")
            ICompositionRadialGradientBrush : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_EllipseCenter(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_EllipseCenter(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_EllipseRadius(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_EllipseRadius(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_GradientOriginOffset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_GradientOriginOffset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionRadialGradientBrush=_uuidof(ICompositionRadialGradientBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionRectangleGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionRectangleGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionRectangleGeometry[] = L"Microsoft.UI.Composition.ICompositionRectangleGeometry";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("BD551FCF-2C7F-5125-AC44-50A4F1D8FA76"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("BD551FCF-2C7F-5125-AC44-50A4F1D8FA76")
            ICompositionRectangleGeometry : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Size(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Size(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionRectangleGeometry=_uuidof(ICompositionRectangleGeometry);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionRoundedRectangleGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry[] = L"Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("02EAFC87-8D1F-5445-A416-D81BAEE8A750"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("02EAFC87-8D1F-5445-A416-D81BAEE8A750")
            ICompositionRoundedRectangleGeometry : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CornerRadius(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CornerRadius(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Size(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Size(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionRoundedRectangleGeometry=_uuidof(ICompositionRoundedRectangleGeometry);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionScopedBatch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionScopedBatch
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionScopedBatch[] = L"Microsoft.UI.Composition.ICompositionScopedBatch";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("D31CA572-99CE-5969-B042-6C2D330A3859"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("D31CA572-99CE-5969-B042-6C2D330A3859")
            ICompositionScopedBatch : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsActive(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsEnded(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE End(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Resume(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Suspend(void) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Completed(
                    /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Completed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionScopedBatch=_uuidof(ICompositionScopedBatch);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionScopedBatch;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionShadow[] = L"Microsoft.UI.Composition.ICompositionShadow";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("176B8BB5-4DAE-59B2-B9A0-2499B243267C"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("176B8BB5-4DAE-59B2-B9A0-2499B243267C")
            ICompositionShadow : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionShadow=_uuidof(ICompositionShadow);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionShadow;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionShadowFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionShadowFactory[] = L"Microsoft.UI.Composition.ICompositionShadowFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("FF27546D-9750-54AE-AB8C-126CBE9158C3"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("FF27546D-9750-54AE-AB8C-126CBE9158C3")
            ICompositionShadowFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionShadowFactory=_uuidof(ICompositionShadowFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionShadowFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionShape
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionShape[] = L"Microsoft.UI.Composition.ICompositionShape";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("ED75D4D8-437F-5640-9720-FAAE35CE5895"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("ED75D4D8-437F-5640-9720-FAAE35CE5895")
            ICompositionShape : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Scale(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Scale(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                    /* [retval, out] */Windows::Foundation::Numerics::Matrix3x2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                    /* [in] */Windows::Foundation::Numerics::Matrix3x2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionShape=_uuidof(ICompositionShape);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionShape;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionShapeFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionShape
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionShapeFactory[] = L"Microsoft.UI.Composition.ICompositionShapeFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7AA2B987-9CDD-5B6E-8AC1-E989D78B4811"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7AA2B987-9CDD-5B6E-8AC1-E989D78B4811")
            ICompositionShapeFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionShapeFactory=_uuidof(ICompositionShapeFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionShapeFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSpriteShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionSpriteShape
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSpriteShape[] = L"Microsoft.UI.Composition.ICompositionSpriteShape";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("982138F2-5781-509A-BA5D-112BCB0B98EF"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("982138F2-5781-509A-BA5D-112BCB0B98EF")
            ICompositionSpriteShape : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FillBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FillBrush(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Geometry(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionGeometry * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Geometry(
                    /* [in] */Microsoft::UI::Composition::ICompositionGeometry * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsStrokeNonScaling(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsStrokeNonScaling(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeBrush(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeDashArray(
                    /* [retval, out] */__FIVector_1_float * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeDashCap(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionStrokeCap * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeDashCap(
                    /* [in] */Microsoft::UI::Composition::CompositionStrokeCap value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeDashOffset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeDashOffset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeEndCap(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionStrokeCap * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeEndCap(
                    /* [in] */Microsoft::UI::Composition::CompositionStrokeCap value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeLineJoin(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionStrokeLineJoin * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeLineJoin(
                    /* [in] */Microsoft::UI::Composition::CompositionStrokeLineJoin value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeMiterLimit(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeMiterLimit(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeStartCap(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionStrokeCap * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeStartCap(
                    /* [in] */Microsoft::UI::Composition::CompositionStrokeCap value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StrokeThickness(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StrokeThickness(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionSpriteShape=_uuidof(ICompositionSpriteShape);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSpriteShape;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSurface[] = L"Microsoft.UI.Composition.ICompositionSurface";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("9EC612C3-A5D2-4F97-9DF3-6B49CE736215"), experimental, contract] */
            MIDL_INTERFACE("9EC612C3-A5D2-4F97-9DF3-6B49CE736215")
            ICompositionSurface : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionSurface=_uuidof(ICompositionSurface);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSurfaceBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionSurfaceBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSurfaceBrush[] = L"Microsoft.UI.Composition.ICompositionSurfaceBrush";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("616BB5A5-0A33-512D-B4B1-3D3734F04ACA"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("616BB5A5-0A33-512D-B4B1-3D3734F04ACA")
            ICompositionSurfaceBrush : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BitmapInterpolationMode(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionBitmapInterpolationMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BitmapInterpolationMode(
                    /* [in] */Microsoft::UI::Composition::CompositionBitmapInterpolationMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentRatio(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_HorizontalAlignmentRatio(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Stretch(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionStretch * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Stretch(
                    /* [in] */Microsoft::UI::Composition::CompositionStretch value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Surface(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionSurface * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Surface(
                    /* [in] */Microsoft::UI::Composition::ICompositionSurface * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentRatio(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_VerticalAlignmentRatio(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionSurfaceBrush=_uuidof(ICompositionSurfaceBrush);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSurfaceBrush2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionSurfaceBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSurfaceBrush2[] = L"Microsoft.UI.Composition.ICompositionSurfaceBrush2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("9904B7E3-084B-58B5-9AE1-3A2040DD7A22"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("9904B7E3-084B-58B5-9AE1-3A2040DD7A22")
            ICompositionSurfaceBrush2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AnchorPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AnchorPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Scale(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Scale(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                    /* [retval, out] */Windows::Foundation::Numerics::Matrix3x2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                    /* [in] */Windows::Foundation::Numerics::Matrix3x2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionSurfaceBrush2=_uuidof(ICompositionSurfaceBrush2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSurfaceBrush3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionSurfaceBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSurfaceBrush3[] = L"Microsoft.UI.Composition.ICompositionSurfaceBrush3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("8AA74C78-680C-5791-AB07-92DB0F37E352"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("8AA74C78-680C-5791-AB07-92DB0F37E352")
            ICompositionSurfaceBrush3 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SnapToPixels(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_SnapToPixels(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionSurfaceBrush3=_uuidof(ICompositionSurfaceBrush3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionTarget
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionTarget
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionTarget[] = L"Microsoft.UI.Composition.ICompositionTarget";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("45324554-CFC0-5533-AF83-858E88D5B7C0"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("45324554-CFC0-5533-AF83-858E88D5B7C0")
            ICompositionTarget : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Root(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Root(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionTarget=_uuidof(ICompositionTarget);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionTarget;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionTargetFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionTarget
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionTargetFactory[] = L"Microsoft.UI.Composition.ICompositionTargetFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("35E826A4-7903-5BCD-AF17-02281DE2D9C0"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("35E826A4-7903-5BCD-AF17-02281DE2D9C0")
            ICompositionTargetFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionTargetFactory=_uuidof(ICompositionTargetFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionTargetFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionTransform
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionTransform
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionTransform[] = L"Microsoft.UI.Composition.ICompositionTransform";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("670E1826-1932-51D0-BBB3-063B4CA94B56"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("670E1826-1932-51D0-BBB3-063B4CA94B56")
            ICompositionTransform : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionTransform=_uuidof(ICompositionTransform);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionTransform;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionTransformFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionTransform
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionTransformFactory[] = L"Microsoft.UI.Composition.ICompositionTransformFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("78CC7BF2-CDC0-59D2-9C04-8D208DE7EF5E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("78CC7BF2-CDC0-59D2-9C04-8D208DE7EF5E")
            ICompositionTransformFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionTransformFactory=_uuidof(ICompositionTransformFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionTransformFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionViewBox
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionViewBox
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionViewBox[] = L"Microsoft.UI.Composition.ICompositionViewBox";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("667E4071-ADDD-5DED-B6C0-09E03A14BE7E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("667E4071-ADDD-5DED-B6C0-09E03A14BE7E")
            ICompositionViewBox : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentRatio(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_HorizontalAlignmentRatio(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Size(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Size(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Stretch(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionStretch * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Stretch(
                    /* [in] */Microsoft::UI::Composition::CompositionStretch value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentRatio(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_VerticalAlignmentRatio(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionViewBox=_uuidof(ICompositionViewBox);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionViewBox;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionVirtualDrawingSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionVirtualDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionVirtualDrawingSurface[] = L"Microsoft.UI.Composition.ICompositionVirtualDrawingSurface";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("D741B99D-E248-5BA7-B728-8BEEA53FE28E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("D741B99D-E248-5BA7-B728-8BEEA53FE28E")
            ICompositionVirtualDrawingSurface : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Trim(
                    /* [in] */UINT32 __rectsSize,
                    /* [size_is(__rectsSize), in] */Windows::Graphics::RectInt32 * rects
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionVirtualDrawingSurface=_uuidof(ICompositionVirtualDrawingSurface);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionVirtualDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionVirtualDrawingSurfaceFactory[] = L"Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("85895891-3F06-52E2-B5EA-D1FB595F6574"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("85895891-3F06-52E2-B5EA-D1FB595F6574")
            ICompositionVirtualDrawingSurfaceFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionVirtualDrawingSurfaceFactory=_uuidof(ICompositionVirtualDrawingSurfaceFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionVisualSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionVisualSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionVisualSurface[] = L"Microsoft.UI.Composition.ICompositionVisualSurface";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("49E3624B-4D2E-53E7-9E02-F64831681134"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("49E3624B-4D2E-53E7-9E02-F64831681134")
            ICompositionVisualSurface : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SourceVisual(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_SourceVisual(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SourceOffset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_SourceOffset(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SourceSize(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_SourceSize(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositionVisualSurface=_uuidof(ICompositionVisualSurface);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionVisualSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor[] = L"Microsoft.UI.Composition.ICompositor";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("49DABD27-05F5-56C9-AE63-40DF19376C0D"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("49DABD27-05F5-56C9-AE63-40DF19376C0D")
            ICompositor : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateColorKeyFrameAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IColorKeyFrameAnimation * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateColorBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionColorBrush * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateColorBrushWithColor(
                    /* [in] */Windows::UI::Color color,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionColorBrush * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateContainerVisual(
                    /* [retval, out] */Microsoft::UI::Composition::IContainerVisual * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateCubicBezierEasingFunction(
                    /* [in] */Windows::Foundation::Numerics::Vector2 controlPoint1,
                    /* [in] */Windows::Foundation::Numerics::Vector2 controlPoint2,
                    /* [retval, out] */Microsoft::UI::Composition::ICubicBezierEasingFunction * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateEffectFactory(
                    /* [in] */Windows::Graphics::Effects::IGraphicsEffect * graphicsEffect,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionEffectFactory * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateEffectFactoryWithProperties(
                    /* [in] */Windows::Graphics::Effects::IGraphicsEffect * graphicsEffect,
                    /* [in] */__FIIterable_1_HSTRING * animatableProperties,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionEffectFactory * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateExpressionAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IExpressionAnimation * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateExpressionAnimationWithExpression(
                    /* [in] */HSTRING expression,
                    /* [retval, out] */Microsoft::UI::Composition::IExpressionAnimation * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateInsetClip(
                    /* [retval, out] */Microsoft::UI::Composition::IInsetClip * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateInsetClipWithInsets(
                    /* [in] */FLOAT leftInset,
                    /* [in] */FLOAT topInset,
                    /* [in] */FLOAT rightInset,
                    /* [in] */FLOAT bottomInset,
                    /* [retval, out] */Microsoft::UI::Composition::IInsetClip * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateLinearEasingFunction(
                    /* [retval, out] */Microsoft::UI::Composition::ILinearEasingFunction * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreatePropertySet(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionPropertySet * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateQuaternionKeyFrameAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IQuaternionKeyFrameAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateScalarKeyFrameAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IScalarKeyFrameAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateScopedBatch(
                    /* [in] */Microsoft::UI::Composition::CompositionBatchTypes batchType,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionScopedBatch * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateSpriteVisual(
                    /* [retval, out] */Microsoft::UI::Composition::ISpriteVisual * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateSurfaceBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionSurfaceBrush * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateSurfaceBrushWithSurface(
                    /* [in] */Microsoft::UI::Composition::ICompositionSurface * surface,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionSurfaceBrush * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateTargetForCurrentView(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionTarget * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateVector2KeyFrameAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IVector2KeyFrameAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateVector3KeyFrameAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IVector3KeyFrameAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateVector4KeyFrameAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IVector4KeyFrameAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetCommitBatch(
                    /* [in] */Microsoft::UI::Composition::CompositionBatchTypes batchType,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionCommitBatch * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositor=_uuidof(ICompositor);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor2[] = L"Microsoft.UI.Composition.ICompositor2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("A9FFEDAD-3982-576D-A38A-C888FF605819"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("A9FFEDAD-3982-576D-A38A-C888FF605819")
            ICompositor2 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateAmbientLight(
                    /* [retval, out] */Microsoft::UI::Composition::IAmbientLight * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateAnimationGroup(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionAnimationGroup * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateBackdropBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBackdropBrush * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateDistantLight(
                    /* [retval, out] */Microsoft::UI::Composition::IDistantLight * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateDropShadow(
                    /* [retval, out] */Microsoft::UI::Composition::IDropShadow * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateImplicitAnimationCollection(
                    /* [retval, out] */Microsoft::UI::Composition::IImplicitAnimationCollection * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateLayerVisual(
                    /* [retval, out] */Microsoft::UI::Composition::ILayerVisual * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateMaskBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionMaskBrush * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateNineGridBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionNineGridBrush * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreatePointLight(
                    /* [retval, out] */Microsoft::UI::Composition::IPointLight * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateSpotLight(
                    /* [retval, out] */Microsoft::UI::Composition::ISpotLight * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateStepEasingFunction(
                    /* [retval, out] */Microsoft::UI::Composition::IStepEasingFunction * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateStepEasingFunctionWithStepCount(
                    /* [in] */INT32 stepCount,
                    /* [retval, out] */Microsoft::UI::Composition::IStepEasingFunction * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositor2=_uuidof(ICompositor2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor3[] = L"Microsoft.UI.Composition.ICompositor3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("FAD31F5A-211B-52F3-8BA9-ABBA90830608"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("FAD31F5A-211B-52F3-8BA9-ABBA90830608")
            ICompositor3 : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateHostBackdropBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBackdropBrush * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositor3=_uuidof(ICompositor3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor4
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor4[] = L"Microsoft.UI.Composition.ICompositor4";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("EE444BCA-735C-5CF2-B79D-A6DD46C16160"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("EE444BCA-735C-5CF2-B79D-A6DD46C16160")
            ICompositor4 : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateColorGradientStop(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionColorGradientStop * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateColorGradientStopWithOffsetAndColor(
                    /* [in] */FLOAT offset,
                    /* [in] */Windows::UI::Color color,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionColorGradientStop * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateLinearGradientBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionLinearGradientBrush * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateSpringScalarAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::ISpringScalarNaturalMotionAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateSpringVector2Animation(
                    /* [retval, out] */Microsoft::UI::Composition::ISpringVector2NaturalMotionAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateSpringVector3Animation(
                    /* [retval, out] */Microsoft::UI::Composition::ISpringVector3NaturalMotionAnimation * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositor4=_uuidof(ICompositor4);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor4;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor5
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor5[] = L"Microsoft.UI.Composition.ICompositor5";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("BB52D644-A030-5C19-B883-577DED739AE7"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("BB52D644-A030-5C19-B883-577DED739AE7")
            ICompositor5 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Comment(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Comment(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_GlobalPlaybackRate(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_GlobalPlaybackRate(
                    /* [in] */FLOAT value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateBounceScalarAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IBounceScalarNaturalMotionAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateBounceVector2Animation(
                    /* [retval, out] */Microsoft::UI::Composition::IBounceVector2NaturalMotionAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateBounceVector3Animation(
                    /* [retval, out] */Microsoft::UI::Composition::IBounceVector3NaturalMotionAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateContainerShape(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionContainerShape * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateEllipseGeometry(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionEllipseGeometry * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateLineGeometry(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionLineGeometry * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreatePathGeometry(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionPathGeometry * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreatePathGeometryWithPath(
                    /* [in] */Microsoft::UI::Composition::ICompositionPath * path,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionPathGeometry * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreatePathKeyFrameAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IPathKeyFrameAnimation * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateRectangleGeometry(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionRectangleGeometry * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateRoundedRectangleGeometry(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionRoundedRectangleGeometry * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateShapeVisual(
                    /* [retval, out] */Microsoft::UI::Composition::IShapeVisual * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateSpriteShape(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionSpriteShape * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateSpriteShapeWithGeometry(
                    /* [in] */Microsoft::UI::Composition::ICompositionGeometry * geometry,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionSpriteShape * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateViewBox(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionViewBox * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RequestCommitAsync(
                    /* [retval, out] */Windows::Foundation::IAsyncAction * * operation
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositor5=_uuidof(ICompositor5);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor5;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor6
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor6[] = L"Microsoft.UI.Composition.ICompositor6";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("5FD20200-C188-5737-B567-5E61741AF19C"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("5FD20200-C188-5737-B567-5E61741AF19C")
            ICompositor6 : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateGeometricClip(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionGeometricClip * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateGeometricClipWithGeometry(
                    /* [in] */Microsoft::UI::Composition::ICompositionGeometry * geometry,
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionGeometricClip * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateRedirectVisual(
                    /* [retval, out] */Microsoft::UI::Composition::IRedirectVisual * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateRedirectVisualWithSourceVisual(
                    /* [in] */Microsoft::UI::Composition::IVisual * source,
                    /* [retval, out] */Microsoft::UI::Composition::IRedirectVisual * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateBooleanKeyFrameAnimation(
                    /* [retval, out] */Microsoft::UI::Composition::IBooleanKeyFrameAnimation * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositor6=_uuidof(ICompositor6);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor6;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorStatics[] = L"Microsoft.UI.Composition.ICompositorStatics";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6BAA947A-F103-55C6-91AD-3D275BEA65C4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("6BAA947A-F103-55C6-91AD-3D275BEA65C4")
            ICompositorStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxGlobalPlaybackRate(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinGlobalPlaybackRate(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositorStatics=_uuidof(ICompositorStatics);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorWithCompositionIslands
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorWithCompositionIslands[] = L"Microsoft.UI.Composition.ICompositorWithCompositionIslands";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("1680AE63-6810-512C-8AA5-069FDE9AF595"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("1680AE63-6810-512C-8AA5-069FDE9AF595")
            ICompositorWithCompositionIslands : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateVisualIslandSite(
                    /* [retval, out] */Microsoft::UI::Composition::IVisualIslandSite * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateVisualTreeIsland(
                    /* [retval, out] */Microsoft::UI::Composition::IVisualTreeIsland * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositorWithCompositionIslands=_uuidof(ICompositorWithCompositionIslands);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorWithProjectedShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorWithProjectedShadow[] = L"Microsoft.UI.Composition.ICompositorWithProjectedShadow";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("60AB2BF2-B95C-5944-8B36-C9773B9F5256"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("60AB2BF2-B95C-5944-8B36-C9773B9F5256")
            ICompositorWithProjectedShadow : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateProjectedShadowCaster(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionProjectedShadowCaster * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateProjectedShadow(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionProjectedShadow * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateProjectedShadowReceiver(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionProjectedShadowReceiver * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositorWithProjectedShadow=_uuidof(ICompositorWithProjectedShadow);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorWithRadialGradient
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorWithRadialGradient[] = L"Microsoft.UI.Composition.ICompositorWithRadialGradient";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("FA4F8F7D-5CC7-5C9C-883B-FE878A2F3E30"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("FA4F8F7D-5CC7-5C9C-883B-FE878A2F3E30")
            ICompositorWithRadialGradient : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateRadialGradientBrush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionRadialGradientBrush * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositorWithRadialGradient=_uuidof(ICompositorWithRadialGradient);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorWithVisualSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorWithVisualSurface[] = L"Microsoft.UI.Composition.ICompositorWithVisualSurface";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("5FCFE24A-690A-5378-ACEE-561E84BFB982"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("5FCFE24A-690A-5378-ACEE-561E84BFB982")
            ICompositorWithVisualSurface : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateVisualSurface(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionVisualSurface * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICompositorWithVisualSurface=_uuidof(ICompositorWithVisualSurface);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IContainerVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ContainerVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IContainerVisual[] = L"Microsoft.UI.Composition.IContainerVisual";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C70DBCE1-2C2F-5D8E-91A4-AAE1121E6186"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C70DBCE1-2C2F-5D8E-91A4-AAE1121E6186")
            IContainerVisual : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Children(
                    /* [retval, out] */Microsoft::UI::Composition::IVisualCollection * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IContainerVisual=_uuidof(IContainerVisual);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIContainerVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IContainerVisualFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ContainerVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IContainerVisualFactory[] = L"Microsoft.UI.Composition.IContainerVisualFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("3FA45EEB-C6DD-5AFD-971D-EAAF6245E716"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("3FA45EEB-C6DD-5AFD-971D-EAAF6245E716")
            IContainerVisualFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IContainerVisualFactory=_uuidof(IContainerVisualFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIContainerVisualFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICubicBezierEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CubicBezierEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICubicBezierEasingFunction[] = L"Microsoft.UI.Composition.ICubicBezierEasingFunction";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("35E7FCDE-F9CE-590A-8B88-64A82A6B4B48"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("35E7FCDE-F9CE-590A-8B88-64A82A6B4B48")
            ICubicBezierEasingFunction : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ControlPoint1(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ControlPoint2(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICubicBezierEasingFunction=_uuidof(ICubicBezierEasingFunction);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IDistantLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.DistantLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IDistantLight[] = L"Microsoft.UI.Composition.IDistantLight";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("125EF556-56EE-5C60-B944-571928CA03F5"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("125EF556-56EE-5C60-B944-571928CA03F5")
            IDistantLight : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Color(
                    /* [retval, out] */Windows::UI::Color * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Color(
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CoordinateSpace(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CoordinateSpace(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Direction(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Direction(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDistantLight=_uuidof(IDistantLight);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIDistantLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IDistantLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.DistantLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IDistantLight2[] = L"Microsoft.UI.Composition.IDistantLight2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("9F97BFEC-B6B9-51EE-8480-B546468C748F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("9F97BFEC-B6B9-51EE-8480-B546468C748F")
            IDistantLight2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Intensity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Intensity(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDistantLight2=_uuidof(IDistantLight2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIDistantLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IDropShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.DropShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IDropShadow[] = L"Microsoft.UI.Composition.IDropShadow";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("977095D2-265F-5F58-9789-CB7F85E98C9E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("977095D2-265F-5F58-9789-CB7F85E98C9E")
            IDropShadow : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BlurRadius(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BlurRadius(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Color(
                    /* [retval, out] */Windows::UI::Color * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Color(
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Mask(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Mask(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Opacity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Opacity(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDropShadow=_uuidof(IDropShadow);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIDropShadow;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IDropShadow2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.DropShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IDropShadow2[] = L"Microsoft.UI.Composition.IDropShadow2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("CBC7C266-2D33-5711-B3B4-5699410BEF56"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("CBC7C266-2D33-5711-B3B4-5699410BEF56")
            IDropShadow2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SourcePolicy(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionDropShadowSourcePolicy * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_SourcePolicy(
                    /* [in] */Microsoft::UI::Composition::CompositionDropShadowSourcePolicy value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDropShadow2=_uuidof(IDropShadow2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIDropShadow2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IExpressionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ExpressionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IExpressionAnimation[] = L"Microsoft.UI.Composition.IExpressionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7FFF5826-1992-56C0-9060-5ADE561A4F2D"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7FFF5826-1992-56C0-9060-5ADE561A4F2D")
            IExpressionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Expression(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Expression(
                    /* [in] */HSTRING value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IExpressionAnimation=_uuidof(IExpressionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIExpressionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IImplicitAnimationCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ImplicitAnimationCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IImplicitAnimationCollection[] = L"Microsoft.UI.Composition.IImplicitAnimationCollection";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C5C0689E-F5AE-5BED-829B-C522CDA39717"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C5C0689E-F5AE-5BED-829B-C522CDA39717")
            IImplicitAnimationCollection : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IImplicitAnimationCollection=_uuidof(IImplicitAnimationCollection);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IInsetClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.InsetClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IInsetClip[] = L"Microsoft.UI.Composition.IInsetClip";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("F9D99475-7B59-5B28-A1D2-B832DA6988C9"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("F9D99475-7B59-5B28-A1D2-B832DA6988C9")
            IInsetClip : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BottomInset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BottomInset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LeftInset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_LeftInset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RightInset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RightInset(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TopInset(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TopInset(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IInsetClip=_uuidof(IInsetClip);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIInsetClip;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IKeyFrameAnimation[] = L"Microsoft.UI.Composition.IKeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("5A8F57F0-F059-5B47-B308-C4C80FC71248"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("5A8F57F0-F059-5B47-B308-C4C80FC71248")
            IKeyFrameAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DelayTime(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DelayTime(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Duration(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Duration(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IterationBehavior(
                    /* [retval, out] */Microsoft::UI::Composition::AnimationIterationBehavior * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IterationBehavior(
                    /* [in] */Microsoft::UI::Composition::AnimationIterationBehavior value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IterationCount(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IterationCount(
                    /* [in] */INT32 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyFrameCount(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StopBehavior(
                    /* [retval, out] */Microsoft::UI::Composition::AnimationStopBehavior * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StopBehavior(
                    /* [in] */Microsoft::UI::Composition::AnimationStopBehavior value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertExpressionKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */HSTRING value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertExpressionKeyFrameWithEasingFunction(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */HSTRING value,
                    /* [in] */Microsoft::UI::Composition::ICompositionEasingFunction * easingFunction
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IKeyFrameAnimation=_uuidof(IKeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IKeyFrameAnimation2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IKeyFrameAnimation2[] = L"Microsoft.UI.Composition.IKeyFrameAnimation2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("414692E5-8A7E-58EA-83E1-25CE475D9300"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("414692E5-8A7E-58EA-83E1-25CE475D9300")
            IKeyFrameAnimation2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Direction(
                    /* [retval, out] */Microsoft::UI::Composition::AnimationDirection * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Direction(
                    /* [in] */Microsoft::UI::Composition::AnimationDirection value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IKeyFrameAnimation2=_uuidof(IKeyFrameAnimation2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IKeyFrameAnimation3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IKeyFrameAnimation3[] = L"Microsoft.UI.Composition.IKeyFrameAnimation3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("4F97E180-9BCB-5FC4-ABBE-43AA3BE327E7"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("4F97E180-9BCB-5FC4-ABBE-43AA3BE327E7")
            IKeyFrameAnimation3 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DelayBehavior(
                    /* [retval, out] */Microsoft::UI::Composition::AnimationDelayBehavior * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DelayBehavior(
                    /* [in] */Microsoft::UI::Composition::AnimationDelayBehavior value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IKeyFrameAnimation3=_uuidof(IKeyFrameAnimation3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IKeyFrameAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IKeyFrameAnimationFactory[] = L"Microsoft.UI.Composition.IKeyFrameAnimationFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7CCCFC87-3BAF-5100-B5F8-2F779F954F19"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7CCCFC87-3BAF-5100-B5F8-2F779F954F19")
            IKeyFrameAnimationFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IKeyFrameAnimationFactory=_uuidof(IKeyFrameAnimationFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ILayerVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.LayerVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ILayerVisual[] = L"Microsoft.UI.Composition.ILayerVisual";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("64D05CA1-3BF6-5D4F-98A1-7500F2F23EBE"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("64D05CA1-3BF6-5D4F-98A1-7500F2F23EBE")
            ILayerVisual : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Effect(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionEffectBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Effect(
                    /* [in] */Microsoft::UI::Composition::ICompositionEffectBrush * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ILayerVisual=_uuidof(ILayerVisual);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CILayerVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ILayerVisual2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.LayerVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ILayerVisual2[] = L"Microsoft.UI.Composition.ILayerVisual2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("9AB2E401-AF45-54DA-9991-DD31273155D2"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("9AB2E401-AF45-54DA-9991-DD31273155D2")
            ILayerVisual2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Shadow(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionShadow * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Shadow(
                    /* [in] */Microsoft::UI::Composition::ICompositionShadow * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ILayerVisual2=_uuidof(ILayerVisual2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CILayerVisual2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ILinearEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.LinearEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ILinearEasingFunction[] = L"Microsoft.UI.Composition.ILinearEasingFunction";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("79BFEEF6-70C7-50A6-BB3A-0E9636148695"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("79BFEEF6-70C7-50A6-BB3A-0E9636148695")
            ILinearEasingFunction : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ILinearEasingFunction=_uuidof(ILinearEasingFunction);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CILinearEasingFunction;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.INaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_INaturalMotionAnimation[] = L"Microsoft.UI.Composition.INaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("2FF54EBB-A035-50BE-A73C-20014975EE31"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("2FF54EBB-A035-50BE-A73C-20014975EE31")
            INaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DelayBehavior(
                    /* [retval, out] */Microsoft::UI::Composition::AnimationDelayBehavior * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DelayBehavior(
                    /* [in] */Microsoft::UI::Composition::AnimationDelayBehavior value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DelayTime(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DelayTime(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StopBehavior(
                    /* [retval, out] */Microsoft::UI::Composition::AnimationStopBehavior * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StopBehavior(
                    /* [in] */Microsoft::UI::Composition::AnimationStopBehavior value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_INaturalMotionAnimation=_uuidof(INaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CINaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.INaturalMotionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_INaturalMotionAnimationFactory[] = L"Microsoft.UI.Composition.INaturalMotionAnimationFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("0411A259-2622-59E2-A59E-1E23D8F83A9F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("0411A259-2622-59E2-A59E-1E23D8F83A9F")
            INaturalMotionAnimationFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_INaturalMotionAnimationFactory=_uuidof(INaturalMotionAnimationFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPathKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PathKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPathKeyFrameAnimation[] = L"Microsoft.UI.Composition.IPathKeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("2B692808-43DA-5118-B66D-904A3EC74FD9"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("2B692808-43DA-5118-B66D-904A3EC74FD9")
            IPathKeyFrameAnimation : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Microsoft::UI::Composition::ICompositionPath * path
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Microsoft::UI::Composition::ICompositionPath * path,
                    /* [in] */Microsoft::UI::Composition::ICompositionEasingFunction * easingFunction
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPathKeyFrameAnimation=_uuidof(IPathKeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPointLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PointLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPointLight[] = L"Microsoft.UI.Composition.IPointLight";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("ED5CC102-F0AC-59A8-8678-CE54146E7BE8"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("ED5CC102-F0AC-59A8-8678-CE54146E7BE8")
            IPointLight : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Color(
                    /* [retval, out] */Windows::UI::Color * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Color(
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ConstantAttenuation(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ConstantAttenuation(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CoordinateSpace(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CoordinateSpace(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LinearAttenuation(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_LinearAttenuation(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_QuadraticAttenuation(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_QuadraticAttenuation(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPointLight=_uuidof(IPointLight);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPointLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPointLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PointLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPointLight2[] = L"Microsoft.UI.Composition.IPointLight2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("DE466104-59D9-57D2-92B5-554D6D82EDF2"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("DE466104-59D9-57D2-92B5-554D6D82EDF2")
            IPointLight2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Intensity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Intensity(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPointLight2=_uuidof(IPointLight2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPointLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPointLight3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PointLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPointLight3[] = L"Microsoft.UI.Composition.IPointLight3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("BE30E87A-8CBB-5A56-8D24-2CD865F383B3"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("BE30E87A-8CBB-5A56-8D24-2CD865F383B3")
            IPointLight3 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinAttenuationCutoff(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MinAttenuationCutoff(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxAttenuationCutoff(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MaxAttenuationCutoff(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPointLight3=_uuidof(IPointLight3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPointLight3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPopupIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PopupIslandSite
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPopupIslandSite_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPopupIslandSite_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPopupIslandSite[] = L"Microsoft.UI.Composition.IPopupIslandSite";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("5CFE6179-D033-5FA2-B363-D4A80C37002E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("5CFE6179-D033-5FA2-B363-D4A80C37002E")
            IPopupIslandSite : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PlacementAnchor(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionAnchor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_PlacementAnchor(
                    /* [in] */Microsoft::UI::Composition::ICompositionAnchor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PlacementAnchorPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_PlacementAnchorPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPopupIslandSite=_uuidof(IPopupIslandSite);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPopupIslandSite;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPopupIslandSite_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IQuaternionKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.QuaternionKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IQuaternionKeyFrameAnimation[] = L"Microsoft.UI.Composition.IQuaternionKeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("E72D1026-DA3B-5D56-858B-3A9AA3C57D70"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("E72D1026-DA3B-5D56-858B-3A9AA3C57D70")
            IQuaternionKeyFrameAnimation : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::Foundation::Numerics::Quaternion value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::Foundation::Numerics::Quaternion value,
                    /* [in] */Microsoft::UI::Composition::ICompositionEasingFunction * easingFunction
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IQuaternionKeyFrameAnimation=_uuidof(IQuaternionKeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IRedirectVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.RedirectVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IRedirectVisual[] = L"Microsoft.UI.Composition.IRedirectVisual";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6C10081A-CDE1-50D9-AC05-78D6845B656F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("6C10081A-CDE1-50D9-AC05-78D6845B656F")
            IRedirectVisual : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Source(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Source(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IRedirectVisual=_uuidof(IRedirectVisual);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIRedirectVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IRenderingDeviceReplacedEventArgs[] = L"Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("FE5B97C7-F656-56D6-A0CD-3E1227E4DD44"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("FE5B97C7-F656-56D6-A0CD-3E1227E4DD44")
            IRenderingDeviceReplacedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_GraphicsDevice(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionGraphicsDevice * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IRenderingDeviceReplacedEventArgs=_uuidof(IRenderingDeviceReplacedEventArgs);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IScalarKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ScalarKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IScalarKeyFrameAnimation[] = L"Microsoft.UI.Composition.IScalarKeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("5A5F8ABE-D129-5B25-8AFF-8180FD9BFB22"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("5A5F8ABE-D129-5B25-8AFF-8180FD9BFB22")
            IScalarKeyFrameAnimation : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */FLOAT value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */FLOAT value,
                    /* [in] */Microsoft::UI::Composition::ICompositionEasingFunction * easingFunction
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IScalarKeyFrameAnimation=_uuidof(IScalarKeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ScalarNaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.IScalarNaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("903224B0-2DBE-56EB-B9EA-33D2E3113181"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("903224B0-2DBE-56EB-B9EA-33D2E3113181")
            IScalarNaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FinalValue(
                    /* [retval, out] */__FIReference_1_float * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FinalValue(
                    /* [in] */__FIReference_1_float * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InitialValue(
                    /* [retval, out] */__FIReference_1_float * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InitialValue(
                    /* [in] */__FIReference_1_float * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InitialVelocity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InitialVelocity(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IScalarNaturalMotionAnimation=_uuidof(IScalarNaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ScalarNaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IScalarNaturalMotionAnimationFactory[] = L"Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("14F8A9AB-976C-5E6F-890B-9A74D07FA39F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("14F8A9AB-976C-5E6F-890B-9A74D07FA39F")
            IScalarNaturalMotionAnimationFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IScalarNaturalMotionAnimationFactory=_uuidof(IScalarNaturalMotionAnimationFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IShapeVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ShapeVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IShapeVisual[] = L"Microsoft.UI.Composition.IShapeVisual";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("A911C80B-A5A5-5ACA-B8FF-C43F08F06143"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("A911C80B-A5A5-5ACA-B8FF-C43F08F06143")
            IShapeVisual : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Shapes(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ViewBox(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionViewBox * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ViewBox(
                    /* [in] */Microsoft::UI::Composition::ICompositionViewBox * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IShapeVisual=_uuidof(IShapeVisual);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIShapeVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpotLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpotLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpotLight[] = L"Microsoft.UI.Composition.ISpotLight";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("5935496A-0586-5F77-BD03-D5A6BB9E8FA0"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("5935496A-0586-5F77-BD03-D5A6BB9E8FA0")
            ISpotLight : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ConstantAttenuation(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ConstantAttenuation(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CoordinateSpace(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CoordinateSpace(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Direction(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Direction(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InnerConeAngle(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InnerConeAngle(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InnerConeAngleInDegrees(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InnerConeAngleInDegrees(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InnerConeColor(
                    /* [retval, out] */Windows::UI::Color * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InnerConeColor(
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LinearAttenuation(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_LinearAttenuation(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OuterConeAngle(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OuterConeAngle(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OuterConeAngleInDegrees(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OuterConeAngleInDegrees(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OuterConeColor(
                    /* [retval, out] */Windows::UI::Color * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OuterConeColor(
                    /* [in] */Windows::UI::Color value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_QuadraticAttenuation(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_QuadraticAttenuation(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISpotLight=_uuidof(ISpotLight);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpotLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpotLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpotLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpotLight2[] = L"Microsoft.UI.Composition.ISpotLight2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("49DD3B50-EC5C-5B6C-BAA1-8504B13E3A67"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("49DD3B50-EC5C-5B6C-BAA1-8504B13E3A67")
            ISpotLight2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InnerConeIntensity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InnerConeIntensity(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OuterConeIntensity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OuterConeIntensity(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISpotLight2=_uuidof(ISpotLight2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpotLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpotLight3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpotLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpotLight3[] = L"Microsoft.UI.Composition.ISpotLight3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C6919941-0D9F-58C8-91E2-ADEF6E5E70A4"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C6919941-0D9F-58C8-91E2-ADEF6E5E70A4")
            ISpotLight3 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinAttenuationCutoff(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MinAttenuationCutoff(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxAttenuationCutoff(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MaxAttenuationCutoff(
                    /* [in] */FLOAT value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISpotLight3=_uuidof(ISpotLight3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpotLight3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpringScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6F720AFD-D3D0-5E78-9C2E-83092F6EA45E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("6F720AFD-D3D0-5E78-9C2E-83092F6EA45E")
            ISpringScalarNaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DampingRatio(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DampingRatio(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Period(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Period(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISpringScalarNaturalMotionAnimation=_uuidof(ISpringScalarNaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpringVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("5B4580A4-2594-521E-B288-EAF2C2A16A66"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("5B4580A4-2594-521E-B288-EAF2C2A16A66")
            ISpringVector2NaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DampingRatio(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DampingRatio(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Period(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Period(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISpringVector2NaturalMotionAnimation=_uuidof(ISpringVector2NaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpringVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("02D9E1C6-7434-5464-A1F6-D644CE1FC9A6"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("02D9E1C6-7434-5464-A1F6-D644CE1FC9A6")
            ISpringVector3NaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DampingRatio(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DampingRatio(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Period(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Period(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISpringVector3NaturalMotionAnimation=_uuidof(ISpringVector3NaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpriteVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpriteVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpriteVisual[] = L"Microsoft.UI.Composition.ISpriteVisual";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("7E964632-45E4-5761-806D-5B4022C14F26"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("7E964632-45E4-5761-806D-5B4022C14F26")
            ISpriteVisual : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Brush(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Brush(
                    /* [in] */Microsoft::UI::Composition::ICompositionBrush * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISpriteVisual=_uuidof(ISpriteVisual);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpriteVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpriteVisual2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpriteVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpriteVisual2[] = L"Microsoft.UI.Composition.ISpriteVisual2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("3CB43662-9ECF-5128-850D-9EB8437774F0"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("3CB43662-9ECF-5128-850D-9EB8437774F0")
            ISpriteVisual2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Shadow(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionShadow * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Shadow(
                    /* [in] */Microsoft::UI::Composition::ICompositionShadow * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISpriteVisual2=_uuidof(ISpriteVisual2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpriteVisual2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IStepEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.StepEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IStepEasingFunction[] = L"Microsoft.UI.Composition.IStepEasingFunction";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C7B1D4CF-C562-56B3-B4E6-B21326165F71"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C7B1D4CF-C562-56B3-B4E6-B21326165F71")
            IStepEasingFunction : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FinalStep(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FinalStep(
                    /* [in] */INT32 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InitialStep(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InitialStep(
                    /* [in] */INT32 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsFinalStepSingleFrame(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsFinalStepSingleFrame(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsInitialStepSingleFrame(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsInitialStepSingleFrame(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StepCount(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_StepCount(
                    /* [in] */INT32 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IStepEasingFunction=_uuidof(IStepEasingFunction);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIStepEasingFunction;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISwapChainIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SwapChainIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISwapChainIsland_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISwapChainIsland_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISwapChainIsland[] = L"Microsoft.UI.Composition.ISwapChainIsland";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("D7FE1A04-3B99-525A-A9CF-E562BEA08230"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("D7FE1A04-3B99-525A-A9CF-E562BEA08230")
            ISwapChainIsland : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE ClearSwapChain(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISwapChainIsland=_uuidof(ISwapChainIsland);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISwapChainIsland;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISwapChainIsland_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector2KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector2KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector2KeyFrameAnimation[] = L"Microsoft.UI.Composition.IVector2KeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("E9C5E3FD-43B7-526E-9DA0-4C3EA96DB27D"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("E9C5E3FD-43B7-526E-9DA0-4C3EA96DB27D")
            IVector2KeyFrameAnimation : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::Foundation::Numerics::Vector2 value,
                    /* [in] */Microsoft::UI::Composition::ICompositionEasingFunction * easingFunction
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVector2KeyFrameAnimation=_uuidof(IVector2KeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector2NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.IVector2NaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("E00E60CE-D1BE-5C24-885D-C1D0A749D109"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("E00E60CE-D1BE-5C24-885D-C1D0A749D109")
            IVector2NaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FinalValue(
                    /* [retval, out] */__FIReference_1_Windows__CFoundation__CNumerics__CVector2 * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FinalValue(
                    /* [in] */__FIReference_1_Windows__CFoundation__CNumerics__CVector2 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InitialValue(
                    /* [retval, out] */__FIReference_1_Windows__CFoundation__CNumerics__CVector2 * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InitialValue(
                    /* [in] */__FIReference_1_Windows__CFoundation__CNumerics__CVector2 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InitialVelocity(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InitialVelocity(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVector2NaturalMotionAnimation=_uuidof(IVector2NaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector2NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector2NaturalMotionAnimationFactory[] = L"Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("E39AEAD8-80F9-5F64-8644-E9E5646B796F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("E39AEAD8-80F9-5F64-8644-E9E5646B796F")
            IVector2NaturalMotionAnimationFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IVector2NaturalMotionAnimationFactory=_uuidof(IVector2NaturalMotionAnimationFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector3KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector3KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector3KeyFrameAnimation[] = L"Microsoft.UI.Composition.IVector3KeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("D7DA980E-2DDE-5DD1-A40C-D6868DD2449E"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("D7DA980E-2DDE-5DD1-A40C-D6868DD2449E")
            IVector3KeyFrameAnimation : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::Foundation::Numerics::Vector3 value,
                    /* [in] */Microsoft::UI::Composition::ICompositionEasingFunction * easingFunction
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVector3KeyFrameAnimation=_uuidof(IVector3KeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector3NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.IVector3NaturalMotionAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("13FEEEF2-D2C0-5B72-AD67-983A19B9B783"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("13FEEEF2-D2C0-5B72-AD67-983A19B9B783")
            IVector3NaturalMotionAnimation : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FinalValue(
                    /* [retval, out] */__FIReference_1_Windows__CFoundation__CNumerics__CVector3 * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FinalValue(
                    /* [in] */__FIReference_1_Windows__CFoundation__CNumerics__CVector3 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InitialValue(
                    /* [retval, out] */__FIReference_1_Windows__CFoundation__CNumerics__CVector3 * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InitialValue(
                    /* [in] */__FIReference_1_Windows__CFoundation__CNumerics__CVector3 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_InitialVelocity(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_InitialVelocity(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVector3NaturalMotionAnimation=_uuidof(IVector3NaturalMotionAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector3NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector3NaturalMotionAnimationFactory[] = L"Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("428241CB-BE9C-5C2A-939C-EC78AA60BB8A"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("428241CB-BE9C-5C2A-939C-EC78AA60BB8A")
            IVector3NaturalMotionAnimationFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IVector3NaturalMotionAnimationFactory=_uuidof(IVector3NaturalMotionAnimationFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector4KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector4KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector4KeyFrameAnimation[] = L"Microsoft.UI.Composition.IVector4KeyFrameAnimation";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("16CEA3B9-C5E3-5F6F-B5C7-DA29A31CCFC7"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("16CEA3B9-C5E3-5F6F-B5C7-DA29A31CCFC7")
            IVector4KeyFrameAnimation : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrame(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::Foundation::Numerics::Vector4 value
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE InsertKeyFrameWithEasingFunction(
                    /* [in] */FLOAT normalizedProgressKey,
                    /* [in] */Windows::Foundation::Numerics::Vector4 value,
                    /* [in] */Microsoft::UI::Composition::ICompositionEasingFunction * easingFunction
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVector4KeyFrameAnimation=_uuidof(IVector4KeyFrameAnimation);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Visual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisual[] = L"Microsoft.UI.Composition.IVisual";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("C0EEAB6C-C897-5AC6-A1C9-63ABD5055B9B"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("C0EEAB6C-C897-5AC6-A1C9-63ABD5055B9B")
            IVisual : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AnchorPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AnchorPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BackfaceVisibility(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionBackfaceVisibility * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BackfaceVisibility(
                    /* [in] */Microsoft::UI::Composition::CompositionBackfaceVisibility value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BorderMode(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionBorderMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BorderMode(
                    /* [in] */Microsoft::UI::Composition::CompositionBorderMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Clip(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionClip * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Clip(
                    /* [in] */Microsoft::UI::Composition::ICompositionClip * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CompositeMode(
                    /* [retval, out] */Microsoft::UI::Composition::CompositionCompositeMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CompositeMode(
                    /* [in] */Microsoft::UI::Composition::CompositionCompositeMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsVisible(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Offset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Offset(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Opacity(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Opacity(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Orientation(
                    /* [retval, out] */Windows::Foundation::Numerics::Quaternion * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Orientation(
                    /* [in] */Windows::Foundation::Numerics::Quaternion value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Parent(
                    /* [retval, out] */Microsoft::UI::Composition::IContainerVisual * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngle(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngle(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAngleInDegrees(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAngleInDegrees(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAxis(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAxis(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Scale(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Scale(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Size(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Size(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                    /* [retval, out] */Windows::Foundation::Numerics::Matrix4x4 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                    /* [in] */Windows::Foundation::Numerics::Matrix4x4 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisual=_uuidof(IVisual);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisual2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Visual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisual2[] = L"Microsoft.UI.Composition.IVisual2";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("492A7995-0C5C-5993-A283-52E4DA3050EE"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("492A7995-0C5C-5993-A283-52E4DA3050EE")
            IVisual2 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ParentForTransform(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ParentForTransform(
                    /* [in] */Microsoft::UI::Composition::IVisual * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RelativeOffsetAdjustment(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RelativeOffsetAdjustment(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RelativeSizeAdjustment(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RelativeSizeAdjustment(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisual2=_uuidof(IVisual2);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisual2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisual3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Visual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisual3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisual3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisual3[] = L"Microsoft.UI.Composition.IVisual3";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("972B70B0-950D-5656-A380-BD4A70775868"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("972B70B0-950D-5656-A380-BD4A70775868")
            IVisual3 : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsHitTestVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsHitTestVisible(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisual3=_uuidof(IVisual3);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisual3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisual3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualCollection[] = L"Microsoft.UI.Composition.IVisualCollection";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("D002896D-67D8-5F69-AB70-581FA3BF370F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("D002896D-67D8-5F69-AB70-581FA3BF370F")
            IVisualCollection : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Count(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertAbove(
                    /* [in] */Microsoft::UI::Composition::IVisual * newChild,
                    /* [in] */Microsoft::UI::Composition::IVisual * sibling
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertAtBottom(
                    /* [in] */Microsoft::UI::Composition::IVisual * newChild
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertAtTop(
                    /* [in] */Microsoft::UI::Composition::IVisual * newChild
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InsertBelow(
                    /* [in] */Microsoft::UI::Composition::IVisual * newChild,
                    /* [in] */Microsoft::UI::Composition::IVisual * sibling
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Remove(
                    /* [in] */Microsoft::UI::Composition::IVisual * child
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualCollection=_uuidof(IVisualCollection);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualElement
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualElement[] = L"Microsoft.UI.Composition.IVisualElement";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("2180F1F5-B5D8-4BF6-920A-12006E63EFEF"), experimental, contract] */
            MIDL_INTERFACE("2180F1F5-B5D8-4BF6-920A-12006E63EFEF")
            IVisualElement : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualElement=_uuidof(IVisualElement);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualElement;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Visual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualFactory[] = L"Microsoft.UI.Composition.IVisualFactory";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("77BB4668-83FA-5BB5-B78B-5E6FDC3D4038"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("77BB4668-83FA-5BB5-B78B-5E6FDC3D4038")
            IVisualFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualFactory=_uuidof(IVisualFactory);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualIslandSite
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualIslandSite_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualIslandSite_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualIslandSite[] = L"Microsoft.UI.Composition.IVisualIslandSite";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("4EF6D9E9-E239-5952-9A89-710240AE246A"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("4EF6D9E9-E239-5952-9A89-710240AE246A")
            IVisualIslandSite : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualSize(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ActualSize(
                    /* [in] */Windows::Foundation::Numerics::Vector2 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsSiteVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsSiteVisible(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RequestedSize(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SiteVisual(
                    /* [retval, out] */Microsoft::UI::Composition::IVisual * * value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_RequestedSizeChanged(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_RequestedSizeChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualIslandSite=_uuidof(IVisualIslandSite);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualIslandSite;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualIslandSite_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualIslandSiteEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualIslandSiteEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualIslandSiteEventArgs[] = L"Microsoft.UI.Composition.IVisualIslandSiteEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("D7C75727-A18B-5A0A-94C8-526CC06DAA0F"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("D7C75727-A18B-5A0A-94C8-526CC06DAA0F")
            IVisualIslandSiteEventArgs : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualIslandSiteEventArgs=_uuidof(IVisualIslandSiteEventArgs);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualTreeIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualTreeIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualTreeIsland[] = L"Microsoft.UI.Composition.IVisualTreeIsland";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("4887FF1F-6CD3-542D-B641-6EE121193B68"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("4887FF1F-6CD3-542D-B641-6EE121193B68")
            IVisualTreeIsland : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Children(
                    /* [retval, out] */Microsoft::UI::Composition::IVisualCollection * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualTreeIsland=_uuidof(IVisualTreeIsland);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualTreeIsland;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualUnorderedCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualUnorderedCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualUnorderedCollection[] = L"Microsoft.UI.Composition.IVisualUnorderedCollection";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("4A97216E-793E-54E3-96E8-F9DB790119CD"), experimental, exclusiveto, contract] */
            MIDL_INTERFACE("4A97216E-793E-54E3-96E8-F9DB790119CD")
            IVisualUnorderedCollection : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Count(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Add(
                    /* [in] */Microsoft::UI::Composition::IVisual * newVisual
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Remove(
                    /* [in] */Microsoft::UI::Composition::IVisual * visual
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RemoveAll(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualUnorderedCollection=_uuidof(IVisualUnorderedCollection);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisual_CompositionIslands
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisual_CompositionIslands[] = L"Microsoft.UI.Composition.IVisual_CompositionIslands";

namespace Microsoft {
    namespace UI {
        namespace Composition {
            /* [object, uuid("6D7D845D-643E-5079-8F70-65DC1C0ECE23"), experimental, contract] */
            MIDL_INTERFACE("6D7D845D-643E-5079-8F70-65DC1C0ECE23")
            IVisual_CompositionIslands : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateAnchor(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositionAnchor * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisual_CompositionIslands=_uuidof(IVisual_CompositionIslands);
            
        } /* Composition */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.AmbientLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IAmbientLight ** Default Interface **
 *    Microsoft.UI.Composition.IAmbientLight2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_AmbientLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_AmbientLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_AmbientLight[] = L"Microsoft.UI.Composition.AmbientLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.AnimationController
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.IAnimationControllerStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IAnimationController ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_AnimationController_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_AnimationController_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_AnimationController[] = L"Microsoft.UI.Composition.AnimationController";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.AnimationPropertyInfo
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IAnimationPropertyInfo ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_AnimationPropertyInfo_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_AnimationPropertyInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_AnimationPropertyInfo[] = L"Microsoft.UI.Composition.AnimationPropertyInfo";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.BooleanKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IBooleanKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_BooleanKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_BooleanKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_BooleanKeyFrameAnimation[] = L"Microsoft.UI.Composition.BooleanKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_BounceScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_BounceScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_BounceScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_BounceVector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_BounceVector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_BounceVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_BounceVector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_BounceVector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_BounceVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ColorKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IColorKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ColorKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ColorKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ColorKeyFrameAnimation[] = L"Microsoft.UI.Composition.ColorKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionAnchor
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionAnchor ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnchor_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnchor_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionAnchor[] = L"Microsoft.UI.Composition.CompositionAnchor";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionAnimation ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionAnimation2
 *    Microsoft.UI.Composition.ICompositionAnimation3
 *    Microsoft.UI.Composition.ICompositionAnimation4
 *    Microsoft.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionAnimation[] = L"Microsoft.UI.Composition.CompositionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionAnimationGroup
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionAnimationGroup ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionAnimation
 *    Microsoft.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnimationGroup_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnimationGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionAnimationGroup[] = L"Microsoft.UI.Composition.CompositionAnimationGroup";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionBackdropBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionBackdropBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionBackdropBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionBackdropBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionBackdropBrush[] = L"Microsoft.UI.Composition.CompositionBackdropBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionBatchCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionBatchCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionBatchCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionBatchCompletedEventArgs[] = L"Microsoft.UI.Composition.CompositionBatchCompletedEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionBrush[] = L"Microsoft.UI.Composition.CompositionBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionCapabilities
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionCapabilitiesStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionCapabilities ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionCapabilities_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionCapabilities_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionCapabilities[] = L"Microsoft.UI.Composition.CompositionCapabilities";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionClip ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionClip2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionClip_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionClip[] = L"Microsoft.UI.Composition.CompositionClip";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionColorBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionColorBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionColorBrush[] = L"Microsoft.UI.Composition.CompositionColorBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionColorGradientStop
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionColorGradientStop ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorGradientStop_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorGradientStop_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionColorGradientStop[] = L"Microsoft.UI.Composition.CompositionColorGradientStop";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionColorGradientStopCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionColorGradientStopCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionColorGradientStop
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Composition.CompositionColorGradientStop
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorGradientStopCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorGradientStopCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionColorGradientStopCollection[] = L"Microsoft.UI.Composition.CompositionColorGradientStopCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionCommitBatch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionCommitBatch ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionCommitBatch_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionCommitBatch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionCommitBatch[] = L"Microsoft.UI.Composition.CompositionCommitBatch";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionContainerShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionContainerShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionContainerShape_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionContainerShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionContainerShape[] = L"Microsoft.UI.Composition.CompositionContainerShape";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionDrawingSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionDrawingSurface ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionDrawingSurface2
 *    Microsoft.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionDrawingSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionDrawingSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionDrawingSurface[] = L"Microsoft.UI.Composition.CompositionDrawingSurface";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEasingFunction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEasingFunction[] = L"Microsoft.UI.Composition.CompositionEasingFunction";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEffectBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEffectBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEffectBrush[] = L"Microsoft.UI.Composition.CompositionEffectBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEffectFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEffectFactory ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectFactory_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectFactory_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEffectFactory[] = L"Microsoft.UI.Composition.CompositionEffectFactory";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEffectSourceParameter
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEffectSourceParameter ** Default Interface **
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectSourceParameter_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectSourceParameter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEffectSourceParameter[] = L"Microsoft.UI.Composition.CompositionEffectSourceParameter";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEllipseGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEllipseGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEllipseGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEllipseGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEllipseGeometry[] = L"Microsoft.UI.Composition.CompositionEllipseGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionGeometricClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionGeometricClip ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionGeometricClip_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionGeometricClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionGeometricClip[] = L"Microsoft.UI.Composition.CompositionGeometricClip";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionGeometry[] = L"Microsoft.UI.Composition.CompositionGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionGradientBrush ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionGradientBrush2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionGradientBrush[] = L"Microsoft.UI.Composition.CompositionGradientBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionGraphicsDevice
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionGraphicsDevice ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionGraphicsDevice2
 *    Microsoft.UI.Composition.ICompositionGraphicsDevice3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionGraphicsDevice_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionGraphicsDevice_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionGraphicsDevice[] = L"Microsoft.UI.Composition.CompositionGraphicsDevice";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionIslandStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIsland ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIsland_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIsland_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIsland[] = L"Microsoft.UI.Composition.CompositionIsland";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIslandAutomationProviderRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIslandAutomationProviderRequestedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandAutomationProviderRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandAutomationProviderRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIslandAutomationProviderRequestedEventArgs[] = L"Microsoft.UI.Composition.CompositionIslandAutomationProviderRequestedEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIslandEnvironment
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionIslandEnvironmentStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIslandEnvironment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandEnvironment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandEnvironment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIslandEnvironment[] = L"Microsoft.UI.Composition.CompositionIslandEnvironment";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIslandEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIslandEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIslandEventArgs[] = L"Microsoft.UI.Composition.CompositionIslandEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIslandSite ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandSite_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandSite_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIslandSite[] = L"Microsoft.UI.Composition.CompositionIslandSite";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionLight ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionLight2
 *    Microsoft.UI.Composition.ICompositionLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionLight[] = L"Microsoft.UI.Composition.CompositionLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionLineGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionLineGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionLineGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionLineGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionLineGeometry[] = L"Microsoft.UI.Composition.CompositionLineGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionLinearGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionLinearGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionLinearGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionLinearGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionLinearGradientBrush[] = L"Microsoft.UI.Composition.CompositionLinearGradientBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionMaskBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionMaskBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionMaskBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionMaskBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionMaskBrush[] = L"Microsoft.UI.Composition.CompositionMaskBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionMipmapSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionMipmapSurface ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionMipmapSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionMipmapSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionMipmapSurface[] = L"Microsoft.UI.Composition.CompositionMipmapSurface";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionNineGridBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionNineGridBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionNineGridBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionNineGridBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionNineGridBrush[] = L"Microsoft.UI.Composition.CompositionNineGridBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionNotificationDeferral
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionNotificationDeferral ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionNotificationDeferral_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionNotificationDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionNotificationDeferral[] = L"Microsoft.UI.Composition.CompositionNotificationDeferral";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionObject
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionObjectStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionObject ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionObject2
 *    Microsoft.UI.Composition.ICompositionObject3
 *    Microsoft.UI.Composition.ICompositionObject4
 *    Windows.Foundation.IClosable
 *    Microsoft.UI.Composition.IAnimationObject
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionObject_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionObject[] = L"Microsoft.UI.Composition.CompositionObject";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionPath
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Composition.ICompositionPathFactory interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionPath ** Default Interface **
 *    Microsoft.Graphics.IGeometrySource2D
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionPath_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionPath[] = L"Microsoft.UI.Composition.CompositionPath";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionPathGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionPathGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionPathGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionPathGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionPathGeometry[] = L"Microsoft.UI.Composition.CompositionPathGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadow ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionProjectedShadow2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadow[] = L"Microsoft.UI.Composition.CompositionProjectedShadow";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadowCaster
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadowCaster ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionProjectedShadowCaster2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowCaster_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowCaster_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadowCaster[] = L"Microsoft.UI.Composition.CompositionProjectedShadowCaster";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionProjectedShadowCaster
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowCasterCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowCasterCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadowCasterCollection[] = L"Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadowReceiver
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadowReceiver ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionProjectedShadowReceiver2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowReceiver_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowReceiver_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadowReceiver[] = L"Microsoft.UI.Composition.CompositionProjectedShadowReceiver";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionProjectedShadowReceiver
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection[] = L"Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionPropertySet
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionPropertySet ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionPropertySet2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionPropertySet_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionPropertySet_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionPropertySet[] = L"Microsoft.UI.Composition.CompositionPropertySet";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionRadialGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionRadialGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionRadialGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionRadialGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionRadialGradientBrush[] = L"Microsoft.UI.Composition.CompositionRadialGradientBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionRectangleGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionRectangleGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionRectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionRectangleGeometry[] = L"Microsoft.UI.Composition.CompositionRectangleGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionRoundedRectangleGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionRoundedRectangleGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionRoundedRectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionRoundedRectangleGeometry[] = L"Microsoft.UI.Composition.CompositionRoundedRectangleGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionScopedBatch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionScopedBatch ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionScopedBatch_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionScopedBatch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionScopedBatch[] = L"Microsoft.UI.Composition.CompositionScopedBatch";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionShadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionShadow[] = L"Microsoft.UI.Composition.CompositionShadow";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionShape_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionShape[] = L"Microsoft.UI.Composition.CompositionShape";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionShapeCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Composition.CompositionShape ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionShape
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionShapeCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionShapeCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionShapeCollection[] = L"Microsoft.UI.Composition.CompositionShapeCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionSpriteShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionSpriteShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionSpriteShape_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionSpriteShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionSpriteShape[] = L"Microsoft.UI.Composition.CompositionSpriteShape";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionStrokeDashArray
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_float ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_float
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionStrokeDashArray_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionStrokeDashArray_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionStrokeDashArray[] = L"Microsoft.UI.Composition.CompositionStrokeDashArray";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionSurfaceBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionSurfaceBrush ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionSurfaceBrush2
 *    Microsoft.UI.Composition.ICompositionSurfaceBrush3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionSurfaceBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionSurfaceBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionSurfaceBrush[] = L"Microsoft.UI.Composition.CompositionSurfaceBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionTarget
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionTarget ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionTarget_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionTarget_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionTarget[] = L"Microsoft.UI.Composition.CompositionTarget";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionTransform
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionTransform[] = L"Microsoft.UI.Composition.CompositionTransform";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionViewBox
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionViewBox ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionViewBox_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionViewBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionViewBox[] = L"Microsoft.UI.Composition.CompositionViewBox";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionVirtualDrawingSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionVirtualDrawingSurface ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionVirtualDrawingSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionVirtualDrawingSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionVirtualDrawingSurface[] = L"Microsoft.UI.Composition.CompositionVirtualDrawingSurface";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionVisualSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionVisualSurface ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionVisualSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionVisualSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionVisualSurface[] = L"Microsoft.UI.Composition.CompositionVisualSurface";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Compositor
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositorStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositor ** Default Interface **
 *    Microsoft.UI.Composition.ICompositor2
 *    Microsoft.UI.Composition.ICompositor3
 *    Microsoft.UI.Composition.ICompositor4
 *    Microsoft.UI.Composition.ICompositor5
 *    Microsoft.UI.Composition.ICompositor6
 *    Microsoft.UI.Composition.ICompositorWithCompositionIslands
 *    Microsoft.UI.Composition.ICompositorWithProjectedShadow
 *    Microsoft.UI.Composition.ICompositorWithRadialGradient
 *    Microsoft.UI.Composition.ICompositorWithVisualSurface
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Compositor_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Compositor_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Compositor[] = L"Microsoft.UI.Composition.Compositor";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ContainerVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IContainerVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ContainerVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ContainerVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ContainerVisual[] = L"Microsoft.UI.Composition.ContainerVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CubicBezierEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICubicBezierEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CubicBezierEasingFunction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CubicBezierEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CubicBezierEasingFunction[] = L"Microsoft.UI.Composition.CubicBezierEasingFunction";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.DistantLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IDistantLight ** Default Interface **
 *    Microsoft.UI.Composition.IDistantLight2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_DistantLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_DistantLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_DistantLight[] = L"Microsoft.UI.Composition.DistantLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.DropShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IDropShadow ** Default Interface **
 *    Microsoft.UI.Composition.IDropShadow2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_DropShadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_DropShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_DropShadow[] = L"Microsoft.UI.Composition.DropShadow";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ExpressionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IExpressionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ExpressionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ExpressionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ExpressionAnimation[] = L"Microsoft.UI.Composition.ExpressionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ImplicitAnimationCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IImplicitAnimationCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase
 *    Windows.Foundation.Collections.IMap_2_HSTRING,Microsoft.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ImplicitAnimationCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ImplicitAnimationCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ImplicitAnimationCollection[] = L"Microsoft.UI.Composition.ImplicitAnimationCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.InitialValueExpressionCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IMap_2_HSTRING,HSTRING ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1___FIKeyValuePair_2_HSTRING_HSTRING
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_InitialValueExpressionCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_InitialValueExpressionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_InitialValueExpressionCollection[] = L"Microsoft.UI.Composition.InitialValueExpressionCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.InsetClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IInsetClip ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_InsetClip_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_InsetClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_InsetClip[] = L"Microsoft.UI.Composition.InsetClip";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IKeyFrameAnimation ** Default Interface **
 *    Microsoft.UI.Composition.IKeyFrameAnimation2
 *    Microsoft.UI.Composition.IKeyFrameAnimation3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_KeyFrameAnimation[] = L"Microsoft.UI.Composition.KeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.LayerVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ILayerVisual ** Default Interface **
 *    Microsoft.UI.Composition.ILayerVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_LayerVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_LayerVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_LayerVisual[] = L"Microsoft.UI.Composition.LayerVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.LinearEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ILinearEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_LinearEasingFunction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_LinearEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_LinearEasingFunction[] = L"Microsoft.UI.Composition.LinearEasingFunction";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.INaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_NaturalMotionAnimation[] = L"Microsoft.UI.Composition.NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.PathKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IPathKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_PathKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_PathKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_PathKeyFrameAnimation[] = L"Microsoft.UI.Composition.PathKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.PointLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IPointLight ** Default Interface **
 *    Microsoft.UI.Composition.IPointLight2
 *    Microsoft.UI.Composition.IPointLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_PointLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_PointLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_PointLight[] = L"Microsoft.UI.Composition.PointLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.PopupIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IPopupIslandSite ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_PopupIslandSite_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_PopupIslandSite_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_PopupIslandSite[] = L"Microsoft.UI.Composition.PopupIslandSite";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.QuaternionKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IQuaternionKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_QuaternionKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_QuaternionKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_QuaternionKeyFrameAnimation[] = L"Microsoft.UI.Composition.QuaternionKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.RedirectVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IRedirectVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_RedirectVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_RedirectVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_RedirectVisual[] = L"Microsoft.UI.Composition.RedirectVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs[] = L"Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ScalarKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IScalarKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ScalarKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ScalarKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ScalarKeyFrameAnimation[] = L"Microsoft.UI.Composition.ScalarKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.ScalarNaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ShapeVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IShapeVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ShapeVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ShapeVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ShapeVisual[] = L"Microsoft.UI.Composition.ShapeVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpotLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpotLight ** Default Interface **
 *    Microsoft.UI.Composition.ISpotLight2
 *    Microsoft.UI.Composition.ISpotLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpotLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpotLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpotLight[] = L"Microsoft.UI.Composition.SpotLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpringScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpringScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpringScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpringVector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpringVector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpringVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpringVector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpringVector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpringVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpriteVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpriteVisual ** Default Interface **
 *    Microsoft.UI.Composition.ISpriteVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpriteVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpriteVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpriteVisual[] = L"Microsoft.UI.Composition.SpriteVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.StepEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IStepEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_StepEasingFunction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_StepEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_StepEasingFunction[] = L"Microsoft.UI.Composition.StepEasingFunction";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SwapChainIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISwapChainIsland ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SwapChainIsland_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SwapChainIsland_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SwapChainIsland[] = L"Microsoft.UI.Composition.SwapChainIsland";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector2KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector2KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector2KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector2KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector2KeyFrameAnimation[] = L"Microsoft.UI.Composition.Vector2KeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.Vector2NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector3KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector3KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector3KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector3KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector3KeyFrameAnimation[] = L"Microsoft.UI.Composition.Vector3KeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.Vector3NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector4KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector4KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector4KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector4KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector4KeyFrameAnimation[] = L"Microsoft.UI.Composition.Vector4KeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Visual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisual ** Default Interface **
 *    Microsoft.UI.Composition.IVisual2
 *    Microsoft.UI.Composition.IVisual3
 *    Microsoft.UI.Composition.IVisual_CompositionIslands
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Visual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Visual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Visual[] = L"Microsoft.UI.Composition.Visual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.Visual
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualCollection[] = L"Microsoft.UI.Composition.VisualCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualIslandSite ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionIslandSite
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualIslandSite_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualIslandSite_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualIslandSite[] = L"Microsoft.UI.Composition.VisualIslandSite";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualIslandSiteEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualIslandSiteEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualIslandSiteEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualIslandSiteEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualIslandSiteEventArgs[] = L"Microsoft.UI.Composition.VisualIslandSiteEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualTreeIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualTreeIsland ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualTreeIsland_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualTreeIsland_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualTreeIsland[] = L"Microsoft.UI.Composition.VisualTreeIsland";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualUnorderedCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualUnorderedCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.Visual
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualUnorderedCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualUnorderedCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualUnorderedCollection[] = L"Microsoft.UI.Composition.VisualUnorderedCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000




#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAmbientLight_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIAmbientLight __x_Microsoft_CUI_CComposition_CIAmbientLight;

#endif // ____x_Microsoft_CUI_CComposition_CIAmbientLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIAmbientLight2 __x_Microsoft_CUI_CComposition_CIAmbientLight2;

#endif // ____x_Microsoft_CUI_CComposition_CIAmbientLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationController_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationController_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIAnimationController __x_Microsoft_CUI_CComposition_CIAnimationController;

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationController_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics;

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIAnimationObject __x_Microsoft_CUI_CComposition_CIAnimationObject;

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo;

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnchor_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnchor_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnchor __x_Microsoft_CUI_CComposition_CICompositionAnchor;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnchor_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnimation __x_Microsoft_CUI_CComposition_CICompositionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnimation2 __x_Microsoft_CUI_CComposition_CICompositionAnimation2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimation2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnimation3 __x_Microsoft_CUI_CComposition_CICompositionAnimation3;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimation3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnimation4 __x_Microsoft_CUI_CComposition_CICompositionAnimation4;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimation4_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnimationBase __x_Microsoft_CUI_CComposition_CICompositionAnimationBase;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionBrush __x_Microsoft_CUI_CComposition_CICompositionBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionBrushFactory __x_Microsoft_CUI_CComposition_CICompositionBrushFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionCapabilities __x_Microsoft_CUI_CComposition_CICompositionCapabilities;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionCapabilities_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionClip_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionClip_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionClip __x_Microsoft_CUI_CComposition_CICompositionClip;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionClip_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionClip2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionClip2 __x_Microsoft_CUI_CComposition_CICompositionClip2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionClip2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionClipFactory __x_Microsoft_CUI_CComposition_CICompositionClipFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionClipFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionColorBrush __x_Microsoft_CUI_CComposition_CICompositionColorBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionColorBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionCommitBatch __x_Microsoft_CUI_CComposition_CICompositionCommitBatch;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionContainerShape __x_Microsoft_CUI_CComposition_CICompositionContainerShape;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionContainerShape_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionEasingFunction __x_Microsoft_CUI_CComposition_CICompositionEasingFunction;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionEffectBrush __x_Microsoft_CUI_CComposition_CICompositionEffectBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionEffectFactory __x_Microsoft_CUI_CComposition_CICompositionEffectFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGeometricClip __x_Microsoft_CUI_CComposition_CICompositionGeometricClip;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGeometry __x_Microsoft_CUI_CComposition_CICompositionGeometry;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGradientBrush __x_Microsoft_CUI_CComposition_CICompositionGradientBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIsland_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIsland_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIsland __x_Microsoft_CUI_CComposition_CICompositionIsland;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIsland_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIslandFactory __x_Microsoft_CUI_CComposition_CICompositionIslandFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandSite_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandSite_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIslandSite __x_Microsoft_CUI_CComposition_CICompositionIslandSite;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandSite_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionIslandStatics __x_Microsoft_CUI_CComposition_CICompositionIslandStatics;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionLight __x_Microsoft_CUI_CComposition_CICompositionLight;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLight2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionLight2 __x_Microsoft_CUI_CComposition_CICompositionLight2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLight3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionLight3 __x_Microsoft_CUI_CComposition_CICompositionLight3;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLight3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionLightFactory __x_Microsoft_CUI_CComposition_CICompositionLightFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLightFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionLineGeometry __x_Microsoft_CUI_CComposition_CICompositionLineGeometry;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionMaskBrush __x_Microsoft_CUI_CComposition_CICompositionMaskBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObject_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObject_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionObject __x_Microsoft_CUI_CComposition_CICompositionObject;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObject_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObject2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionObject2 __x_Microsoft_CUI_CComposition_CICompositionObject2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObject2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObject3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionObject3 __x_Microsoft_CUI_CComposition_CICompositionObject3;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObject3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObject4_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionObject4 __x_Microsoft_CUI_CComposition_CICompositionObject4;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObject4_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionObjectFactory __x_Microsoft_CUI_CComposition_CICompositionObjectFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionObjectStatics __x_Microsoft_CUI_CComposition_CICompositionObjectStatics;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPath_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPath_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionPath __x_Microsoft_CUI_CComposition_CICompositionPath;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPath_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionPathFactory __x_Microsoft_CUI_CComposition_CICompositionPathFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPathFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionPathGeometry __x_Microsoft_CUI_CComposition_CICompositionPathGeometry;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionPropertySet __x_Microsoft_CUI_CComposition_CICompositionPropertySet;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPropertySet_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 __x_Microsoft_CUI_CComposition_CICompositionPropertySet2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionScopedBatch __x_Microsoft_CUI_CComposition_CICompositionScopedBatch;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionShadow_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionShadow __x_Microsoft_CUI_CComposition_CICompositionShadow;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionShadow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionShadowFactory __x_Microsoft_CUI_CComposition_CICompositionShadowFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionShape_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionShape_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionShape __x_Microsoft_CUI_CComposition_CICompositionShape;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionShape_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionShapeFactory __x_Microsoft_CUI_CComposition_CICompositionShapeFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionSpriteShape __x_Microsoft_CUI_CComposition_CICompositionSpriteShape;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionSurface __x_Microsoft_CUI_CComposition_CICompositionSurface;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionTarget_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionTarget __x_Microsoft_CUI_CComposition_CICompositionTarget;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionTarget_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionTargetFactory __x_Microsoft_CUI_CComposition_CICompositionTargetFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionTransform_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionTransform __x_Microsoft_CUI_CComposition_CICompositionTransform;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionTransform_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionTransformFactory __x_Microsoft_CUI_CComposition_CICompositionTransformFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionViewBox __x_Microsoft_CUI_CComposition_CICompositionViewBox;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionViewBox_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionVisualSurface __x_Microsoft_CUI_CComposition_CICompositionVisualSurface;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositor __x_Microsoft_CUI_CComposition_CICompositor;

#endif // ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositor2 __x_Microsoft_CUI_CComposition_CICompositor2;

#endif // ____x_Microsoft_CUI_CComposition_CICompositor2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositor3 __x_Microsoft_CUI_CComposition_CICompositor3;

#endif // ____x_Microsoft_CUI_CComposition_CICompositor3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor4_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor4_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositor4 __x_Microsoft_CUI_CComposition_CICompositor4;

#endif // ____x_Microsoft_CUI_CComposition_CICompositor4_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor5_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor5_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositor5 __x_Microsoft_CUI_CComposition_CICompositor5;

#endif // ____x_Microsoft_CUI_CComposition_CICompositor5_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor6_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor6_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositor6 __x_Microsoft_CUI_CComposition_CICompositor6;

#endif // ____x_Microsoft_CUI_CComposition_CICompositor6_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositorStatics __x_Microsoft_CUI_CComposition_CICompositorStatics;

#endif // ____x_Microsoft_CUI_CComposition_CICompositorStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands;

#endif // ____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow;

#endif // ____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient;

#endif // ____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface;

#endif // ____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIContainerVisual_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIContainerVisual __x_Microsoft_CUI_CComposition_CIContainerVisual;

#endif // ____x_Microsoft_CUI_CComposition_CIContainerVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIContainerVisualFactory __x_Microsoft_CUI_CComposition_CIContainerVisualFactory;

#endif // ____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction;

#endif // ____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIDistantLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIDistantLight_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIDistantLight __x_Microsoft_CUI_CComposition_CIDistantLight;

#endif // ____x_Microsoft_CUI_CComposition_CIDistantLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIDistantLight2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIDistantLight2 __x_Microsoft_CUI_CComposition_CIDistantLight2;

#endif // ____x_Microsoft_CUI_CComposition_CIDistantLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIDropShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIDropShadow_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIDropShadow __x_Microsoft_CUI_CComposition_CIDropShadow;

#endif // ____x_Microsoft_CUI_CComposition_CIDropShadow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIDropShadow2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIDropShadow2 __x_Microsoft_CUI_CComposition_CIDropShadow2;

#endif // ____x_Microsoft_CUI_CComposition_CIDropShadow2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIExpressionAnimation __x_Microsoft_CUI_CComposition_CIExpressionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIExpressionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection;

#endif // ____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIInsetClip_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIInsetClip_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIInsetClip __x_Microsoft_CUI_CComposition_CIInsetClip;

#endif // ____x_Microsoft_CUI_CComposition_CIInsetClip_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2;

#endif // ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3;

#endif // ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory;

#endif // ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CILayerVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CILayerVisual_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CILayerVisual __x_Microsoft_CUI_CComposition_CILayerVisual;

#endif // ____x_Microsoft_CUI_CComposition_CILayerVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CILayerVisual2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CILayerVisual2 __x_Microsoft_CUI_CComposition_CILayerVisual2;

#endif // ____x_Microsoft_CUI_CComposition_CILayerVisual2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CILinearEasingFunction __x_Microsoft_CUI_CComposition_CILinearEasingFunction;

#endif // ____x_Microsoft_CUI_CComposition_CILinearEasingFunction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory;

#endif // ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPointLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPointLight_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIPointLight __x_Microsoft_CUI_CComposition_CIPointLight;

#endif // ____x_Microsoft_CUI_CComposition_CIPointLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPointLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPointLight2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIPointLight2 __x_Microsoft_CUI_CComposition_CIPointLight2;

#endif // ____x_Microsoft_CUI_CComposition_CIPointLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPointLight3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPointLight3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIPointLight3 __x_Microsoft_CUI_CComposition_CIPointLight3;

#endif // ____x_Microsoft_CUI_CComposition_CIPointLight3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIPopupIslandSite_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIPopupIslandSite_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIPopupIslandSite __x_Microsoft_CUI_CComposition_CIPopupIslandSite;

#endif // ____x_Microsoft_CUI_CComposition_CIPopupIslandSite_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIRedirectVisual __x_Microsoft_CUI_CComposition_CIRedirectVisual;

#endif // ____x_Microsoft_CUI_CComposition_CIRedirectVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs;

#endif // ____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory;

#endif // ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIShapeVisual_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIShapeVisual __x_Microsoft_CUI_CComposition_CIShapeVisual;

#endif // ____x_Microsoft_CUI_CComposition_CIShapeVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpotLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpotLight_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISpotLight __x_Microsoft_CUI_CComposition_CISpotLight;

#endif // ____x_Microsoft_CUI_CComposition_CISpotLight_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpotLight2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpotLight2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISpotLight2 __x_Microsoft_CUI_CComposition_CISpotLight2;

#endif // ____x_Microsoft_CUI_CComposition_CISpotLight2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpotLight3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpotLight3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISpotLight3 __x_Microsoft_CUI_CComposition_CISpotLight3;

#endif // ____x_Microsoft_CUI_CComposition_CISpotLight3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpriteVisual_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISpriteVisual __x_Microsoft_CUI_CComposition_CISpriteVisual;

#endif // ____x_Microsoft_CUI_CComposition_CISpriteVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISpriteVisual2 __x_Microsoft_CUI_CComposition_CISpriteVisual2;

#endif // ____x_Microsoft_CUI_CComposition_CISpriteVisual2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIStepEasingFunction __x_Microsoft_CUI_CComposition_CIStepEasingFunction;

#endif // ____x_Microsoft_CUI_CComposition_CIStepEasingFunction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CISwapChainIsland_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CISwapChainIsland_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CISwapChainIsland __x_Microsoft_CUI_CComposition_CISwapChainIsland;

#endif // ____x_Microsoft_CUI_CComposition_CISwapChainIsland_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory;

#endif // ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory;

#endif // ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation;

#endif // ____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisual_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisual_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisual __x_Microsoft_CUI_CComposition_CIVisual;

#endif // ____x_Microsoft_CUI_CComposition_CIVisual_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisual2_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisual2_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisual2 __x_Microsoft_CUI_CComposition_CIVisual2;

#endif // ____x_Microsoft_CUI_CComposition_CIVisual2_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisual3_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisual3_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisual3 __x_Microsoft_CUI_CComposition_CIVisual3;

#endif // ____x_Microsoft_CUI_CComposition_CIVisual3_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualCollection_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisualCollection __x_Microsoft_CUI_CComposition_CIVisualCollection;

#endif // ____x_Microsoft_CUI_CComposition_CIVisualCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisualElement __x_Microsoft_CUI_CComposition_CIVisualElement;

#endif // ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisualFactory __x_Microsoft_CUI_CComposition_CIVisualFactory;

#endif // ____x_Microsoft_CUI_CComposition_CIVisualFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualIslandSite_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualIslandSite_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisualIslandSite __x_Microsoft_CUI_CComposition_CIVisualIslandSite;

#endif // ____x_Microsoft_CUI_CComposition_CIVisualIslandSite_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs;

#endif // ____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisualTreeIsland __x_Microsoft_CUI_CComposition_CIVisualTreeIsland;

#endif // ____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection;

#endif // ____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands;

#endif // ____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation;

typedef struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CICompositionAnimation * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionAnimation * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimationVtbl;

interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimationVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation;

typedef  struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimationVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CComposition__CCompositionAnimation **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimationVtbl;

interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionAnimation_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop;

typedef struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl;

interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop;

typedef  struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl;

interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster;

typedef struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCasterVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCasterVtbl;

interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCasterVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster;

typedef  struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCasterVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCasterVtbl;

interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCasterVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowCaster_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver;

typedef struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl;

interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver;

typedef  struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl;

interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiverVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionProjectedShadowReceiver_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape;

typedef struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CICompositionShape * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionShape * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl;

interface __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape;

typedef  struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CComposition__CCompositionShape **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl;

interface __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterator_1_Microsoft__CUI__CComposition__CVisual_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CComposition__CVisual_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CComposition__CVisual __FIIterator_1_Microsoft__CUI__CComposition__CVisual;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CComposition__CVisual;

typedef struct __FIIterator_1_Microsoft__CUI__CComposition__CVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CIVisual * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CComposition__CVisual * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CIVisual * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CComposition__CVisualVtbl;

interface __FIIterator_1_Microsoft__CUI__CComposition__CVisual
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CComposition__CVisualVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CComposition__CVisual_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CComposition__CVisual_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterable_1_Microsoft__CUI__CComposition__CVisual_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CComposition__CVisual_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CComposition__CVisual __FIIterable_1_Microsoft__CUI__CComposition__CVisual;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CComposition__CVisual;

typedef  struct __FIIterable_1_Microsoft__CUI__CComposition__CVisualVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CVisual * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CVisual * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CVisual * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CVisual * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CVisual * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CVisual * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CComposition__CVisual * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CComposition__CVisual **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CComposition__CVisualVtbl;

interface __FIIterable_1_Microsoft__CUI__CComposition__CVisual
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CComposition__CVisualVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CComposition__CVisual_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CComposition__CVisual_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__out HSTRING *key);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * *value);
    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_get_Key(This,key)	\
    ( (This)->lpVtbl -> get_Key(This,key) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__out __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

typedef  struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase **first);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,/* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ __RPC__in HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * *value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [in] */ __RPC__in HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *Split )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,/* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase **firstPartition,
        /* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase **secondPartition);
    END_INTERFACE
} __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Split(This,firstPartition,secondPartition)	\
    ( (This)->lpVtbl -> Split(This,firstPartition,secondPartition) ) 
#endif /* COBJMACROS */


#endif // ____FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase;

typedef struct __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * **value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [in] */ HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This, /* [retval][out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase **view);
    HRESULT ( STDMETHODCALLTYPE *Insert )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,
        /* [in] */ HSTRING key,
        /* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * *value,
        /* [retval][out] */ __RPC__out boolean *replaced);
    HRESULT ( STDMETHODCALLTYPE *Remove )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This,/* [in] */ HSTRING key);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase * This);
    END_INTERFACE
} __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl;

interface __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase
{
    CONST_VTBL struct __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Insert(This,key,value,replaced)	\
    ( (This)->lpVtbl -> Insert(This,key,value,replaced) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Remove(This,key)	\
    ( (This)->lpVtbl -> Remove(This,key) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 
#endif /* COBJMACROS */



#endif // ____FIMap_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop;

typedef struct __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
            /* [in] */ __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl;

interface __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape;

typedef struct __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CICompositionShape * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This,
            /* [in] */ __x_Microsoft_CUI_CComposition_CICompositionShape * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionShape * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl;

interface __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop;

typedef struct __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl;

interface __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStopVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CComposition__CCompositionColorGradientStop_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CComposition__CCompositionShape;

typedef struct __FIVector_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CComposition_CICompositionShape * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CComposition_CICompositionShape * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CComposition__CCompositionShape **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CComposition_CICompositionShape * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CComposition_CICompositionShape * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl;

interface __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CComposition__CCompositionShapeVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CComposition__CCompositionShape_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface;

// Forward declare the async operation.
typedef interface __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface;

typedef struct __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurfaceVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface * This,/* [in] */ __RPC__in_opt __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface *asyncInfo, /* [in] */ AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurfaceVtbl;

interface __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurfaceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_Invoke(This,asyncInfo,status)	\
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface;

typedef struct __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurfaceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This, /* [in] */ __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface *handler);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This, /* [retval][out] */ __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Microsoft__CUI__CComposition__CICompositionSurface **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CComposition_CICompositionSurface * *results);
    END_INTERFACE
} __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurfaceVtbl;

interface __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface
{
    CONST_VTBL struct __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurfaceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_put_Completed(This,handler)	\
    ( (This)->lpVtbl -> put_Completed(This,handler) ) 
#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_get_Completed(This,handler)	\
    ( (This)->lpVtbl -> get_Completed(This,handler) ) 
#define __FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_GetResults(This,results)	\
    ( (This)->lpVtbl -> GetResults(This,results) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperation_1_Microsoft__CUI__CComposition__CICompositionSurface_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs;

typedef struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs * This,/* [in] */ __RPC__in_opt IInspectable * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl;

interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CICompositionCapabilities * sender,/* [in] */ __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CICompositionIsland * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CICompositionIsland * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CIVisualIslandSite * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs_INTERFACE_DEFINED__

#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000

#if !defined(____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_HSTRING __FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out HSTRING *key);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__deref_out_opt HSTRING *value);
    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIKeyValuePair_2_HSTRING_HSTRING_get_Key(This,key)	\
    ( (This)->lpVtbl -> get_Key(This,key) ) 

#define __FIKeyValuePair_2_HSTRING_HSTRING_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__



#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out __FIKeyValuePair_2_HSTRING_HSTRING * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __FIKeyValuePair_2_HSTRING_HSTRING * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__



#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING;

typedef  struct __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1___FIKeyValuePair_2_HSTRING_HSTRING **first);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_HSTRING_INTERFACE_DEFINED__


#if !defined(____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_HSTRING __FIMapView_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_HSTRING;

typedef struct __FIMapView_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,/* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt HSTRING *value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This, /* [in] */ __RPC__in HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *Split )(__RPC__in __FIMapView_2_HSTRING_HSTRING * This,/* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_HSTRING **firstPartition,
        /* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_HSTRING **secondPartition);
    END_INTERFACE
} __FIMapView_2_HSTRING_HSTRINGVtbl;

interface __FIMapView_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIMapView_2_HSTRING_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMapView_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIMapView_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIMapView_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIMapView_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIMapView_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIMapView_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIMapView_2_HSTRING_HSTRING_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 
#define __FIMapView_2_HSTRING_HSTRING_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 
#define __FIMapView_2_HSTRING_HSTRING_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 
#define __FIMapView_2_HSTRING_HSTRING_Split(This,firstPartition,secondPartition)	\
    ( (This)->lpVtbl -> Split(This,firstPartition,secondPartition) ) 
#endif /* COBJMACROS */


#endif // ____FIMapView_2_HSTRING_HSTRING_INTERFACE_DEFINED__


#if !defined(____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_HSTRING __FIMap_2_HSTRING_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_HSTRING;

typedef struct __FIMap_2_HSTRING_HSTRINGVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMap_2_HSTRING_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMap_2_HSTRING_HSTRING * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,
        /* [in] */ HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt HSTRING **value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [in] */ HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIMap_2_HSTRING_HSTRING * This, /* [retval][out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_HSTRING **view);
    HRESULT ( STDMETHODCALLTYPE *Insert )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,
        /* [in] */ HSTRING key,
        /* [in] */ __RPC__in_opt HSTRING *value,
        /* [retval][out] */ __RPC__out boolean *replaced);
    HRESULT ( STDMETHODCALLTYPE *Remove )(__RPC__in __FIMap_2_HSTRING_HSTRING * This,/* [in] */ HSTRING key);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIMap_2_HSTRING_HSTRING * This);
    END_INTERFACE
} __FIMap_2_HSTRING_HSTRINGVtbl;

interface __FIMap_2_HSTRING_HSTRING
{
    CONST_VTBL struct __FIMap_2_HSTRING_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMap_2_HSTRING_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIMap_2_HSTRING_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIMap_2_HSTRING_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIMap_2_HSTRING_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIMap_2_HSTRING_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIMap_2_HSTRING_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIMap_2_HSTRING_HSTRING_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 

#define __FIMap_2_HSTRING_HSTRING_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIMap_2_HSTRING_HSTRING_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 

#define __FIMap_2_HSTRING_HSTRING_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIMap_2_HSTRING_HSTRING_Insert(This,key,value,replaced)	\
    ( (This)->lpVtbl -> Insert(This,key,value,replaced) ) 

#define __FIMap_2_HSTRING_HSTRING_Remove(This,key)	\
    ( (This)->lpVtbl -> Remove(This,key) ) 

#define __FIMap_2_HSTRING_HSTRING_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 
#endif /* COBJMACROS */



#endif // ____FIMap_2_HSTRING_HSTRING_INTERFACE_DEFINED__


#if !defined(____FIIterator_1_float_INTERFACE_DEFINED__)
#define ____FIIterator_1_float_INTERFACE_DEFINED__

typedef interface __FIIterator_1_float __FIIterator_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_float;

typedef struct __FIIterator_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_float * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_float * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_float * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_float * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_float * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_float * This, /* [retval][out] */ __RPC__out float *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_float * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_float * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_float * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) float *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_floatVtbl;

interface __FIIterator_1_float
{
    CONST_VTBL struct __FIIterator_1_floatVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_float_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_float_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_float_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_float_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_float_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_float_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_float_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_float_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_float_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_float_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_float_INTERFACE_DEFINED__


#if !defined(____FIIterable_1_float_INTERFACE_DEFINED__)
#define ____FIIterable_1_float_INTERFACE_DEFINED__

typedef interface __FIIterable_1_float __FIIterable_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_float;

typedef  struct __FIIterable_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_float * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_float * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_float * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_float * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_float * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_float * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_float * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_float **first);

    END_INTERFACE
} __FIIterable_1_floatVtbl;

interface __FIIterable_1_float
{
    CONST_VTBL struct __FIIterable_1_floatVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_float_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_float_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_float_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_float_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_float_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_float_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_float_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_float_INTERFACE_DEFINED__


#if !defined(____FIVectorView_1_float_INTERFACE_DEFINED__)
#define ____FIVectorView_1_float_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_float __FIVectorView_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_float;

typedef struct __FIVectorView_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_float * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_float * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_float * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_float * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_float * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_float * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_float * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out float *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_float * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_float * This,
            /* [in] */ float item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_float * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) float *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_floatVtbl;

interface __FIVectorView_1_float
{
    CONST_VTBL struct __FIVectorView_1_floatVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_float_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_float_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_float_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_float_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_float_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_float_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_float_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_float_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_float_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_float_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_float_INTERFACE_DEFINED__


#if !defined(____FIVector_1_float_INTERFACE_DEFINED__)
#define ____FIVector_1_float_INTERFACE_DEFINED__

typedef interface __FIVector_1_float __FIVector_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_float;

typedef struct __FIVector_1_floatVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_float * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_float * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_float * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_float * This, /* [out] */ __RPC__deref_out_opt float *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_float * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_float * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt float *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_float * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_float * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_float **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_float * This,
        /* [in] */ __RPC__in float item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_float * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in float item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_float * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in float item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_float * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_float * This, /* [in] */ __RPC__in float item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_float * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_float * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) float *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_float * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) float *value);

    END_INTERFACE
} __FIVector_1_floatVtbl;

interface __FIVector_1_float
{
    CONST_VTBL struct __FIVector_1_floatVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_float_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_float_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_float_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_float_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_float_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_float_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_float_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_float_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_float_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_float_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_float_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_float_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_float_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_float_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_float_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_float_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_float_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_float_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_float_INTERFACE_DEFINED__


#if !defined(____FIIterator_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterator_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterator_1_HSTRING __FIIterator_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_HSTRING;

typedef struct __FIIterator_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_HSTRING * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_HSTRING * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_HSTRING * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_HSTRING * This, /* [retval][out] */ __RPC__out HSTRING *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_HSTRING * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_HSTRING * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_HSTRING * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) HSTRING *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_HSTRINGVtbl;

interface __FIIterator_1_HSTRING
{
    CONST_VTBL struct __FIIterator_1_HSTRINGVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_HSTRING_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_HSTRING_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_HSTRING_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_HSTRING_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_HSTRING_INTERFACE_DEFINED__


#if !defined(____FIIterable_1_HSTRING_INTERFACE_DEFINED__)
#define ____FIIterable_1_HSTRING_INTERFACE_DEFINED__

typedef interface __FIIterable_1_HSTRING __FIIterable_1_HSTRING;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_HSTRING;

typedef  struct __FIIterable_1_HSTRINGVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_HSTRING * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_HSTRING * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_HSTRING * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_HSTRING * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_HSTRING * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_HSTRING * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_HSTRING * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_HSTRING **first);

    END_INTERFACE
} __FIIterable_1_HSTRINGVtbl;

interface __FIIterable_1_HSTRING
{
    CONST_VTBL struct __FIIterable_1_HSTRINGVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_HSTRING_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_HSTRING_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_HSTRING_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_HSTRING_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_HSTRING_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_HSTRING_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_HSTRING_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_HSTRING_INTERFACE_DEFINED__


#if !defined(____FIReference_1_float_INTERFACE_DEFINED__)
#define ____FIReference_1_float_INTERFACE_DEFINED__

typedef interface __FIReference_1_float __FIReference_1_float;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_float;

typedef struct __FIReference_1_floatVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_float * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_float * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_float * This );

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_float * This, 
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_float * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_float * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_float * This, /* [retval][out] */ __RPC__out float *value);
    END_INTERFACE
} __FIReference_1_floatVtbl;

interface __FIReference_1_float
{
    CONST_VTBL struct __FIReference_1_floatVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIReference_1_float_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIReference_1_float_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIReference_1_float_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIReference_1_float_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIReference_1_float_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIReference_1_float_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIReference_1_float_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIReference_1_float_INTERFACE_DEFINED__


struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2;

#if !defined(____FIReference_1_Windows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CNumerics__CVector2 __FIReference_1_Windows__CFoundation__CNumerics__CVector2;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CNumerics__CVector2;

typedef struct __FIReference_1_Windows__CFoundation__CNumerics__CVector2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector2 * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector2 * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector2 * This );

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector2 * This, 
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector2 * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector2 * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector2 * This, /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CFoundation_CNumerics_CVector2 *value);
    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CNumerics__CVector2Vtbl;

interface __FIReference_1_Windows__CFoundation__CNumerics__CVector2
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CNumerics__CVector2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector2_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIReference_1_Windows__CFoundation__CNumerics__CVector2_INTERFACE_DEFINED__


struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3;

#if !defined(____FIReference_1_Windows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CNumerics__CVector3 __FIReference_1_Windows__CFoundation__CNumerics__CVector3;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CNumerics__CVector3;

typedef struct __FIReference_1_Windows__CFoundation__CNumerics__CVector3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector3 * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector3 * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector3 * This );

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector3 * This, 
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector3 * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector3 * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CFoundation__CNumerics__CVector3 * This, /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CFoundation_CNumerics_CVector3 *value);
    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CNumerics__CVector3Vtbl;

interface __FIReference_1_Windows__CFoundation__CNumerics__CVector3
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CNumerics__CVector3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIReference_1_Windows__CFoundation__CNumerics__CVector3_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIReference_1_Windows__CFoundation__CNumerics__CVector3_INTERFACE_DEFINED__





typedef enum __x_Microsoft_CUI_CComposition_CAnimationControllerProgressBehavior __x_Microsoft_CUI_CComposition_CAnimationControllerProgressBehavior;


typedef enum __x_Microsoft_CUI_CComposition_CAnimationDelayBehavior __x_Microsoft_CUI_CComposition_CAnimationDelayBehavior;


typedef enum __x_Microsoft_CUI_CComposition_CAnimationDirection __x_Microsoft_CUI_CComposition_CAnimationDirection;


typedef enum __x_Microsoft_CUI_CComposition_CAnimationIterationBehavior __x_Microsoft_CUI_CComposition_CAnimationIterationBehavior;


typedef enum __x_Microsoft_CUI_CComposition_CAnimationPropertyAccessMode __x_Microsoft_CUI_CComposition_CAnimationPropertyAccessMode;


typedef enum __x_Microsoft_CUI_CComposition_CAnimationStopBehavior __x_Microsoft_CUI_CComposition_CAnimationStopBehavior;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionBackfaceVisibility __x_Microsoft_CUI_CComposition_CCompositionBackfaceVisibility;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionBatchTypes __x_Microsoft_CUI_CComposition_CCompositionBatchTypes;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionBitmapInterpolationMode __x_Microsoft_CUI_CComposition_CCompositionBitmapInterpolationMode;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionBorderMode __x_Microsoft_CUI_CComposition_CCompositionBorderMode;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionColorSpace __x_Microsoft_CUI_CComposition_CCompositionColorSpace;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionCompositeMode __x_Microsoft_CUI_CComposition_CCompositionCompositeMode;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionDropShadowSourcePolicy __x_Microsoft_CUI_CComposition_CCompositionDropShadowSourcePolicy;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionEffectFactoryLoadStatus __x_Microsoft_CUI_CComposition_CCompositionEffectFactoryLoadStatus;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionGetValueStatus __x_Microsoft_CUI_CComposition_CCompositionGetValueStatus;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionGradientExtendMode __x_Microsoft_CUI_CComposition_CCompositionGradientExtendMode;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionIslandVisibilityHints __x_Microsoft_CUI_CComposition_CCompositionIslandVisibilityHints;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionMappingMode __x_Microsoft_CUI_CComposition_CCompositionMappingMode;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionProjectedShadowDrawOrder __x_Microsoft_CUI_CComposition_CCompositionProjectedShadowDrawOrder;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionStretch __x_Microsoft_CUI_CComposition_CCompositionStretch;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionStrokeCap __x_Microsoft_CUI_CComposition_CCompositionStrokeCap;


typedef enum __x_Microsoft_CUI_CComposition_CCompositionStrokeLineJoin __x_Microsoft_CUI_CComposition_CCompositionStrokeLineJoin;












































































































































































































































































































/*
 *
 * Struct Microsoft.UI.Composition.AnimationControllerProgressBehavior
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CAnimationControllerProgressBehavior
{
    Microsoft_UI_Composition_AnimationControllerProgressBehavior_Default = 0,
    Microsoft_UI_Composition_AnimationControllerProgressBehavior_IncludesDelayTime = 1,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationDelayBehavior
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CAnimationDelayBehavior
{
    Microsoft_UI_Composition_AnimationDelayBehavior_SetInitialValueAfterDelay = 0,
    Microsoft_UI_Composition_AnimationDelayBehavior_SetInitialValueBeforeDelay = 1,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationDirection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CAnimationDirection
{
    Microsoft_UI_Composition_AnimationDirection_Normal = 0,
    Microsoft_UI_Composition_AnimationDirection_Reverse = 1,
    Microsoft_UI_Composition_AnimationDirection_Alternate = 2,
    Microsoft_UI_Composition_AnimationDirection_AlternateReverse = 3,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationIterationBehavior
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CAnimationIterationBehavior
{
    Microsoft_UI_Composition_AnimationIterationBehavior_Count = 0,
    Microsoft_UI_Composition_AnimationIterationBehavior_Forever = 1,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationPropertyAccessMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CAnimationPropertyAccessMode
{
    Microsoft_UI_Composition_AnimationPropertyAccessMode_None = 0,
    Microsoft_UI_Composition_AnimationPropertyAccessMode_ReadOnly = 1,
    Microsoft_UI_Composition_AnimationPropertyAccessMode_WriteOnly = 2,
    Microsoft_UI_Composition_AnimationPropertyAccessMode_ReadWrite = 3,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.AnimationStopBehavior
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CAnimationStopBehavior
{
    Microsoft_UI_Composition_AnimationStopBehavior_LeaveCurrentValue = 0,
    Microsoft_UI_Composition_AnimationStopBehavior_SetToInitialValue = 1,
    Microsoft_UI_Composition_AnimationStopBehavior_SetToFinalValue = 2,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionBackfaceVisibility
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionBackfaceVisibility
{
    Microsoft_UI_Composition_CompositionBackfaceVisibility_Inherit = 0,
    Microsoft_UI_Composition_CompositionBackfaceVisibility_Visible = 1,
    Microsoft_UI_Composition_CompositionBackfaceVisibility_Hidden = 2,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionBatchTypes
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, flags, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionBatchTypes
{
    Microsoft_UI_Composition_CompositionBatchTypes_None = 0,
    Microsoft_UI_Composition_CompositionBatchTypes_Animation = 0x1,
    Microsoft_UI_Composition_CompositionBatchTypes_Effect = 0x2,
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBatchTypes_InfiniteAnimation = 0x4,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBatchTypes_AllAnimations = 0x5,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionBitmapInterpolationMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionBitmapInterpolationMode
{
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_NearestNeighbor = 0,
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_Linear = 1,
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_MagLinearMinLinearMipLinear = 2,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_MagLinearMinLinearMipNearest = 3,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_MagLinearMinNearestMipLinear = 4,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_MagLinearMinNearestMipNearest = 5,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_MagNearestMinLinearMipLinear = 6,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_MagNearestMinLinearMipNearest = 7,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_MagNearestMinNearestMipLinear = 8,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionBitmapInterpolationMode_MagNearestMinNearestMipNearest = 9,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionBorderMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionBorderMode
{
    Microsoft_UI_Composition_CompositionBorderMode_Inherit = 0,
    Microsoft_UI_Composition_CompositionBorderMode_Soft = 1,
    Microsoft_UI_Composition_CompositionBorderMode_Hard = 2,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionColorSpace
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionColorSpace
{
    Microsoft_UI_Composition_CompositionColorSpace_Auto = 0,
    Microsoft_UI_Composition_CompositionColorSpace_Hsl = 1,
    Microsoft_UI_Composition_CompositionColorSpace_Rgb = 2,
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionColorSpace_HslLinear = 3,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionColorSpace_RgbLinear = 4,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionCompositeMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionCompositeMode
{
    Microsoft_UI_Composition_CompositionCompositeMode_Inherit = 0,
    Microsoft_UI_Composition_CompositionCompositeMode_SourceOver = 1,
    Microsoft_UI_Composition_CompositionCompositeMode_DestinationInvert = 2,
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
    Microsoft_UI_Composition_CompositionCompositeMode_MinBlend = 3,
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
    
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionDropShadowSourcePolicy
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionDropShadowSourcePolicy
{
    Microsoft_UI_Composition_CompositionDropShadowSourcePolicy_Default = 0,
    Microsoft_UI_Composition_CompositionDropShadowSourcePolicy_InheritFromVisualContent = 1,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionEffectFactoryLoadStatus
{
    Microsoft_UI_Composition_CompositionEffectFactoryLoadStatus_Success = 0,
    Microsoft_UI_Composition_CompositionEffectFactoryLoadStatus_EffectTooComplex = 1,
    Microsoft_UI_Composition_CompositionEffectFactoryLoadStatus_Pending = 2,
    Microsoft_UI_Composition_CompositionEffectFactoryLoadStatus_Other = -1,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionGetValueStatus
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionGetValueStatus
{
    Microsoft_UI_Composition_CompositionGetValueStatus_Succeeded = 0,
    Microsoft_UI_Composition_CompositionGetValueStatus_TypeMismatch = 1,
    Microsoft_UI_Composition_CompositionGetValueStatus_NotFound = 2,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionGradientExtendMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionGradientExtendMode
{
    Microsoft_UI_Composition_CompositionGradientExtendMode_Clamp = 0,
    Microsoft_UI_Composition_CompositionGradientExtendMode_Wrap = 1,
    Microsoft_UI_Composition_CompositionGradientExtendMode_Mirror = 2,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionIslandVisibilityHints
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionIslandVisibilityHints
{
    Microsoft_UI_Composition_CompositionIslandVisibilityHints_Visible = 0,
    Microsoft_UI_Composition_CompositionIslandVisibilityHints_CompletelyOcculuded = 1,
    Microsoft_UI_Composition_CompositionIslandVisibilityHints_FullyTransparent = 2,
    Microsoft_UI_Composition_CompositionIslandVisibilityHints_NotTreeVisible = 4,
    Microsoft_UI_Composition_CompositionIslandVisibilityHints_NotConnectedToRoot = 8,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionMappingMode
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionMappingMode
{
    Microsoft_UI_Composition_CompositionMappingMode_Absolute = 0,
    Microsoft_UI_Composition_CompositionMappingMode_Relative = 1,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionProjectedShadowDrawOrder
{
    Microsoft_UI_Composition_CompositionProjectedShadowDrawOrder_PostChildren = 0,
    Microsoft_UI_Composition_CompositionProjectedShadowDrawOrder_PreChildren = 1,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionStretch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionStretch
{
    Microsoft_UI_Composition_CompositionStretch_None = 0,
    Microsoft_UI_Composition_CompositionStretch_Fill = 1,
    Microsoft_UI_Composition_CompositionStretch_Uniform = 2,
    Microsoft_UI_Composition_CompositionStretch_UniformToFill = 3,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionStrokeCap
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionStrokeCap
{
    Microsoft_UI_Composition_CompositionStrokeCap_Flat = 0,
    Microsoft_UI_Composition_CompositionStrokeCap_Square = 1,
    Microsoft_UI_Composition_CompositionStrokeCap_Round = 2,
    Microsoft_UI_Composition_CompositionStrokeCap_Triangle = 3,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Composition.CompositionStrokeLineJoin
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */

#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
/* [v1_enum, experimental, contract] */
enum __x_Microsoft_CUI_CComposition_CCompositionStrokeLineJoin
{
    Microsoft_UI_Composition_CompositionStrokeLineJoin_Miter = 0,
    Microsoft_UI_Composition_CompositionStrokeLineJoin_Bevel = 1,
    Microsoft_UI_Composition_CompositionStrokeLineJoin_Round = 2,
    Microsoft_UI_Composition_CompositionStrokeLineJoin_MiterOrBevel = 3,
};
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Composition.CompositionNotificationDeferralCompletedHandler
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_INTERFACE_DEFINED__
/* [object, uuid("8CC7DBBB-3876-5F86-899B-184009EFFDD9"), contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler * This,
        /* [in] */UINT32 connection
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandlerVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_Invoke(This,connection) \
    ( (This)->lpVtbl->Invoke(This,connection) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralCompletedHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAmbientLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AmbientLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAmbientLight[] = L"Microsoft.UI.Composition.IAmbientLight";
/* [object, uuid("4540525E-B70D-5A14-BBFA-63BEF42313C7"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIAmbientLightVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Color )(
        __x_Microsoft_CUI_CComposition_CIAmbientLight * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Color )(
        __x_Microsoft_CUI_CComposition_CIAmbientLight * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIAmbientLightVtbl;

interface __x_Microsoft_CUI_CComposition_CIAmbientLight
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIAmbientLightVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIAmbientLight_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight_get_Color(This,value) \
    ( (This)->lpVtbl->get_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight_put_Color(This,value) \
    ( (This)->lpVtbl->put_Color(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAmbientLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAmbientLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAmbientLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AmbientLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAmbientLight2[] = L"Microsoft.UI.Composition.IAmbientLight2";
/* [object, uuid("3356F963-040C-54D4-9DFC-B61C51AAADD1"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIAmbientLight2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAmbientLight2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Intensity )(
        __x_Microsoft_CUI_CComposition_CIAmbientLight2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Intensity )(
        __x_Microsoft_CUI_CComposition_CIAmbientLight2 * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIAmbientLight2Vtbl;

interface __x_Microsoft_CUI_CComposition_CIAmbientLight2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIAmbientLight2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIAmbientLight2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight2_get_Intensity(This,value) \
    ( (This)->lpVtbl->get_Intensity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAmbientLight2_put_Intensity(This,value) \
    ( (This)->lpVtbl->put_Intensity(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAmbientLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAmbientLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAnimationController
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AnimationController
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAnimationController[] = L"Microsoft.UI.Composition.IAnimationController";
/* [object, uuid("BD0F88A8-A415-5322-8C3D-1A6D9192754F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIAnimationControllerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationController * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationController * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationController * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationController * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationController * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationController * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PlaybackRate )(
        __x_Microsoft_CUI_CComposition_CIAnimationController * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_PlaybackRate )(
        __x_Microsoft_CUI_CComposition_CIAnimationController * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Progress )(
        __x_Microsoft_CUI_CComposition_CIAnimationController * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Progress )(
        __x_Microsoft_CUI_CComposition_CIAnimationController * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ProgressBehavior )(
        __x_Microsoft_CUI_CComposition_CIAnimationController * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CAnimationControllerProgressBehavior * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ProgressBehavior )(
        __x_Microsoft_CUI_CComposition_CIAnimationController * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CAnimationControllerProgressBehavior value
        );
    HRESULT ( STDMETHODCALLTYPE *Pause )(
        __x_Microsoft_CUI_CComposition_CIAnimationController * This
        );
    HRESULT ( STDMETHODCALLTYPE *Resume )(
        __x_Microsoft_CUI_CComposition_CIAnimationController * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIAnimationControllerVtbl;

interface __x_Microsoft_CUI_CComposition_CIAnimationController
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIAnimationControllerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIAnimationController_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_get_PlaybackRate(This,value) \
    ( (This)->lpVtbl->get_PlaybackRate(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_put_PlaybackRate(This,value) \
    ( (This)->lpVtbl->put_PlaybackRate(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_get_Progress(This,value) \
    ( (This)->lpVtbl->get_Progress(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_put_Progress(This,value) \
    ( (This)->lpVtbl->put_Progress(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_get_ProgressBehavior(This,value) \
    ( (This)->lpVtbl->get_ProgressBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_put_ProgressBehavior(This,value) \
    ( (This)->lpVtbl->put_ProgressBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_Pause(This) \
    ( (This)->lpVtbl->Pause(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationController_Resume(This) \
    ( (This)->lpVtbl->Resume(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAnimationController;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAnimationController_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAnimationControllerStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AnimationController
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAnimationControllerStatics[] = L"Microsoft.UI.Composition.IAnimationControllerStatics";
/* [object, uuid("B63B0FB6-286B-57AF-B096-16066D43DC00"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIAnimationControllerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxPlaybackRate )(
        __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinPlaybackRate )(
        __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics * This,
        /* [retval, out] */FLOAT * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIAnimationControllerStaticsVtbl;

interface __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIAnimationControllerStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_get_MaxPlaybackRate(This,value) \
    ( (This)->lpVtbl->get_MaxPlaybackRate(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_get_MinPlaybackRate(This,value) \
    ( (This)->lpVtbl->get_MinPlaybackRate(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAnimationControllerStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAnimationControllerStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAnimationObject
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAnimationObject[] = L"Microsoft.UI.Composition.IAnimationObject";
/* [object, uuid("8F56119D-B96D-58D0-9916-D1C5E390F890"), experimental, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIAnimationObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationObject * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationObject * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationObject * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationObject * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationObject * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationObject * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *PopulatePropertyInfo )(
        __x_Microsoft_CUI_CComposition_CIAnimationObject * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * propertyInfo
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIAnimationObjectVtbl;

interface __x_Microsoft_CUI_CComposition_CIAnimationObject
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIAnimationObjectVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIAnimationObject_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIAnimationObject_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationObject_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationObject_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIAnimationObject_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIAnimationObject_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIAnimationObject_PopulatePropertyInfo(This,propertyName,propertyInfo) \
    ( (This)->lpVtbl->PopulatePropertyInfo(This,propertyName,propertyInfo) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAnimationObject;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAnimationObject_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IAnimationPropertyInfo
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.AnimationPropertyInfo
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IAnimationPropertyInfo[] = L"Microsoft.UI.Composition.IAnimationPropertyInfo";
/* [object, uuid("3D721A2B-9CCD-57BD-B6C2-CE9E04AE3606"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfoVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AccessMode )(
        __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CAnimationPropertyAccessMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AccessMode )(
        __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CAnimationPropertyAccessMode value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfoVtbl;

interface __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfoVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_get_AccessMode(This,value) \
    ( (This)->lpVtbl->get_AccessMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_put_AccessMode(This,value) \
    ( (This)->lpVtbl->put_AccessMode(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IBooleanKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.BooleanKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IBooleanKeyFrameAnimation[] = L"Microsoft.UI.Composition.IBooleanKeyFrameAnimation";
/* [object, uuid("7FE485E9-E874-5FF3-8DDC-826C3818BFC3"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_InsertKeyFrame(This,normalizedProgressKey,value) \
    ( (This)->lpVtbl->InsertKeyFrame(This,normalizedProgressKey,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IBounceScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation";
/* [object, uuid("1C0C4B76-C4D6-5DD9-8DD6-DBE35C7B7E55"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Acceleration )(
        __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Acceleration )(
        __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Restitution )(
        __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Restitution )(
        __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_get_Acceleration(This,value) \
    ( (This)->lpVtbl->get_Acceleration(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_put_Acceleration(This,value) \
    ( (This)->lpVtbl->put_Acceleration(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_get_Restitution(This,value) \
    ( (This)->lpVtbl->get_Restitution(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_put_Restitution(This,value) \
    ( (This)->lpVtbl->put_Restitution(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IBounceVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation";
/* [object, uuid("EC528D1F-22E2-573E-AB87-757071E50012"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Acceleration )(
        __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Acceleration )(
        __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Restitution )(
        __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Restitution )(
        __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_get_Acceleration(This,value) \
    ( (This)->lpVtbl->get_Acceleration(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_put_Acceleration(This,value) \
    ( (This)->lpVtbl->put_Acceleration(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_get_Restitution(This,value) \
    ( (This)->lpVtbl->get_Restitution(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_put_Restitution(This,value) \
    ( (This)->lpVtbl->put_Restitution(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IBounceVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation";
/* [object, uuid("E3E2EE98-1211-586D-8A6D-FEA5EFC3957F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Acceleration )(
        __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Acceleration )(
        __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Restitution )(
        __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Restitution )(
        __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_get_Acceleration(This,value) \
    ( (This)->lpVtbl->get_Acceleration(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_put_Acceleration(This,value) \
    ( (This)->lpVtbl->put_Acceleration(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_get_Restitution(This,value) \
    ( (This)->lpVtbl->get_Restitution(This,value) )

#define __x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_put_Restitution(This,value) \
    ( (This)->lpVtbl->put_Restitution(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IColorKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ColorKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IColorKeyFrameAnimation[] = L"Microsoft.UI.Composition.IColorKeyFrameAnimation";
/* [object, uuid("F0237928-353C-5867-BE93-71547E989F44"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InterpolationColorSpace )(
        __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionColorSpace * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InterpolationColorSpace )(
        __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionColorSpace value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrameWithEasingFunction )(
        __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CUI_CColor value,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEasingFunction * easingFunction
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_get_InterpolationColorSpace(This,value) \
    ( (This)->lpVtbl->get_InterpolationColorSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_put_InterpolationColorSpace(This,value) \
    ( (This)->lpVtbl->put_InterpolationColorSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_InsertKeyFrame(This,normalizedProgressKey,value) \
    ( (This)->lpVtbl->InsertKeyFrame(This,normalizedProgressKey,value) )

#define __x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) \
    ( (This)->lpVtbl->InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnchor
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnchor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnchor_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnchor_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnchor[] = L"Microsoft.UI.Composition.ICompositionAnchor";
/* [object, uuid("DED3F36B-2897-561E-87E5-081F5867F623"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionAnchorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnchor * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnchor * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnchor * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnchor * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnchor * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnchor * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionAnchorVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionAnchor
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionAnchorVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionAnchor_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnchor_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnchor_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnchor_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnchor_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnchor_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnchor;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnchor_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimation[] = L"Microsoft.UI.Composition.ICompositionAnimation";
/* [object, uuid("A829CCC8-6FDE-5B90-AD37-EFD307E1B631"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *ClearAllParameters )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This
        );
    HRESULT ( STDMETHODCALLTYPE *ClearParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key
        );
    HRESULT ( STDMETHODCALLTYPE *SetColorParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    HRESULT ( STDMETHODCALLTYPE *SetMatrix3x2Parameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value
        );
    HRESULT ( STDMETHODCALLTYPE *SetMatrix4x4Parameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value
        );
    HRESULT ( STDMETHODCALLTYPE *SetQuaternionParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value
        );
    HRESULT ( STDMETHODCALLTYPE *SetReferenceParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionObject * compositionObject
        );
    HRESULT ( STDMETHODCALLTYPE *SetScalarParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */FLOAT value
        );
    HRESULT ( STDMETHODCALLTYPE *SetVector2Parameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    HRESULT ( STDMETHODCALLTYPE *SetVector3Parameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    HRESULT ( STDMETHODCALLTYPE *SetVector4Parameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation * This,
        /* [in] */HSTRING key,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector4 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_ClearAllParameters(This) \
    ( (This)->lpVtbl->ClearAllParameters(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_ClearParameter(This,key) \
    ( (This)->lpVtbl->ClearParameter(This,key) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetColorParameter(This,key,value) \
    ( (This)->lpVtbl->SetColorParameter(This,key,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetMatrix3x2Parameter(This,key,value) \
    ( (This)->lpVtbl->SetMatrix3x2Parameter(This,key,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetMatrix4x4Parameter(This,key,value) \
    ( (This)->lpVtbl->SetMatrix4x4Parameter(This,key,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetQuaternionParameter(This,key,value) \
    ( (This)->lpVtbl->SetQuaternionParameter(This,key,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetReferenceParameter(This,key,compositionObject) \
    ( (This)->lpVtbl->SetReferenceParameter(This,key,compositionObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetScalarParameter(This,key,value) \
    ( (This)->lpVtbl->SetScalarParameter(This,key,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetVector2Parameter(This,key,value) \
    ( (This)->lpVtbl->SetVector2Parameter(This,key,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetVector3Parameter(This,key,value) \
    ( (This)->lpVtbl->SetVector3Parameter(This,key,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation_SetVector4Parameter(This,key,value) \
    ( (This)->lpVtbl->SetVector4Parameter(This,key,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimation2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimation2[] = L"Microsoft.UI.Composition.ICompositionAnimation2";
/* [object, uuid("0926EB58-8965-5C74-BDAC-852EBB5E8542"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionAnimation2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SetBooleanParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This,
        /* [in] */HSTRING key,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Target )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Target )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation2 * This,
        /* [in] */HSTRING value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionAnimation2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionAnimation2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionAnimation2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_SetBooleanParameter(This,key,value) \
    ( (This)->lpVtbl->SetBooleanParameter(This,key,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_get_Target(This,value) \
    ( (This)->lpVtbl->get_Target(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation2_put_Target(This,value) \
    ( (This)->lpVtbl->put_Target(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimation2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimation3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimation3[] = L"Microsoft.UI.Composition.ICompositionAnimation3";
/* [object, uuid("60063F53-4167-5914-A2F1-9EFCC2F86C76"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionAnimation3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InitialValueExpressions )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation3 * This,
        /* [retval, out] */__FIMap_2_HSTRING_HSTRING * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionAnimation3Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionAnimation3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionAnimation3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionAnimation3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation3_get_InitialValueExpressions(This,value) \
    ( (This)->lpVtbl->get_InitialValueExpressions(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimation3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimation4
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimation4[] = L"Microsoft.UI.Composition.ICompositionAnimation4";
/* [object, uuid("C4101447-DFE4-597F-B5BC-96443F5D18A1"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionAnimation4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation4 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation4 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation4 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation4 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation4 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimation4 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SetExpressionReferenceParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimation4 * This,
        /* [in] */HSTRING parameterName,
        /* [in] */__x_Microsoft_CUI_CComposition_CIAnimationObject * source
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionAnimation4Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionAnimation4
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionAnimation4Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionAnimation4_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation4_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation4_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation4_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation4_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation4_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimation4_SetExpressionReferenceParameter(This,parameterName,source) \
    ( (This)->lpVtbl->SetExpressionReferenceParameter(This,parameterName,source) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimation4;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimation4_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimationBase
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimationBase[] = L"Microsoft.UI.Composition.ICompositionAnimationBase";
/* [object, uuid("A77C0E5A-F059-4E85-BCEF-C068694CEC78"), experimental, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionAnimationBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationBase * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionAnimationBaseVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionAnimationBase
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionAnimationBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionAnimationBase_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationBase_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationBase_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationBase_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationBase_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationBase_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimationBase;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimationFactory[] = L"Microsoft.UI.Composition.ICompositionAnimationFactory";
/* [object, uuid("2ED278CA-4CCA-5F7F-8D47-F930552A7769"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionAnimationFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionAnimationFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionAnimationFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionAnimationGroup
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionAnimationGroup
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionAnimationGroup[] = L"Microsoft.UI.Composition.ICompositionAnimationGroup";
/* [object, uuid("A51CDCAC-B972-5AE7-81D0-9D91C71ECB7A"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionAnimationGroupVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Count )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This,
        /* [retval, out] */INT32 * value
        );
    HRESULT ( STDMETHODCALLTYPE *Add )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimation * value
        );
    HRESULT ( STDMETHODCALLTYPE *Remove )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimation * value
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveAll )(
        __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionAnimationGroupVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionAnimationGroupVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_get_Count(This,value) \
    ( (This)->lpVtbl->get_Count(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_Add(This,value) \
    ( (This)->lpVtbl->Add(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_Remove(This,value) \
    ( (This)->lpVtbl->Remove(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_RemoveAll(This) \
    ( (This)->lpVtbl->RemoveAll(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionAnimationGroup;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionAnimationGroup_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionBackdropBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionBackdropBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionBackdropBrush[] = L"Microsoft.UI.Composition.ICompositionBackdropBrush";
/* [object, uuid("6C866BB3-172A-570C-82AC-BF9848D99A59"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionBackdropBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionBackdropBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionBackdropBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionBackdropBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionBackdropBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionBatchCompletedEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionBatchCompletedEventArgs[] = L"Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs";
/* [object, uuid("AC400334-4358-5FB0-BFC3-117FE581998F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionBatchCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionBrush[] = L"Microsoft.UI.Composition.ICompositionBrush";
/* [object, uuid("483924E7-99A5-5377-968B-DEC6D40BBCCD"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionBrushFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionBrushFactory[] = L"Microsoft.UI.Composition.ICompositionBrushFactory";
/* [object, uuid("ABF2B354-7130-53D9-8324-365D7E02EDE7"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionBrushFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrushFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrushFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrushFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrushFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrushFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionBrushFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionBrushFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionBrushFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionBrushFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionBrushFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrushFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrushFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrushFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrushFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionBrushFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionBrushFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionBrushFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionCapabilities
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionCapabilities
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionCapabilities[] = L"Microsoft.UI.Composition.ICompositionCapabilities";
/* [object, uuid("7689BF12-75C0-52EA-81CB-463ED1C16C45"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *AreEffectsSupported )(
        __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *AreEffectsFast )(
        __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This,
        /* [retval, out] */boolean * result
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Changed )(
        __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionCapabilities_IInspectable * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Changed )(
        __x_Microsoft_CUI_CComposition_CICompositionCapabilities * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionCapabilities
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_AreEffectsSupported(This,result) \
    ( (This)->lpVtbl->AreEffectsSupported(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_AreEffectsFast(This,result) \
    ( (This)->lpVtbl->AreEffectsFast(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_add_Changed(This,handler,token) \
    ( (This)->lpVtbl->add_Changed(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilities_remove_Changed(This,token) \
    ( (This)->lpVtbl->remove_Changed(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionCapabilities;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionCapabilities_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionCapabilitiesStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionCapabilities
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionCapabilitiesStatics[] = L"Microsoft.UI.Composition.ICompositionCapabilitiesStatics";
/* [object, uuid("6AB5C5B7-F23D-5B7A-B44D-D87A54AF8FE4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetForCurrentView )(
        __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionCapabilities * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_GetForCurrentView(This,result) \
    ( (This)->lpVtbl->GetForCurrentView(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionCapabilitiesStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionClip[] = L"Microsoft.UI.Composition.ICompositionClip";
/* [object, uuid("B66B55CB-B5A5-5BEE-8972-AE78233CB34C"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionClipVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionClipVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionClip
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionClipVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionClip_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionClip;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionClip_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionClip2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionClip2[] = L"Microsoft.UI.Composition.ICompositionClip2";
/* [object, uuid("CDF6BF80-AFD7-57DC-8148-6CCBBB5D78BB"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionClip2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AnchorPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AnchorPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Scale )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Scale )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CICompositionClip2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionClip2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionClip2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionClip2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionClip2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_get_AnchorPoint(This,value) \
    ( (This)->lpVtbl->get_AnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_put_AnchorPoint(This,value) \
    ( (This)->lpVtbl->put_AnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_get_CenterPoint(This,value) \
    ( (This)->lpVtbl->get_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_put_CenterPoint(This,value) \
    ( (This)->lpVtbl->put_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_get_RotationAngle(This,value) \
    ( (This)->lpVtbl->get_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_put_RotationAngle(This,value) \
    ( (This)->lpVtbl->put_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_get_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->get_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_put_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->put_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_get_Scale(This,value) \
    ( (This)->lpVtbl->get_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_put_Scale(This,value) \
    ( (This)->lpVtbl->put_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_get_TransformMatrix(This,value) \
    ( (This)->lpVtbl->get_TransformMatrix(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionClip2_put_TransformMatrix(This,value) \
    ( (This)->lpVtbl->put_TransformMatrix(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionClip2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionClip2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionClipFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionClipFactory[] = L"Microsoft.UI.Composition.ICompositionClipFactory";
/* [object, uuid("611DEC65-D302-52BC-92AB-A295BD141AE4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionClipFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClipFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClipFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClipFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClipFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClipFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionClipFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionClipFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionClipFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionClipFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionClipFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionClipFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionClipFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionClipFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionClipFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionClipFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionClipFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionClipFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionColorBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionColorBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionColorBrush[] = L"Microsoft.UI.Composition.ICompositionColorBrush";
/* [object, uuid("3F8FFB69-3E71-55A7-8E79-F27A214C56AE"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionColorBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Color )(
        __x_Microsoft_CUI_CComposition_CICompositionColorBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Color )(
        __x_Microsoft_CUI_CComposition_CICompositionColorBrush * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionColorBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionColorBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionColorBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush_get_Color(This,value) \
    ( (This)->lpVtbl->get_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorBrush_put_Color(This,value) \
    ( (This)->lpVtbl->put_Color(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionColorBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionColorBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionColorGradientStop
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionColorGradientStop
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionColorGradientStop[] = L"Microsoft.UI.Composition.ICompositionColorGradientStop";
/* [object, uuid("868030D8-C5C0-5DD8-A765-E32CD3497AA9"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Color )(
        __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Color )(
        __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_get_Color(This,value) \
    ( (This)->lpVtbl->get_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_put_Color(This,value) \
    ( (This)->lpVtbl->put_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionColorGradientStop;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionColorGradientStop_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionColorGradientStopCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionColorGradientStopCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionColorGradientStopCollection[] = L"Microsoft.UI.Composition.ICompositionColorGradientStopCollection";
/* [object, uuid("4794CB29-CE9D-5837-9FC9-847DF3E197DE"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollectionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionCommitBatch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionCommitBatch
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionCommitBatch[] = L"Microsoft.UI.Composition.ICompositionCommitBatch";
/* [object, uuid("C4550FA8-A7F2-5259-BF74-33B2F5240A28"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionCommitBatchVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsActive )(
        __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This,
        /* [retval, out] */boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsEnded )(
        __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This,
        /* [retval, out] */boolean * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Completed )(
        __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This,
        /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Completed )(
        __x_Microsoft_CUI_CComposition_CICompositionCommitBatch * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionCommitBatchVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionCommitBatch
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionCommitBatchVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_get_IsActive(This,value) \
    ( (This)->lpVtbl->get_IsActive(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_get_IsEnded(This,value) \
    ( (This)->lpVtbl->get_IsEnded(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_add_Completed(This,handler,token) \
    ( (This)->lpVtbl->add_Completed(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionCommitBatch_remove_Completed(This,token) \
    ( (This)->lpVtbl->remove_Completed(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionCommitBatch;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionCommitBatch_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionContainerShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionContainerShape
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionContainerShape[] = L"Microsoft.UI.Composition.ICompositionContainerShape";
/* [object, uuid("064AABD5-2DAB-52D3-824B-C72456540F29"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionContainerShapeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionContainerShape * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionContainerShape * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionContainerShape * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionContainerShape * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionContainerShape * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionContainerShape * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Shapes )(
        __x_Microsoft_CUI_CComposition_CICompositionContainerShape * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionContainerShapeVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionContainerShape
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionContainerShapeVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionContainerShape_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionContainerShape_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionContainerShape_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionContainerShape_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionContainerShape_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionContainerShape_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionContainerShape_get_Shapes(This,value) \
    ( (This)->lpVtbl->get_Shapes(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionContainerShape;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionContainerShape_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionDrawingSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionDrawingSurface[] = L"Microsoft.UI.Composition.ICompositionDrawingSurface";
/* [object, uuid("BF6D23B5-0117-58DE-BF21-AD672B2B6128"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AlphaMode )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This,
        /* [retval, out] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PixelFormat )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This,
        /* [retval, out] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_get_AlphaMode(This,value) \
    ( (This)->lpVtbl->get_AlphaMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_get_PixelFormat(This,value) \
    ( (This)->lpVtbl->get_PixelFormat(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_get_Size(This,value) \
    ( (This)->lpVtbl->get_Size(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionDrawingSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionDrawingSurface2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionDrawingSurface2[] = L"Microsoft.UI.Composition.ICompositionDrawingSurface2";
/* [object, uuid("6BE6F652-BEC8-5ADF-A6AF-5ACFC00A968E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SizeInt32 )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
        /* [retval, out] */__x_ABI_CWindows_CGraphics_CSizeInt32 * value
        );
    HRESULT ( STDMETHODCALLTYPE *Resize )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *Scroll )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CPointInt32 offset
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *ScrollRect )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CPointInt32 offset,
        /* [in] */__x_ABI_CWindows_CGraphics_CRectInt32 scrollRect
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *ScrollWithClip )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CPointInt32 offset,
        /* [in] */__x_ABI_CWindows_CGraphics_CRectInt32 clipRect
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *ScrollRectWithClip )(
        __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2 * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CPointInt32 offset,
        /* [in] */__x_ABI_CWindows_CGraphics_CRectInt32 clipRect,
        /* [in] */__x_ABI_CWindows_CGraphics_CRectInt32 scrollRect
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_get_SizeInt32(This,value) \
    ( (This)->lpVtbl->get_SizeInt32(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_Resize(This,sizePixels) \
    ( (This)->lpVtbl->Resize(This,sizePixels) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_Scroll(This,offset) \
    ( (This)->lpVtbl->Scroll(This,offset) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_ScrollRect(This,offset,scrollRect) \
    ( (This)->lpVtbl->ScrollRect(This,offset,scrollRect) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_ScrollWithClip(This,offset,clipRect) \
    ( (This)->lpVtbl->ScrollWithClip(This,offset,clipRect) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_ScrollRectWithClip(This,offset,clipRect,scrollRect) \
    ( (This)->lpVtbl->ScrollRectWithClip(This,offset,clipRect,scrollRect) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurface2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionDrawingSurfaceFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionDrawingSurfaceFactory[] = L"Microsoft.UI.Composition.ICompositionDrawingSurfaceFactory";
/* [object, uuid("4791E19A-C83B-58B0-AC86-DFC58494F5F9"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionDrawingSurfaceFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEasingFunction[] = L"Microsoft.UI.Composition.ICompositionEasingFunction";
/* [object, uuid("8E1ECD0D-57D8-5BC9-9BCD-E43D0DD733C4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunction * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunction * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunction * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunction * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunction * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunction * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionEasingFunction
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunction_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunction_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunction_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunction_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunction_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunction_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEasingFunction;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEasingFunction_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEasingFunctionFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEasingFunctionFactory[] = L"Microsoft.UI.Composition.ICompositionEasingFunctionFactory";
/* [object, uuid("7D7D32C3-574B-5620-9902-DB426851802F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEasingFunctionFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEffectBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEffectBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEffectBrush[] = L"Microsoft.UI.Composition.ICompositionEffectBrush";
/* [object, uuid("62E0BBAB-1F45-5A44-9DDF-F0C38A02ED85"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionEffectBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetSourceParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionEffectBrush * This,
        /* [in] */HSTRING name,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetSourceParameter )(
        __x_Microsoft_CUI_CComposition_CICompositionEffectBrush * This,
        /* [in] */HSTRING name,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * source
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionEffectBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionEffectBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionEffectBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush_GetSourceParameter(This,name,result) \
    ( (This)->lpVtbl->GetSourceParameter(This,name,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectBrush_SetSourceParameter(This,name,source) \
    ( (This)->lpVtbl->SetSourceParameter(This,name,source) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEffectBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEffectFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEffectFactory
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEffectFactory[] = L"Microsoft.UI.Composition.ICompositionEffectFactory";
/* [object, uuid("C50F407A-0231-5ED2-B7A7-CA66D3E14B3B"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionEffectFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateBrush )(
        __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionEffectBrush * * result
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ExtendedError )(
        __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This,
        /* [retval, out] */HRESULT * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LoadStatus )(
        __x_Microsoft_CUI_CComposition_CICompositionEffectFactory * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionEffectFactoryLoadStatus * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionEffectFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionEffectFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionEffectFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_CreateBrush(This,result) \
    ( (This)->lpVtbl->CreateBrush(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_get_ExtendedError(This,value) \
    ( (This)->lpVtbl->get_ExtendedError(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectFactory_get_LoadStatus(This,value) \
    ( (This)->lpVtbl->get_LoadStatus(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEffectFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEffectSourceParameter
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEffectSourceParameter
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEffectSourceParameter[] = L"Microsoft.UI.Composition.ICompositionEffectSourceParameter";
/* [object, uuid("BECE3367-5704-59F7-BE8C-D6293AF9C95F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Name )(
        __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter * This,
        /* [retval, out] */HSTRING * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_get_Name(This,value) \
    ( (This)->lpVtbl->get_Name(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEffectSourceParameter
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEffectSourceParameterFactory[] = L"Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory";
/* [object, uuid("26185954-4489-5D0E-AE4D-7BC4BBBC6161"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Create )(
        __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory * This,
        /* [in] */HSTRING name,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameter * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_Create(This,name,value) \
    ( (This)->lpVtbl->Create(This,name,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEffectSourceParameterFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionEllipseGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionEllipseGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionEllipseGeometry[] = L"Microsoft.UI.Composition.ICompositionEllipseGeometry";
/* [object, uuid("F2A21042-7A57-58C1-8B47-8BC8B21D3AA0"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Center )(
        __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Center )(
        __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Radius )(
        __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Radius )(
        __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_get_Center(This,value) \
    ( (This)->lpVtbl->get_Center(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_put_Center(This,value) \
    ( (This)->lpVtbl->put_Center(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_get_Radius(This,value) \
    ( (This)->lpVtbl->get_Radius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_put_Radius(This,value) \
    ( (This)->lpVtbl->put_Radius(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGeometricClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGeometricClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGeometricClip[] = L"Microsoft.UI.Composition.ICompositionGeometricClip";
/* [object, uuid("E3C0A8C5-5297-5D69-8B91-F5330BB1CB27"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGeometricClipVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Geometry )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionGeometry * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Geometry )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionGeometry * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ViewBox )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionViewBox * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ViewBox )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometricClip * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionViewBox * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGeometricClipVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGeometricClip
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGeometricClipVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_get_Geometry(This,value) \
    ( (This)->lpVtbl->get_Geometry(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_put_Geometry(This,value) \
    ( (This)->lpVtbl->put_Geometry(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_get_ViewBox(This,value) \
    ( (This)->lpVtbl->get_ViewBox(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometricClip_put_ViewBox(This,value) \
    ( (This)->lpVtbl->put_ViewBox(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGeometricClip;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometricClip_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGeometry[] = L"Microsoft.UI.Composition.ICompositionGeometry";
/* [object, uuid("4E40BDB2-450B-5A81-9E9B-149417980CC4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGeometryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometry * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometry * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TrimEnd )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TrimEnd )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TrimOffset )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TrimOffset )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TrimStart )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TrimStart )(
        __x_Microsoft_CUI_CComposition_CICompositionGeometry * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGeometryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGeometry
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGeometryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_get_TrimEnd(This,value) \
    ( (This)->lpVtbl->get_TrimEnd(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_put_TrimEnd(This,value) \
    ( (This)->lpVtbl->put_TrimEnd(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_get_TrimOffset(This,value) \
    ( (This)->lpVtbl->get_TrimOffset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_put_TrimOffset(This,value) \
    ( (This)->lpVtbl->put_TrimOffset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_get_TrimStart(This,value) \
    ( (This)->lpVtbl->get_TrimStart(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometry_put_TrimStart(This,value) \
    ( (This)->lpVtbl->put_TrimStart(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGeometryFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGeometryFactory[] = L"Microsoft.UI.Composition.ICompositionGeometryFactory";
/* [object, uuid("B2FB802B-C691-5554-8312-9C6D358D6B9E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGeometryFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGeometryFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGeometryFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGeometryFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGeometryFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGradientBrush[] = L"Microsoft.UI.Composition.ICompositionGradientBrush";
/* [object, uuid("9165D1FB-C738-5F44-ADDC-309EE071D588"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGradientBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AnchorPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AnchorPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ColorStops )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionColorGradientStopCollection * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ExtendMode )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGradientExtendMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ExtendMode )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionGradientExtendMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InterpolationSpace )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionColorSpace * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InterpolationSpace )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionColorSpace value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Scale )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Scale )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGradientBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGradientBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGradientBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_AnchorPoint(This,value) \
    ( (This)->lpVtbl->get_AnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_AnchorPoint(This,value) \
    ( (This)->lpVtbl->put_AnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_CenterPoint(This,value) \
    ( (This)->lpVtbl->get_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_CenterPoint(This,value) \
    ( (This)->lpVtbl->put_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_ColorStops(This,value) \
    ( (This)->lpVtbl->get_ColorStops(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_ExtendMode(This,value) \
    ( (This)->lpVtbl->get_ExtendMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_ExtendMode(This,value) \
    ( (This)->lpVtbl->put_ExtendMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_InterpolationSpace(This,value) \
    ( (This)->lpVtbl->get_InterpolationSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_InterpolationSpace(This,value) \
    ( (This)->lpVtbl->put_InterpolationSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_RotationAngle(This,value) \
    ( (This)->lpVtbl->get_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_RotationAngle(This,value) \
    ( (This)->lpVtbl->put_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->get_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->put_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_Scale(This,value) \
    ( (This)->lpVtbl->get_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_Scale(This,value) \
    ( (This)->lpVtbl->put_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_get_TransformMatrix(This,value) \
    ( (This)->lpVtbl->get_TransformMatrix(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush_put_TransformMatrix(This,value) \
    ( (This)->lpVtbl->put_TransformMatrix(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGradientBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGradientBrush2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGradientBrush2[] = L"Microsoft.UI.Composition.ICompositionGradientBrush2";
/* [object, uuid("03E9EDF3-EE3D-58FC-8C0B-95E4B6060A94"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MappingMode )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionMappingMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MappingMode )(
        __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionMappingMode value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_get_MappingMode(This,value) \
    ( (This)->lpVtbl->get_MappingMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_put_MappingMode(This,value) \
    ( (This)->lpVtbl->put_MappingMode(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGradientBrush2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrush2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGradientBrushFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGradientBrushFactory[] = L"Microsoft.UI.Composition.ICompositionGradientBrushFactory";
/* [object, uuid("B043B155-4B40-590D-A0D9-F8C1A7E0C88F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGradientBrushFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGraphicsDevice
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGraphicsDevice
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGraphicsDevice[] = L"Microsoft.UI.Composition.ICompositionGraphicsDevice";
/* [object, uuid("EC99495F-AE5A-5680-B4D3-82E6ABCB20FB"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGraphicsDeviceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateDrawingSurface )(
        __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CSize sizePixels,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * * result
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_RenderingDeviceReplaced )(
        __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionGraphicsDevice_Microsoft__CUI__CComposition__CRenderingDeviceReplacedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_RenderingDeviceReplaced )(
        __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGraphicsDeviceVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGraphicsDeviceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_CreateDrawingSurface(This,sizePixels,pixelFormat,alphaMode,result) \
    ( (This)->lpVtbl->CreateDrawingSurface(This,sizePixels,pixelFormat,alphaMode,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_add_RenderingDeviceReplaced(This,handler,token) \
    ( (This)->lpVtbl->add_RenderingDeviceReplaced(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_remove_RenderingDeviceReplaced(This,token) \
    ( (This)->lpVtbl->remove_RenderingDeviceReplaced(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGraphicsDevice2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGraphicsDevice
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGraphicsDevice2[] = L"Microsoft.UI.Composition.ICompositionGraphicsDevice2";
/* [object, uuid("72DD5DD9-B2B5-5FFA-B835-84CF3D57F8DB"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateDrawingSurface2 )(
        __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateVirtualDrawingSurface )(
        __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2 * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_CreateDrawingSurface2(This,sizePixels,pixelFormat,alphaMode,result) \
    ( (This)->lpVtbl->CreateDrawingSurface2(This,sizePixels,pixelFormat,alphaMode,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_CreateVirtualDrawingSurface(This,sizePixels,pixelFormat,alphaMode,result) \
    ( (This)->lpVtbl->CreateVirtualDrawingSurface(This,sizePixels,pixelFormat,alphaMode,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionGraphicsDevice3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionGraphicsDevice
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionGraphicsDevice3[] = L"Microsoft.UI.Composition.ICompositionGraphicsDevice3";
/* [object, uuid("1B248AAE-F59E-586C-9E1C-DD19AA54B0A5"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateMipmapSurface )(
        __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CSizeInt32 sizePixels,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode alphaMode,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * * result
        );
    HRESULT ( STDMETHODCALLTYPE *Trim )(
        __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3 * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_CreateMipmapSurface(This,sizePixels,pixelFormat,alphaMode,result) \
    ( (This)->lpVtbl->CreateMipmapSurface(This,sizePixels,pixelFormat,alphaMode,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_Trim(This) \
    ( (This)->lpVtbl->Trim(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIsland_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIsland_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIsland[] = L"Microsoft.UI.Composition.ICompositionIsland";
/* [object, uuid("7CE745FC-2E3F-58BD-B536-3D47A52E83A0"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIsland * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIsland * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualSize )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AutomationHostProvider )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DisplayScale )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Environment )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Environment )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Id )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */UINT64 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsContentVisible )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsContentVisible )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsSiteVisible )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RasterizationScale )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RequestedSize )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RequestedSize )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SnapToPixelAdjustment )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VisiblityHints )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionIslandVisibilityHints * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateStateChangedDeferral )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * * result
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_AutomationProviderRequested )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandAutomationProviderRequestedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_AutomationProviderRequested )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Closed )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Closed )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_CompositorConnected )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_CompositorConnected )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_StateChanged )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CCompositionIsland_Microsoft__CUI__CComposition__CCompositionIslandEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_StateChanged )(
        __x_Microsoft_CUI_CComposition_CICompositionIsland * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIsland
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIsland_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_ActualSize(This,value) \
    ( (This)->lpVtbl->get_ActualSize(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_AutomationHostProvider(This,value) \
    ( (This)->lpVtbl->get_AutomationHostProvider(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_DisplayScale(This,value) \
    ( (This)->lpVtbl->get_DisplayScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_Environment(This,value) \
    ( (This)->lpVtbl->get_Environment(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_put_Environment(This,value) \
    ( (This)->lpVtbl->put_Environment(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_Id(This,value) \
    ( (This)->lpVtbl->get_Id(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_IsContentVisible(This,value) \
    ( (This)->lpVtbl->get_IsContentVisible(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_put_IsContentVisible(This,value) \
    ( (This)->lpVtbl->put_IsContentVisible(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_IsSiteVisible(This,value) \
    ( (This)->lpVtbl->get_IsSiteVisible(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_Orientation(This,value) \
    ( (This)->lpVtbl->get_Orientation(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_RasterizationScale(This,value) \
    ( (This)->lpVtbl->get_RasterizationScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_RequestedSize(This,value) \
    ( (This)->lpVtbl->get_RequestedSize(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_put_RequestedSize(This,value) \
    ( (This)->lpVtbl->put_RequestedSize(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_SnapToPixelAdjustment(This,value) \
    ( (This)->lpVtbl->get_SnapToPixelAdjustment(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_get_VisiblityHints(This,value) \
    ( (This)->lpVtbl->get_VisiblityHints(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_CreateStateChangedDeferral(This,result) \
    ( (This)->lpVtbl->CreateStateChangedDeferral(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_add_AutomationProviderRequested(This,handler,token) \
    ( (This)->lpVtbl->add_AutomationProviderRequested(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_remove_AutomationProviderRequested(This,token) \
    ( (This)->lpVtbl->remove_AutomationProviderRequested(This,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_add_Closed(This,handler,token) \
    ( (This)->lpVtbl->add_Closed(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_remove_Closed(This,token) \
    ( (This)->lpVtbl->remove_Closed(This,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_add_CompositorConnected(This,handler,token) \
    ( (This)->lpVtbl->add_CompositorConnected(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_remove_CompositorConnected(This,token) \
    ( (This)->lpVtbl->remove_CompositorConnected(This,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_add_StateChanged(This,handler,token) \
    ( (This)->lpVtbl->add_StateChanged(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionIsland_remove_StateChanged(This,token) \
    ( (This)->lpVtbl->remove_StateChanged(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIsland;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIsland_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandAutomationProviderRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandAutomationProviderRequestedEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandAutomationProviderRequestedEventArgs[] = L"Microsoft.UI.Composition.ICompositionIslandAutomationProviderRequestedEventArgs";
/* [object, uuid("5D51EE3F-F962-50A9-8296-26558307B6F0"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AutomationProvider )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AutomationProvider )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This,
        /* [in] */IInspectable * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_get_AutomationProvider(This,value) \
    ( (This)->lpVtbl->get_AutomationProvider(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_put_AutomationProvider(This,value) \
    ( (This)->lpVtbl->put_AutomationProvider(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandAutomationProviderRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandEnvironment
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandEnvironment
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandEnvironment[] = L"Microsoft.UI.Composition.ICompositionIslandEnvironment";
/* [object, uuid("3E52A90A-89D2-5EE3-92AC-7565A4B3FDCE"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DefaultOrientation )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DefaultRasterizationScale )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DisplayScale )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This,
        /* [retval, out] */FLOAT * value
        );
    HRESULT ( STDMETHODCALLTYPE *ChangeValues )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 defaultOrientation,
        /* [in] */FLOAT defaultRasterizationScale,
        /* [in] */FLOAT displayScale
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_get_DefaultOrientation(This,value) \
    ( (This)->lpVtbl->get_DefaultOrientation(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_get_DefaultRasterizationScale(This,value) \
    ( (This)->lpVtbl->get_DefaultRasterizationScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_get_DisplayScale(This,value) \
    ( (This)->lpVtbl->get_DisplayScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_ChangeValues(This,defaultOrientation,defaultRasterizationScale,displayScale) \
    ( (This)->lpVtbl->ChangeValues(This,defaultOrientation,defaultRasterizationScale,displayScale) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandEnvironmentStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandEnvironment
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandEnvironmentStatics[] = L"Microsoft.UI.Composition.ICompositionIslandEnvironmentStatics";
/* [object, uuid("31AD3870-F397-5742-A704-ADF767577613"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Create )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionIslandEnvironment * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStaticsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_Create(This,result) \
    ( (This)->lpVtbl->Create(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEnvironmentStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandEventArgs[] = L"Microsoft.UI.Composition.ICompositionIslandEventArgs";
/* [object, uuid("7A196583-EE7A-5783-B4C0-5E9473DB6474"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandFactory[] = L"Microsoft.UI.Composition.ICompositionIslandFactory";
/* [object, uuid("B98A2C72-8E76-5A66-9C4B-92FB9F653DF2"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIslandFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIslandFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandSite_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandSite_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandSite[] = L"Microsoft.UI.Composition.ICompositionIslandSite";
/* [object, uuid("6AC5913A-A507-5A00-9656-44B92A725C6D"), experimental, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandSiteVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSite * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSite * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSite * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSite * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSite * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSite * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateTransformChangedDeferral )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandSite * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandSiteVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIslandSite
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandSiteVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIslandSite_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSite_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSite_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSite_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSite_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSite_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSite_CreateTransformChangedDeferral(This,result) \
    ( (This)->lpVtbl->CreateTransformChangedDeferral(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandSite;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandSite_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandSiteFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIslandSite
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandSiteFactory[] = L"Microsoft.UI.Composition.ICompositionIslandSiteFactory";
/* [object, uuid("05EA3F9A-C6CF-5FE9-93B2-969AE75A484D"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandSiteFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionIslandStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionIslandStatics[] = L"Microsoft.UI.Composition.ICompositionIslandStatics";
/* [object, uuid("10C54EE0-CB9E-5985-B187-491DA59AB363"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionIslandStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *ConnectIsland )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIslandSite * islandSite,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIsland * island
        );
    HRESULT ( STDMETHODCALLTYPE *DisconnectIsland )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIslandSite * islandSite,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIsland * island
        );
    HRESULT ( STDMETHODCALLTYPE *ConnectIslandAsync )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIslandSite * islandSite,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIsland * island,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CIAsyncAction * * operation
        );
    HRESULT ( STDMETHODCALLTYPE *DisconnectIslandAsync )(
        __x_Microsoft_CUI_CComposition_CICompositionIslandStatics * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIslandSite * islandSite,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionIsland * island,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CIAsyncAction * * operation
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionIslandStaticsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionIslandStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionIslandStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_ConnectIsland(This,islandSite,island) \
    ( (This)->lpVtbl->ConnectIsland(This,islandSite,island) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_DisconnectIsland(This,islandSite,island) \
    ( (This)->lpVtbl->DisconnectIsland(This,islandSite,island) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_ConnectIslandAsync(This,islandSite,island,operation) \
    ( (This)->lpVtbl->ConnectIslandAsync(This,islandSite,island,operation) )

#define __x_Microsoft_CUI_CComposition_CICompositionIslandStatics_DisconnectIslandAsync(This,islandSite,island,operation) \
    ( (This)->lpVtbl->DisconnectIslandAsync(This,islandSite,island,operation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionIslandStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionIslandStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLight[] = L"Microsoft.UI.Composition.ICompositionLight";
/* [object, uuid("6D633E77-A6B8-5A2D-8235-E0C380C3B47B"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionLightVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Targets )(
        __x_Microsoft_CUI_CComposition_CICompositionLight * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionLightVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionLight
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionLightVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionLight_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight_get_Targets(This,value) \
    ( (This)->lpVtbl->get_Targets(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLight2[] = L"Microsoft.UI.Composition.ICompositionLight2";
/* [object, uuid("0BB940A4-05EF-5920-BAE1-918B36D44380"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionLight2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ExclusionsFromTargets )(
        __x_Microsoft_CUI_CComposition_CICompositionLight2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionLight2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionLight2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionLight2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionLight2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight2_get_ExclusionsFromTargets(This,value) \
    ( (This)->lpVtbl->get_ExclusionsFromTargets(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLight3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLight3[] = L"Microsoft.UI.Composition.ICompositionLight3";
/* [object, uuid("95CE4859-DD55-5C38-A3EB-13D053CEBB1E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionLight3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLight3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsEnabled )(
        __x_Microsoft_CUI_CComposition_CICompositionLight3 * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsEnabled )(
        __x_Microsoft_CUI_CComposition_CICompositionLight3 * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionLight3Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionLight3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionLight3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionLight3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight3_get_IsEnabled(This,value) \
    ( (This)->lpVtbl->get_IsEnabled(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionLight3_put_IsEnabled(This,value) \
    ( (This)->lpVtbl->put_IsEnabled(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLight3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLight3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLightFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLightFactory[] = L"Microsoft.UI.Composition.ICompositionLightFactory";
/* [object, uuid("CB29CAED-9245-51A6-BA56-ADDBAEFA54CC"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionLightFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLightFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLightFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLightFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLightFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLightFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLightFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionLightFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionLightFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionLightFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionLightFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionLightFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLightFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLightFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionLightFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionLightFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLightFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLightFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLineGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLineGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLineGeometry[] = L"Microsoft.UI.Composition.ICompositionLineGeometry";
/* [object, uuid("489F9382-C186-5936-8946-C4F927E844AA"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionLineGeometryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Start )(
        __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Start )(
        __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_End )(
        __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_End )(
        __x_Microsoft_CUI_CComposition_CICompositionLineGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionLineGeometryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionLineGeometry
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionLineGeometryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_get_Start(This,value) \
    ( (This)->lpVtbl->get_Start(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_put_Start(This,value) \
    ( (This)->lpVtbl->put_Start(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_get_End(This,value) \
    ( (This)->lpVtbl->get_End(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionLineGeometry_put_End(This,value) \
    ( (This)->lpVtbl->put_End(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLineGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLineGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionLinearGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionLinearGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionLinearGradientBrush[] = L"Microsoft.UI.Composition.ICompositionLinearGradientBrush";
/* [object, uuid("F726FB52-270C-58B1-A902-89576772DEDC"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_EndPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_EndPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StartPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StartPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_get_EndPoint(This,value) \
    ( (This)->lpVtbl->get_EndPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_put_EndPoint(This,value) \
    ( (This)->lpVtbl->put_EndPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_get_StartPoint(This,value) \
    ( (This)->lpVtbl->get_StartPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_put_StartPoint(This,value) \
    ( (This)->lpVtbl->put_StartPoint(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionMaskBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionMaskBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionMaskBrush[] = L"Microsoft.UI.Composition.ICompositionMaskBrush";
/* [object, uuid("C9502786-65AA-5BE5-A679-C3B5DBFB0DC6"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionMaskBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Mask )(
        __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Mask )(
        __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_Microsoft_CUI_CComposition_CICompositionMaskBrush * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionMaskBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionMaskBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionMaskBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_get_Mask(This,value) \
    ( (This)->lpVtbl->get_Mask(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_put_Mask(This,value) \
    ( (This)->lpVtbl->put_Mask(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_get_Source(This,value) \
    ( (This)->lpVtbl->get_Source(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionMaskBrush_put_Source(This,value) \
    ( (This)->lpVtbl->put_Source(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionMaskBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionMaskBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionMipmapSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionMipmapSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionMipmapSurface[] = L"Microsoft.UI.Composition.ICompositionMipmapSurface";
/* [object, uuid("A65F0AB0-2DBD-5D59-8C16-A0EDB5EA2990"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionMipmapSurfaceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LevelCount )(
        __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
        /* [retval, out] */UINT32 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AlphaMode )(
        __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
        /* [retval, out] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXAlphaMode * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PixelFormat )(
        __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
        /* [retval, out] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SizeInt32 )(
        __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
        /* [retval, out] */__x_ABI_CWindows_CGraphics_CSizeInt32 * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDrawingSurfaceForLevel )(
        __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface * This,
        /* [in] */UINT32 level,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionDrawingSurface * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionMipmapSurfaceVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionMipmapSurfaceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_get_LevelCount(This,value) \
    ( (This)->lpVtbl->get_LevelCount(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_get_AlphaMode(This,value) \
    ( (This)->lpVtbl->get_AlphaMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_get_PixelFormat(This,value) \
    ( (This)->lpVtbl->get_PixelFormat(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_get_SizeInt32(This,value) \
    ( (This)->lpVtbl->get_SizeInt32(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_GetDrawingSurfaceForLevel(This,level,result) \
    ( (This)->lpVtbl->GetDrawingSurfaceForLevel(This,level,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionMipmapSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionMipmapSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionNineGridBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionNineGridBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionNineGridBrush[] = L"Microsoft.UI.Composition.ICompositionNineGridBrush";
/* [object, uuid("C77A3D21-C7EE-517A-98F4-AD9A7202BC86"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionNineGridBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BottomInset )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BottomInset )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BottomInsetScale )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BottomInsetScale )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsCenterHollow )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsCenterHollow )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LeftInset )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_LeftInset )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LeftInsetScale )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_LeftInsetScale )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RightInset )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RightInset )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RightInsetScale )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RightInsetScale )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TopInset )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TopInset )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TopInsetScale )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TopInsetScale )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetInsets )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT inset
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetInsetsWithValues )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT left,
        /* [in] */FLOAT top,
        /* [in] */FLOAT right,
        /* [in] */FLOAT bottom
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetInsetScales )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT scale
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetInsetScalesWithValues )(
        __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * This,
        /* [in] */FLOAT left,
        /* [in] */FLOAT top,
        /* [in] */FLOAT right,
        /* [in] */FLOAT bottom
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionNineGridBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionNineGridBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_BottomInset(This,value) \
    ( (This)->lpVtbl->get_BottomInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_BottomInset(This,value) \
    ( (This)->lpVtbl->put_BottomInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_BottomInsetScale(This,value) \
    ( (This)->lpVtbl->get_BottomInsetScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_BottomInsetScale(This,value) \
    ( (This)->lpVtbl->put_BottomInsetScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_IsCenterHollow(This,value) \
    ( (This)->lpVtbl->get_IsCenterHollow(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_IsCenterHollow(This,value) \
    ( (This)->lpVtbl->put_IsCenterHollow(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_LeftInset(This,value) \
    ( (This)->lpVtbl->get_LeftInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_LeftInset(This,value) \
    ( (This)->lpVtbl->put_LeftInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_LeftInsetScale(This,value) \
    ( (This)->lpVtbl->get_LeftInsetScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_LeftInsetScale(This,value) \
    ( (This)->lpVtbl->put_LeftInsetScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_RightInset(This,value) \
    ( (This)->lpVtbl->get_RightInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_RightInset(This,value) \
    ( (This)->lpVtbl->put_RightInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_RightInsetScale(This,value) \
    ( (This)->lpVtbl->get_RightInsetScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_RightInsetScale(This,value) \
    ( (This)->lpVtbl->put_RightInsetScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_Source(This,value) \
    ( (This)->lpVtbl->get_Source(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_Source(This,value) \
    ( (This)->lpVtbl->put_Source(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_TopInset(This,value) \
    ( (This)->lpVtbl->get_TopInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_TopInset(This,value) \
    ( (This)->lpVtbl->put_TopInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_get_TopInsetScale(This,value) \
    ( (This)->lpVtbl->get_TopInsetScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_put_TopInsetScale(This,value) \
    ( (This)->lpVtbl->put_TopInsetScale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_SetInsets(This,inset) \
    ( (This)->lpVtbl->SetInsets(This,inset) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_SetInsetsWithValues(This,left,top,right,bottom) \
    ( (This)->lpVtbl->SetInsetsWithValues(This,left,top,right,bottom) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_SetInsetScales(This,scale) \
    ( (This)->lpVtbl->SetInsetScales(This,scale) )

#define __x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_SetInsetScalesWithValues(This,left,top,right,bottom) \
    ( (This)->lpVtbl->SetInsetScalesWithValues(This,left,top,right,bottom) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionNineGridBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionNineGridBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionNotificationDeferral
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionNotificationDeferral
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionNotificationDeferral[] = L"Microsoft.UI.Composition.ICompositionNotificationDeferral";
/* [object, uuid("396698B7-437B-5ACF-AEC9-6342C437FAF1"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Complete )(
        __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferralVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_Complete(This) \
    ( (This)->lpVtbl->Complete(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionNotificationDeferral_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObject
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObject[] = L"Microsoft.UI.Composition.ICompositionObject";
/* [object, uuid("0E583D49-FB5E-5481-A426-D3C41E059A5A"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Compositor )(
        __x_Microsoft_CUI_CComposition_CICompositionObject * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositor * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Properties )(
        __x_Microsoft_CUI_CComposition_CICompositionObject * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionPropertySet * * value
        );
    HRESULT ( STDMETHODCALLTYPE *StartAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositionObject * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimation * animation
        );
    HRESULT ( STDMETHODCALLTYPE *StopAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositionObject * This,
        /* [in] */HSTRING propertyName
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionObjectVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionObject
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionObjectVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionObject_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_get_Compositor(This,value) \
    ( (This)->lpVtbl->get_Compositor(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_get_Properties(This,value) \
    ( (This)->lpVtbl->get_Properties(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_StartAnimation(This,propertyName,animation) \
    ( (This)->lpVtbl->StartAnimation(This,propertyName,animation) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject_StopAnimation(This,propertyName) \
    ( (This)->lpVtbl->StopAnimation(This,propertyName) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObject;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObject_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObject2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObject2[] = L"Microsoft.UI.Composition.ICompositionObject2";
/* [object, uuid("BCBBFEBF-799C-51CE-9C82-B6E49E7E62E1"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionObject2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Comment )(
        __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Comment )(
        __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ImplicitAnimations )(
        __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ImplicitAnimations )(
        __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * value
        );
    HRESULT ( STDMETHODCALLTYPE *StartAnimationGroup )(
        __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimationBase * value
        );
    HRESULT ( STDMETHODCALLTYPE *StopAnimationGroup )(
        __x_Microsoft_CUI_CComposition_CICompositionObject2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimationBase * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionObject2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionObject2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionObject2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionObject2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_get_Comment(This,value) \
    ( (This)->lpVtbl->get_Comment(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_put_Comment(This,value) \
    ( (This)->lpVtbl->put_Comment(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_get_ImplicitAnimations(This,value) \
    ( (This)->lpVtbl->get_ImplicitAnimations(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_put_ImplicitAnimations(This,value) \
    ( (This)->lpVtbl->put_ImplicitAnimations(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_StartAnimationGroup(This,value) \
    ( (This)->lpVtbl->StartAnimationGroup(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject2_StopAnimationGroup(This,value) \
    ( (This)->lpVtbl->StopAnimationGroup(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObject2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObject2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObject3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObject3[] = L"Microsoft.UI.Composition.ICompositionObject3";
/* [object, uuid("E571858A-4DB6-58D7-8A77-A9F1F0281DB4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionObject3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DispatcherQueue )(
        __x_Microsoft_CUI_CComposition_CICompositionObject3 * This,
        /* [retval, out] */__x_Microsoft_CSystem_CIDispatcherQueue * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionObject3Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionObject3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionObject3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionObject3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject3_get_DispatcherQueue(This,value) \
    ( (This)->lpVtbl->get_DispatcherQueue(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObject3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObject3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObject4
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObject4[] = L"Microsoft.UI.Composition.ICompositionObject4";
/* [object, uuid("029AD57C-5497-51F3-8B40-E4E235992C6F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionObject4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject4 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject4 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject4 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject4 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject4 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObject4 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *TryGetAnimationController )(
        __x_Microsoft_CUI_CComposition_CICompositionObject4 * This,
        /* [in] */HSTRING propertyName,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIAnimationController * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionObject4Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionObject4
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionObject4Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionObject4_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject4_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject4_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject4_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject4_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject4_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionObject4_TryGetAnimationController(This,propertyName,result) \
    ( (This)->lpVtbl->TryGetAnimationController(This,propertyName,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObject4;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObject4_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObjectFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObjectFactory[] = L"Microsoft.UI.Composition.ICompositionObjectFactory";
/* [object, uuid("6133C5F9-CD3B-56B2-876F-EB849DB14911"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionObjectFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionObjectFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionObjectFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionObjectFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionObjectFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObjectFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObjectFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionObjectStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionObject
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionObjectStatics[] = L"Microsoft.UI.Composition.ICompositionObjectStatics";
/* [object, uuid("A091356C-38AE-514C-9B58-AD5C8C7936AD"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionObjectStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionObjectStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *StartAnimationWithIAnimationObject )(
        __x_Microsoft_CUI_CComposition_CICompositionObjectStatics * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIAnimationObject * target,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimation * animation
        );
    HRESULT ( STDMETHODCALLTYPE *StartAnimationGroupWithIAnimationObject )(
        __x_Microsoft_CUI_CComposition_CICompositionObjectStatics * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIAnimationObject * target,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimationBase * animation
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionObjectStaticsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionObjectStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionObjectStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics_StartAnimationWithIAnimationObject(This,target,propertyName,animation) \
    ( (This)->lpVtbl->StartAnimationWithIAnimationObject(This,target,propertyName,animation) )

#define __x_Microsoft_CUI_CComposition_CICompositionObjectStatics_StartAnimationGroupWithIAnimationObject(This,target,animation) \
    ( (This)->lpVtbl->StartAnimationGroupWithIAnimationObject(This,target,animation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionObjectStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionObjectStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPath
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPath
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPath[] = L"Microsoft.UI.Composition.ICompositionPath";
/* [object, uuid("17C518C0-D7A2-54BE-AC7F-C408562A6A20"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionPathVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPath * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPath * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPath * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPath * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPath * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPath * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionPathVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionPath
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionPathVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionPath_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionPath_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPath_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPath_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionPath_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionPath_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPath;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPath_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPathFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPath
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPathFactory[] = L"Microsoft.UI.Composition.ICompositionPathFactory";
/* [object, uuid("618601F8-4CA8-53F9-8E76-5DDC40DFE7F4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionPathFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Create )(
        __x_Microsoft_CUI_CComposition_CICompositionPathFactory * This,
        /* [in] */__x_Microsoft_CGraphics_CIGeometrySource2D * source,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionPath * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionPathFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionPathFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionPathFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionPathFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathFactory_Create(This,source,value) \
    ( (This)->lpVtbl->Create(This,source,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPathFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPathFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPathGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPathGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPathGeometry[] = L"Microsoft.UI.Composition.ICompositionPathGeometry";
/* [object, uuid("0F6E6B82-060B-571E-B849-AB8E0D723962"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionPathGeometryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathGeometry * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathGeometry * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathGeometry * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathGeometry * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathGeometry * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPathGeometry * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Path )(
        __x_Microsoft_CUI_CComposition_CICompositionPathGeometry * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionPath * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Path )(
        __x_Microsoft_CUI_CComposition_CICompositionPathGeometry * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionPath * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionPathGeometryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionPathGeometry
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionPathGeometryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry_get_Path(This,value) \
    ( (This)->lpVtbl->get_Path(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPathGeometry_put_Path(This,value) \
    ( (This)->lpVtbl->put_Path(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPathGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPathGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadow[] = L"Microsoft.UI.Composition.ICompositionProjectedShadow";
/* [object, uuid("D400AB10-8B92-5ABB-9E23-807974FC6961"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BlurRadiusMultiplier )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BlurRadiusMultiplier )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Casters )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LightSource )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionLight * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_LightSource )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionLight * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxBlurRadius )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MaxBlurRadius )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinBlurRadius )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MinBlurRadius )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Receivers )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_get_BlurRadiusMultiplier(This,value) \
    ( (This)->lpVtbl->get_BlurRadiusMultiplier(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_put_BlurRadiusMultiplier(This,value) \
    ( (This)->lpVtbl->put_BlurRadiusMultiplier(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_get_Casters(This,value) \
    ( (This)->lpVtbl->get_Casters(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_get_LightSource(This,value) \
    ( (This)->lpVtbl->get_LightSource(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_put_LightSource(This,value) \
    ( (This)->lpVtbl->put_LightSource(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_get_MaxBlurRadius(This,value) \
    ( (This)->lpVtbl->get_MaxBlurRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_put_MaxBlurRadius(This,value) \
    ( (This)->lpVtbl->put_MaxBlurRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_get_MinBlurRadius(This,value) \
    ( (This)->lpVtbl->get_MinBlurRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_put_MinBlurRadius(This,value) \
    ( (This)->lpVtbl->put_MinBlurRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_get_Receivers(This,value) \
    ( (This)->lpVtbl->get_Receivers(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadow;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadow2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadow2[] = L"Microsoft.UI.Composition.ICompositionProjectedShadow2";
/* [object, uuid("BE1AA693-593C-5CAC-A001-B2B4CF090098"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxOpacity )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MaxOpacity )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinOpacity )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MinOpacity )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OpacityFalloff )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OpacityFalloff )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2 * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_get_MaxOpacity(This,value) \
    ( (This)->lpVtbl->get_MaxOpacity(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_put_MaxOpacity(This,value) \
    ( (This)->lpVtbl->put_MaxOpacity(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_get_MinOpacity(This,value) \
    ( (This)->lpVtbl->get_MinOpacity(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_put_MinOpacity(This,value) \
    ( (This)->lpVtbl->put_MinOpacity(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_get_OpacityFalloff(This,value) \
    ( (This)->lpVtbl->get_OpacityFalloff(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_put_OpacityFalloff(This,value) \
    ( (This)->lpVtbl->put_OpacityFalloff(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadow2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowCaster
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowCaster
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowCaster[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowCaster";
/* [object, uuid("15A9F2D0-6BAE-521B-90C7-C7500F2BF562"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Brush )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Brush )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CastingVisual )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CastingVisual )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_get_Brush(This,value) \
    ( (This)->lpVtbl->get_Brush(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_put_Brush(This,value) \
    ( (This)->lpVtbl->put_Brush(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_get_CastingVisual(This,value) \
    ( (This)->lpVtbl->get_CastingVisual(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_put_CastingVisual(This,value) \
    ( (This)->lpVtbl->put_CastingVisual(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowCaster2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowCaster
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowCaster2[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowCaster2";
/* [object, uuid("0EB2F457-2EE9-5745-A0FD-E11D9E111F98"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AncestorClip )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AncestorClip )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Mask )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Mask )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_get_AncestorClip(This,value) \
    ( (This)->lpVtbl->get_AncestorClip(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_put_AncestorClip(This,value) \
    ( (This)->lpVtbl->put_AncestorClip(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_get_Mask(This,value) \
    ( (This)->lpVtbl->get_Mask(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_put_Mask(This,value) \
    ( (This)->lpVtbl->put_Mask(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollection[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection";
/* [object, uuid("B120BFDC-533C-57A9-AE16-D43BA52472C4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Count )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
        /* [retval, out] */INT32 * value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertAbove )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * newCaster,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * reference
        );
    HRESULT ( STDMETHODCALLTYPE *InsertAtBottom )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * newCaster
        );
    HRESULT ( STDMETHODCALLTYPE *InsertAtTop )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * newCaster
        );
    HRESULT ( STDMETHODCALLTYPE *InsertBelow )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * newCaster,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * reference
        );
    HRESULT ( STDMETHODCALLTYPE *Remove )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * caster
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveAll )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_get_Count(This,value) \
    ( (This)->lpVtbl->get_Count(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_InsertAbove(This,newCaster,reference) \
    ( (This)->lpVtbl->InsertAbove(This,newCaster,reference) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_InsertAtBottom(This,newCaster) \
    ( (This)->lpVtbl->InsertAtBottom(This,newCaster) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_InsertAtTop(This,newCaster) \
    ( (This)->lpVtbl->InsertAtTop(This,newCaster) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_InsertBelow(This,newCaster,reference) \
    ( (This)->lpVtbl->InsertBelow(This,newCaster,reference) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_Remove(This,caster) \
    ( (This)->lpVtbl->Remove(This,caster) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_RemoveAll(This) \
    ( (This)->lpVtbl->RemoveAll(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowCasterCollectionStatics[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics";
/* [object, uuid("43A98014-B88B-5B2A-B1E2-5E776AB77538"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxRespectedCasters )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics * This,
        /* [retval, out] */INT32 * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_get_MaxRespectedCasters(This,value) \
    ( (This)->lpVtbl->get_MaxRespectedCasters(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCasterCollectionStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiver
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowReceiver
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowReceiver[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowReceiver";
/* [object, uuid("29FE12B0-F1A0-50E1-AF28-2E943BC819D6"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ReceivingVisual )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ReceivingVisual )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_get_ReceivingVisual(This,value) \
    ( (This)->lpVtbl->get_ReceivingVisual(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_put_ReceivingVisual(This,value) \
    ( (This)->lpVtbl->put_ReceivingVisual(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiver2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowReceiver
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowReceiver2[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowReceiver2";
/* [object, uuid("931AF4B8-6DB0-5C6E-8B5A-2A39A83FFCEF"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DrawOrder )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionProjectedShadowDrawOrder * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DrawOrder )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionProjectedShadowDrawOrder value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Mask )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Mask )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_get_DrawOrder(This,value) \
    ( (This)->lpVtbl->get_DrawOrder(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_put_DrawOrder(This,value) \
    ( (This)->lpVtbl->put_DrawOrder(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_get_Mask(This,value) \
    ( (This)->lpVtbl->get_Mask(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_put_Mask(This,value) \
    ( (This)->lpVtbl->put_Mask(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionProjectedShadowReceiverUnorderedCollection[] = L"Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection";
/* [object, uuid("2D35F751-A1FA-5FFF-B156-6D8FCD8362ED"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Add )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Count )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This,
        /* [retval, out] */INT32 * value
        );
    HRESULT ( STDMETHODCALLTYPE *Remove )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * value
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveAll )(
        __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollectionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_Add(This,value) \
    ( (This)->lpVtbl->Add(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_get_Count(This,value) \
    ( (This)->lpVtbl->get_Count(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_Remove(This,value) \
    ( (This)->lpVtbl->Remove(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_RemoveAll(This) \
    ( (This)->lpVtbl->RemoveAll(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiverUnorderedCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPropertySet
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPropertySet
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPropertySet[] = L"Microsoft.UI.Composition.ICompositionPropertySet";
/* [object, uuid("97F7A17B-97BE-5545-9F1C-0B9D44577F57"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionPropertySetVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *InsertColor )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertMatrix3x2 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertMatrix4x4 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertQuaternion )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertScalar )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [in] */FLOAT value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertVector2 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertVector3 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertVector4 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector4 value
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetColor )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [out] */__x_ABI_CWindows_CUI_CColor * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetMatrix3x2 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [out] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetMatrix4x4 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [out] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetQuaternion )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [out] */__x_ABI_CWindows_CFoundation_CNumerics_CQuaternion * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetScalar )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [out] */FLOAT * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetVector2 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetVector3 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetVector4 )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet * This,
        /* [in] */HSTRING propertyName,
        /* [out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector4 * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionPropertySetVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionPropertySet
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionPropertySetVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_InsertColor(This,propertyName,value) \
    ( (This)->lpVtbl->InsertColor(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_InsertMatrix3x2(This,propertyName,value) \
    ( (This)->lpVtbl->InsertMatrix3x2(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_InsertMatrix4x4(This,propertyName,value) \
    ( (This)->lpVtbl->InsertMatrix4x4(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_InsertQuaternion(This,propertyName,value) \
    ( (This)->lpVtbl->InsertQuaternion(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_InsertScalar(This,propertyName,value) \
    ( (This)->lpVtbl->InsertScalar(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_InsertVector2(This,propertyName,value) \
    ( (This)->lpVtbl->InsertVector2(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_InsertVector3(This,propertyName,value) \
    ( (This)->lpVtbl->InsertVector3(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_InsertVector4(This,propertyName,value) \
    ( (This)->lpVtbl->InsertVector4(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_TryGetColor(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetColor(This,propertyName,value,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_TryGetMatrix3x2(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetMatrix3x2(This,propertyName,value,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_TryGetMatrix4x4(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetMatrix4x4(This,propertyName,value,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_TryGetQuaternion(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetQuaternion(This,propertyName,value,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_TryGetScalar(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetScalar(This,propertyName,value,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_TryGetVector2(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetVector2(This,propertyName,value,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_TryGetVector3(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetVector3(This,propertyName,value,result) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet_TryGetVector4(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetVector4(This,propertyName,value,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPropertySet;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPropertySet_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionPropertySet2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionPropertySet
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionPropertySet2[] = L"Microsoft.UI.Composition.ICompositionPropertySet2";
/* [object, uuid("3DB6D621-3497-55E4-95BF-8AE5E7C34C33"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionPropertySet2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *InsertBoolean )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 * This,
        /* [in] */HSTRING propertyName,
        /* [in] */boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *TryGetBoolean )(
        __x_Microsoft_CUI_CComposition_CICompositionPropertySet2 * This,
        /* [in] */HSTRING propertyName,
        /* [out] */boolean * value,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionGetValueStatus * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionPropertySet2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionPropertySet2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionPropertySet2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2_InsertBoolean(This,propertyName,value) \
    ( (This)->lpVtbl->InsertBoolean(This,propertyName,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionPropertySet2_TryGetBoolean(This,propertyName,value,result) \
    ( (This)->lpVtbl->TryGetBoolean(This,propertyName,value,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionPropertySet2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionPropertySet2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionRadialGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionRadialGradientBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionRadialGradientBrush[] = L"Microsoft.UI.Composition.ICompositionRadialGradientBrush";
/* [object, uuid("17662F3F-D351-5435-B3B4-EC26CEFECCC5"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_EllipseCenter )(
        __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_EllipseCenter )(
        __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_EllipseRadius )(
        __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_EllipseRadius )(
        __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_GradientOriginOffset )(
        __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_GradientOriginOffset )(
        __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_get_EllipseCenter(This,value) \
    ( (This)->lpVtbl->get_EllipseCenter(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_put_EllipseCenter(This,value) \
    ( (This)->lpVtbl->put_EllipseCenter(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_get_EllipseRadius(This,value) \
    ( (This)->lpVtbl->get_EllipseRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_put_EllipseRadius(This,value) \
    ( (This)->lpVtbl->put_EllipseRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_get_GradientOriginOffset(This,value) \
    ( (This)->lpVtbl->get_GradientOriginOffset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_put_GradientOriginOffset(This,value) \
    ( (This)->lpVtbl->put_GradientOriginOffset(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionRectangleGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionRectangleGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionRectangleGeometry[] = L"Microsoft.UI.Composition.ICompositionRectangleGeometry";
/* [object, uuid("BD551FCF-2C7F-5125-AC44-50A4F1D8FA76"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Size )(
        __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_get_Size(This,value) \
    ( (This)->lpVtbl->get_Size(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_put_Size(This,value) \
    ( (This)->lpVtbl->put_Size(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionRoundedRectangleGeometry
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionRoundedRectangleGeometry[] = L"Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry";
/* [object, uuid("02EAFC87-8D1F-5445-A416-D81BAEE8A750"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CornerRadius )(
        __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CornerRadius )(
        __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Size )(
        __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_get_CornerRadius(This,value) \
    ( (This)->lpVtbl->get_CornerRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_put_CornerRadius(This,value) \
    ( (This)->lpVtbl->put_CornerRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_get_Size(This,value) \
    ( (This)->lpVtbl->get_Size(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_put_Size(This,value) \
    ( (This)->lpVtbl->put_Size(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionScopedBatch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionScopedBatch
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionScopedBatch[] = L"Microsoft.UI.Composition.ICompositionScopedBatch";
/* [object, uuid("D31CA572-99CE-5969-B042-6C2D330A3859"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionScopedBatchVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsActive )(
        __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This,
        /* [retval, out] */boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsEnded )(
        __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This,
        /* [retval, out] */boolean * value
        );
    HRESULT ( STDMETHODCALLTYPE *End )(
        __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This
        );
    HRESULT ( STDMETHODCALLTYPE *Resume )(
        __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This
        );
    HRESULT ( STDMETHODCALLTYPE *Suspend )(
        __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Completed )(
        __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This,
        /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CComposition__CCompositionBatchCompletedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Completed )(
        __x_Microsoft_CUI_CComposition_CICompositionScopedBatch * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionScopedBatchVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionScopedBatch
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionScopedBatchVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_get_IsActive(This,value) \
    ( (This)->lpVtbl->get_IsActive(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_get_IsEnded(This,value) \
    ( (This)->lpVtbl->get_IsEnded(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_End(This) \
    ( (This)->lpVtbl->End(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_Resume(This) \
    ( (This)->lpVtbl->Resume(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_Suspend(This) \
    ( (This)->lpVtbl->Suspend(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_add_Completed(This,handler,token) \
    ( (This)->lpVtbl->add_Completed(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CICompositionScopedBatch_remove_Completed(This,token) \
    ( (This)->lpVtbl->remove_Completed(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionScopedBatch;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionScopedBatch_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionShadow[] = L"Microsoft.UI.Composition.ICompositionShadow";
/* [object, uuid("176B8BB5-4DAE-59B2-B9A0-2499B243267C"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionShadowVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadow * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadow * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadow * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadow * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadow * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadow * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionShadowVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionShadow
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionShadowVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionShadow_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadow_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadow_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadow_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadow_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadow_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionShadow;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionShadow_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionShadowFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionShadowFactory[] = L"Microsoft.UI.Composition.ICompositionShadowFactory";
/* [object, uuid("FF27546D-9750-54AE-AB8C-126CBE9158C3"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionShadowFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadowFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadowFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadowFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadowFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadowFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShadowFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionShadowFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionShadowFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionShadowFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionShadowFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadowFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadowFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadowFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadowFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionShadowFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionShadowFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionShadowFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionShape
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionShape[] = L"Microsoft.UI.Composition.ICompositionShape";
/* [object, uuid("ED75D4D8-437F-5640-9720-FAAE35CE5895"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionShapeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShape * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Scale )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Scale )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CICompositionShape * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionShapeVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionShape
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionShapeVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionShape_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_get_CenterPoint(This,value) \
    ( (This)->lpVtbl->get_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_put_CenterPoint(This,value) \
    ( (This)->lpVtbl->put_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_get_RotationAngle(This,value) \
    ( (This)->lpVtbl->get_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_put_RotationAngle(This,value) \
    ( (This)->lpVtbl->put_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_get_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->get_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_put_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->put_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_get_Scale(This,value) \
    ( (This)->lpVtbl->get_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_put_Scale(This,value) \
    ( (This)->lpVtbl->put_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_get_TransformMatrix(This,value) \
    ( (This)->lpVtbl->get_TransformMatrix(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionShape_put_TransformMatrix(This,value) \
    ( (This)->lpVtbl->put_TransformMatrix(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionShape;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionShape_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionShapeFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionShape
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionShapeFactory[] = L"Microsoft.UI.Composition.ICompositionShapeFactory";
/* [object, uuid("7AA2B987-9CDD-5B6E-8AC1-E989D78B4811"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionShapeFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShapeFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShapeFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShapeFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShapeFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShapeFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionShapeFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionShapeFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionShapeFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionShapeFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionShapeFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionShapeFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionShapeFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionShapeFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionShapeFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionShapeFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionShapeFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionShapeFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSpriteShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionSpriteShape
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSpriteShape[] = L"Microsoft.UI.Composition.ICompositionSpriteShape";
/* [object, uuid("982138F2-5781-509A-BA5D-112BCB0B98EF"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionSpriteShapeVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FillBrush )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FillBrush )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Geometry )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionGeometry * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Geometry )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionGeometry * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsStrokeNonScaling )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsStrokeNonScaling )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeBrush )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeBrush )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeDashArray )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */__FIVector_1_float * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeDashCap )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionStrokeCap * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeDashCap )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionStrokeCap value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeDashOffset )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeDashOffset )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeEndCap )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionStrokeCap * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeEndCap )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionStrokeCap value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeLineJoin )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionStrokeLineJoin * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeLineJoin )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionStrokeLineJoin value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeMiterLimit )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeMiterLimit )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeStartCap )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionStrokeCap * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeStartCap )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionStrokeCap value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StrokeThickness )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StrokeThickness )(
        __x_Microsoft_CUI_CComposition_CICompositionSpriteShape * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionSpriteShapeVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionSpriteShape
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionSpriteShapeVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_FillBrush(This,value) \
    ( (This)->lpVtbl->get_FillBrush(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_FillBrush(This,value) \
    ( (This)->lpVtbl->put_FillBrush(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_Geometry(This,value) \
    ( (This)->lpVtbl->get_Geometry(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_Geometry(This,value) \
    ( (This)->lpVtbl->put_Geometry(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_IsStrokeNonScaling(This,value) \
    ( (This)->lpVtbl->get_IsStrokeNonScaling(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_IsStrokeNonScaling(This,value) \
    ( (This)->lpVtbl->put_IsStrokeNonScaling(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeBrush(This,value) \
    ( (This)->lpVtbl->get_StrokeBrush(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_StrokeBrush(This,value) \
    ( (This)->lpVtbl->put_StrokeBrush(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeDashArray(This,value) \
    ( (This)->lpVtbl->get_StrokeDashArray(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeDashCap(This,value) \
    ( (This)->lpVtbl->get_StrokeDashCap(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_StrokeDashCap(This,value) \
    ( (This)->lpVtbl->put_StrokeDashCap(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeDashOffset(This,value) \
    ( (This)->lpVtbl->get_StrokeDashOffset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_StrokeDashOffset(This,value) \
    ( (This)->lpVtbl->put_StrokeDashOffset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeEndCap(This,value) \
    ( (This)->lpVtbl->get_StrokeEndCap(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_StrokeEndCap(This,value) \
    ( (This)->lpVtbl->put_StrokeEndCap(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeLineJoin(This,value) \
    ( (This)->lpVtbl->get_StrokeLineJoin(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_StrokeLineJoin(This,value) \
    ( (This)->lpVtbl->put_StrokeLineJoin(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeMiterLimit(This,value) \
    ( (This)->lpVtbl->get_StrokeMiterLimit(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_StrokeMiterLimit(This,value) \
    ( (This)->lpVtbl->put_StrokeMiterLimit(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeStartCap(This,value) \
    ( (This)->lpVtbl->get_StrokeStartCap(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_StrokeStartCap(This,value) \
    ( (This)->lpVtbl->put_StrokeStartCap(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_get_StrokeThickness(This,value) \
    ( (This)->lpVtbl->get_StrokeThickness(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSpriteShape_put_StrokeThickness(This,value) \
    ( (This)->lpVtbl->put_StrokeThickness(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSpriteShape;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSpriteShape_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSurface[] = L"Microsoft.UI.Composition.ICompositionSurface";
/* [object, uuid("9EC612C3-A5D2-4F97-9DF3-6B49CE736215"), experimental, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionSurfaceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurface * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurface * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurface * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurface * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurface * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurface * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionSurfaceVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionSurface
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionSurfaceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionSurface_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurface_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurface_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurface_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurface_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurface_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSurfaceBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionSurfaceBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSurfaceBrush[] = L"Microsoft.UI.Composition.ICompositionSurfaceBrush";
/* [object, uuid("616BB5A5-0A33-512D-B4B1-3D3734F04ACA"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrushVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BitmapInterpolationMode )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionBitmapInterpolationMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BitmapInterpolationMode )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionBitmapInterpolationMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignmentRatio )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignmentRatio )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Stretch )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionStretch * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Stretch )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionStretch value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Surface )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionSurface * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Surface )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionSurface * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignmentRatio )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignmentRatio )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrushVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrushVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_get_BitmapInterpolationMode(This,value) \
    ( (This)->lpVtbl->get_BitmapInterpolationMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_put_BitmapInterpolationMode(This,value) \
    ( (This)->lpVtbl->put_BitmapInterpolationMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_get_HorizontalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->get_HorizontalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_put_HorizontalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->put_HorizontalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_get_Stretch(This,value) \
    ( (This)->lpVtbl->get_Stretch(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_put_Stretch(This,value) \
    ( (This)->lpVtbl->put_Stretch(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_get_Surface(This,value) \
    ( (This)->lpVtbl->get_Surface(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_put_Surface(This,value) \
    ( (This)->lpVtbl->put_Surface(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_get_VerticalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->get_VerticalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_put_VerticalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->put_VerticalAlignmentRatio(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSurfaceBrush2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionSurfaceBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSurfaceBrush2[] = L"Microsoft.UI.Composition.ICompositionSurfaceBrush2";
/* [object, uuid("9904B7E3-084B-58B5-9AE1-3A2040DD7A22"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AnchorPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AnchorPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Scale )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Scale )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix3x2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_get_AnchorPoint(This,value) \
    ( (This)->lpVtbl->get_AnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_put_AnchorPoint(This,value) \
    ( (This)->lpVtbl->put_AnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_get_CenterPoint(This,value) \
    ( (This)->lpVtbl->get_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_put_CenterPoint(This,value) \
    ( (This)->lpVtbl->put_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_get_RotationAngle(This,value) \
    ( (This)->lpVtbl->get_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_put_RotationAngle(This,value) \
    ( (This)->lpVtbl->put_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_get_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->get_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_put_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->put_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_get_Scale(This,value) \
    ( (This)->lpVtbl->get_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_put_Scale(This,value) \
    ( (This)->lpVtbl->put_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_get_TransformMatrix(This,value) \
    ( (This)->lpVtbl->get_TransformMatrix(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_put_TransformMatrix(This,value) \
    ( (This)->lpVtbl->put_TransformMatrix(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionSurfaceBrush3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionSurfaceBrush
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionSurfaceBrush3[] = L"Microsoft.UI.Composition.ICompositionSurfaceBrush3";
/* [object, uuid("8AA74C78-680C-5791-AB07-92DB0F37E352"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SnapToPixels )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_SnapToPixels )(
        __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3 * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_get_SnapToPixels(This,value) \
    ( (This)->lpVtbl->get_SnapToPixels(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_put_SnapToPixels(This,value) \
    ( (This)->lpVtbl->put_SnapToPixels(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionTarget
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionTarget
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionTarget[] = L"Microsoft.UI.Composition.ICompositionTarget";
/* [object, uuid("45324554-CFC0-5533-AF83-858E88D5B7C0"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionTargetVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTarget * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTarget * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTarget * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTarget * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTarget * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTarget * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Root )(
        __x_Microsoft_CUI_CComposition_CICompositionTarget * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Root )(
        __x_Microsoft_CUI_CComposition_CICompositionTarget * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionTargetVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionTarget
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionTargetVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionTarget_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionTarget_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionTarget_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionTarget_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionTarget_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionTarget_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionTarget_get_Root(This,value) \
    ( (This)->lpVtbl->get_Root(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionTarget_put_Root(This,value) \
    ( (This)->lpVtbl->put_Root(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionTarget;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionTarget_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionTargetFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionTarget
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionTargetFactory[] = L"Microsoft.UI.Composition.ICompositionTargetFactory";
/* [object, uuid("35E826A4-7903-5BCD-AF17-02281DE2D9C0"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionTargetFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTargetFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTargetFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTargetFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTargetFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTargetFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTargetFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionTargetFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionTargetFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionTargetFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionTargetFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionTargetFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionTargetFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionTargetFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionTargetFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionTargetFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionTargetFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionTargetFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionTransform
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionTransform
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionTransform[] = L"Microsoft.UI.Composition.ICompositionTransform";
/* [object, uuid("670E1826-1932-51D0-BBB3-063B4CA94B56"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionTransformVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransform * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransform * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransform * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransform * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransform * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransform * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionTransformVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionTransform
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionTransformVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionTransform_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransform_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransform_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransform_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransform_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransform_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionTransform;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionTransform_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionTransformFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionTransform
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionTransformFactory[] = L"Microsoft.UI.Composition.ICompositionTransformFactory";
/* [object, uuid("78CC7BF2-CDC0-59D2-9C04-8D208DE7EF5E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionTransformFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransformFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransformFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransformFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransformFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransformFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionTransformFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionTransformFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionTransformFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionTransformFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionTransformFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransformFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransformFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransformFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransformFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionTransformFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionTransformFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionTransformFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionViewBox
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionViewBox
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionViewBox[] = L"Microsoft.UI.Composition.ICompositionViewBox";
/* [object, uuid("667E4071-ADDD-5DED-B6C0-09E03A14BE7E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionViewBoxVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionViewBox * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionViewBox * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignmentRatio )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignmentRatio )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Size )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Stretch )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionStretch * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Stretch )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionStretch value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignmentRatio )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignmentRatio )(
        __x_Microsoft_CUI_CComposition_CICompositionViewBox * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionViewBoxVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionViewBox
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionViewBoxVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_get_HorizontalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->get_HorizontalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_put_HorizontalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->put_HorizontalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_get_Size(This,value) \
    ( (This)->lpVtbl->get_Size(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_put_Size(This,value) \
    ( (This)->lpVtbl->put_Size(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_get_Stretch(This,value) \
    ( (This)->lpVtbl->get_Stretch(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_put_Stretch(This,value) \
    ( (This)->lpVtbl->put_Stretch(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_get_VerticalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->get_VerticalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionViewBox_put_VerticalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->put_VerticalAlignmentRatio(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionViewBox;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionViewBox_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionVirtualDrawingSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionVirtualDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionVirtualDrawingSurface[] = L"Microsoft.UI.Composition.ICompositionVirtualDrawingSurface";
/* [object, uuid("D741B99D-E248-5BA7-B728-8BEEA53FE28E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Trim )(
        __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface * This,
        /* [in] */UINT32 __rectsSize,
        /* [size_is(__rectsSize), in] */__x_ABI_CWindows_CGraphics_CRectInt32 * rects
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_Trim(This,__rectsSize,rects) \
    ( (This)->lpVtbl->Trim(This,__rectsSize,rects) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionVirtualDrawingSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionVirtualDrawingSurfaceFactory[] = L"Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactory";
/* [object, uuid("85895891-3F06-52E2-B5EA-D1FB595F6574"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionVirtualDrawingSurfaceFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositionVisualSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CompositionVisualSurface
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositionVisualSurface[] = L"Microsoft.UI.Composition.ICompositionVisualSurface";
/* [object, uuid("49E3624B-4D2E-53E7-9E02-F64831681134"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositionVisualSurfaceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SourceVisual )(
        __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_SourceVisual )(
        __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SourceOffset )(
        __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_SourceOffset )(
        __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SourceSize )(
        __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_SourceSize )(
        __x_Microsoft_CUI_CComposition_CICompositionVisualSurface * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositionVisualSurfaceVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositionVisualSurface
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositionVisualSurfaceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_get_SourceVisual(This,value) \
    ( (This)->lpVtbl->get_SourceVisual(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_put_SourceVisual(This,value) \
    ( (This)->lpVtbl->put_SourceVisual(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_get_SourceOffset(This,value) \
    ( (This)->lpVtbl->get_SourceOffset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_put_SourceOffset(This,value) \
    ( (This)->lpVtbl->put_SourceOffset(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_get_SourceSize(This,value) \
    ( (This)->lpVtbl->get_SourceSize(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositionVisualSurface_put_SourceSize(This,value) \
    ( (This)->lpVtbl->put_SourceSize(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositionVisualSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositionVisualSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor[] = L"Microsoft.UI.Composition.ICompositor";
/* [object, uuid("49DABD27-05F5-56C9-AE63-40DF19376C0D"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateColorKeyFrameAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIColorKeyFrameAnimation * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateColorBrush )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionColorBrush * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateColorBrushWithColor )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor color,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionColorBrush * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateContainerVisual )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIContainerVisual * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateCubicBezierEasingFunction )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 controlPoint1,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 controlPoint2,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateEffectFactory )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect * graphicsEffect,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionEffectFactory * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateEffectFactoryWithProperties )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CEffects_CIGraphicsEffect * graphicsEffect,
        /* [in] */__FIIterable_1_HSTRING * animatableProperties,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionEffectFactory * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateExpressionAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIExpressionAnimation * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateExpressionAnimationWithExpression )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */HSTRING expression,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIExpressionAnimation * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateInsetClip )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIInsetClip * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateInsetClipWithInsets )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */FLOAT leftInset,
        /* [in] */FLOAT topInset,
        /* [in] */FLOAT rightInset,
        /* [in] */FLOAT bottomInset,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIInsetClip * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateLinearEasingFunction )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CILinearEasingFunction * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreatePropertySet )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionPropertySet * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateQuaternionKeyFrameAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateScalarKeyFrameAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateScopedBatch )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionBatchTypes batchType,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionScopedBatch * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateSpriteVisual )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CISpriteVisual * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateSurfaceBrush )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateSurfaceBrushWithSurface )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionSurface * surface,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionSurfaceBrush * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateTargetForCurrentView )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionTarget * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateVector2KeyFrameAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateVector3KeyFrameAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateVector4KeyFrameAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetCommitBatch )(
        __x_Microsoft_CUI_CComposition_CICompositor * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionBatchTypes batchType,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionCommitBatch * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositorVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositor
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositorVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositor_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositor_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositor_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositor_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateColorKeyFrameAnimation(This,result) \
    ( (This)->lpVtbl->CreateColorKeyFrameAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateColorBrush(This,result) \
    ( (This)->lpVtbl->CreateColorBrush(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateColorBrushWithColor(This,color,result) \
    ( (This)->lpVtbl->CreateColorBrushWithColor(This,color,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateContainerVisual(This,result) \
    ( (This)->lpVtbl->CreateContainerVisual(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateCubicBezierEasingFunction(This,controlPoint1,controlPoint2,result) \
    ( (This)->lpVtbl->CreateCubicBezierEasingFunction(This,controlPoint1,controlPoint2,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateEffectFactory(This,graphicsEffect,result) \
    ( (This)->lpVtbl->CreateEffectFactory(This,graphicsEffect,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateEffectFactoryWithProperties(This,graphicsEffect,animatableProperties,result) \
    ( (This)->lpVtbl->CreateEffectFactoryWithProperties(This,graphicsEffect,animatableProperties,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateExpressionAnimation(This,result) \
    ( (This)->lpVtbl->CreateExpressionAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateExpressionAnimationWithExpression(This,expression,result) \
    ( (This)->lpVtbl->CreateExpressionAnimationWithExpression(This,expression,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateInsetClip(This,result) \
    ( (This)->lpVtbl->CreateInsetClip(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateInsetClipWithInsets(This,leftInset,topInset,rightInset,bottomInset,result) \
    ( (This)->lpVtbl->CreateInsetClipWithInsets(This,leftInset,topInset,rightInset,bottomInset,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateLinearEasingFunction(This,result) \
    ( (This)->lpVtbl->CreateLinearEasingFunction(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreatePropertySet(This,result) \
    ( (This)->lpVtbl->CreatePropertySet(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateQuaternionKeyFrameAnimation(This,result) \
    ( (This)->lpVtbl->CreateQuaternionKeyFrameAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateScalarKeyFrameAnimation(This,result) \
    ( (This)->lpVtbl->CreateScalarKeyFrameAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateScopedBatch(This,batchType,result) \
    ( (This)->lpVtbl->CreateScopedBatch(This,batchType,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateSpriteVisual(This,result) \
    ( (This)->lpVtbl->CreateSpriteVisual(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateSurfaceBrush(This,result) \
    ( (This)->lpVtbl->CreateSurfaceBrush(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateSurfaceBrushWithSurface(This,surface,result) \
    ( (This)->lpVtbl->CreateSurfaceBrushWithSurface(This,surface,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateTargetForCurrentView(This,result) \
    ( (This)->lpVtbl->CreateTargetForCurrentView(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateVector2KeyFrameAnimation(This,result) \
    ( (This)->lpVtbl->CreateVector2KeyFrameAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateVector3KeyFrameAnimation(This,result) \
    ( (This)->lpVtbl->CreateVector3KeyFrameAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_CreateVector4KeyFrameAnimation(This,result) \
    ( (This)->lpVtbl->CreateVector4KeyFrameAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor_GetCommitBatch(This,batchType,result) \
    ( (This)->lpVtbl->GetCommitBatch(This,batchType,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor2[] = L"Microsoft.UI.Composition.ICompositor2";
/* [object, uuid("A9FFEDAD-3982-576D-A38A-C888FF605819"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositor2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateAmbientLight )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIAmbientLight * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateAnimationGroup )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionAnimationGroup * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateBackdropBrush )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBackdropBrush * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateDistantLight )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIDistantLight * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateDropShadow )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIDropShadow * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateImplicitAnimationCollection )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateLayerVisual )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CILayerVisual * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateMaskBrush )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionMaskBrush * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateNineGridBrush )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionNineGridBrush * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreatePointLight )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIPointLight * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateSpotLight )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CISpotLight * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateStepEasingFunction )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIStepEasingFunction * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateStepEasingFunctionWithStepCount )(
        __x_Microsoft_CUI_CComposition_CICompositor2 * This,
        /* [in] */INT32 stepCount,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIStepEasingFunction * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositor2Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositor2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositor2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositor2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateAmbientLight(This,result) \
    ( (This)->lpVtbl->CreateAmbientLight(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateAnimationGroup(This,result) \
    ( (This)->lpVtbl->CreateAnimationGroup(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateBackdropBrush(This,result) \
    ( (This)->lpVtbl->CreateBackdropBrush(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateDistantLight(This,result) \
    ( (This)->lpVtbl->CreateDistantLight(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateDropShadow(This,result) \
    ( (This)->lpVtbl->CreateDropShadow(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateImplicitAnimationCollection(This,result) \
    ( (This)->lpVtbl->CreateImplicitAnimationCollection(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateLayerVisual(This,result) \
    ( (This)->lpVtbl->CreateLayerVisual(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateMaskBrush(This,result) \
    ( (This)->lpVtbl->CreateMaskBrush(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateNineGridBrush(This,result) \
    ( (This)->lpVtbl->CreateNineGridBrush(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreatePointLight(This,result) \
    ( (This)->lpVtbl->CreatePointLight(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateSpotLight(This,result) \
    ( (This)->lpVtbl->CreateSpotLight(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateStepEasingFunction(This,result) \
    ( (This)->lpVtbl->CreateStepEasingFunction(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor2_CreateStepEasingFunctionWithStepCount(This,stepCount,result) \
    ( (This)->lpVtbl->CreateStepEasingFunctionWithStepCount(This,stepCount,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor3[] = L"Microsoft.UI.Composition.ICompositor3";
/* [object, uuid("FAD31F5A-211B-52F3-8BA9-ABBA90830608"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositor3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateHostBackdropBrush )(
        __x_Microsoft_CUI_CComposition_CICompositor3 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBackdropBrush * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositor3Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositor3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositor3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositor3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositor3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositor3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositor3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositor3_CreateHostBackdropBrush(This,result) \
    ( (This)->lpVtbl->CreateHostBackdropBrush(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor4
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor4[] = L"Microsoft.UI.Composition.ICompositor4";
/* [object, uuid("EE444BCA-735C-5CF2-B79D-A6DD46C16160"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositor4Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor4 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor4 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor4 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor4 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor4 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor4 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateColorGradientStop )(
        __x_Microsoft_CUI_CComposition_CICompositor4 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateColorGradientStopWithOffsetAndColor )(
        __x_Microsoft_CUI_CComposition_CICompositor4 * This,
        /* [in] */FLOAT offset,
        /* [in] */__x_ABI_CWindows_CUI_CColor color,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionColorGradientStop * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateLinearGradientBrush )(
        __x_Microsoft_CUI_CComposition_CICompositor4 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionLinearGradientBrush * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateSpringScalarAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor4 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateSpringVector2Animation )(
        __x_Microsoft_CUI_CComposition_CICompositor4 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateSpringVector3Animation )(
        __x_Microsoft_CUI_CComposition_CICompositor4 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositor4Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositor4
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositor4Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositor4_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_CreateColorGradientStop(This,result) \
    ( (This)->lpVtbl->CreateColorGradientStop(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_CreateColorGradientStopWithOffsetAndColor(This,offset,color,result) \
    ( (This)->lpVtbl->CreateColorGradientStopWithOffsetAndColor(This,offset,color,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_CreateLinearGradientBrush(This,result) \
    ( (This)->lpVtbl->CreateLinearGradientBrush(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_CreateSpringScalarAnimation(This,result) \
    ( (This)->lpVtbl->CreateSpringScalarAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_CreateSpringVector2Animation(This,result) \
    ( (This)->lpVtbl->CreateSpringVector2Animation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor4_CreateSpringVector3Animation(This,result) \
    ( (This)->lpVtbl->CreateSpringVector3Animation(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor4;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor4_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor5
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor5[] = L"Microsoft.UI.Composition.ICompositor5";
/* [object, uuid("BB52D644-A030-5C19-B883-577DED739AE7"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositor5Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor5 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor5 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor5 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor5 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor5 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor5 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Comment )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Comment )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_GlobalPlaybackRate )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_GlobalPlaybackRate )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [in] */FLOAT value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateBounceScalarAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIBounceScalarNaturalMotionAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateBounceVector2Animation )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIBounceVector2NaturalMotionAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateBounceVector3Animation )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIBounceVector3NaturalMotionAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateContainerShape )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionContainerShape * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateEllipseGeometry )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionEllipseGeometry * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateLineGeometry )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionLineGeometry * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreatePathGeometry )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionPathGeometry * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreatePathGeometryWithPath )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionPath * path,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionPathGeometry * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreatePathKeyFrameAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateRectangleGeometry )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionRectangleGeometry * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateRoundedRectangleGeometry )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionRoundedRectangleGeometry * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateShapeVisual )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIShapeVisual * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateSpriteShape )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionSpriteShape * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateSpriteShapeWithGeometry )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionGeometry * geometry,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionSpriteShape * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateViewBox )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionViewBox * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RequestCommitAsync )(
        __x_Microsoft_CUI_CComposition_CICompositor5 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CIAsyncAction * * operation
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositor5Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositor5
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositor5Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositor5_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_get_Comment(This,value) \
    ( (This)->lpVtbl->get_Comment(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_put_Comment(This,value) \
    ( (This)->lpVtbl->put_Comment(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_get_GlobalPlaybackRate(This,value) \
    ( (This)->lpVtbl->get_GlobalPlaybackRate(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_put_GlobalPlaybackRate(This,value) \
    ( (This)->lpVtbl->put_GlobalPlaybackRate(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateBounceScalarAnimation(This,result) \
    ( (This)->lpVtbl->CreateBounceScalarAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateBounceVector2Animation(This,result) \
    ( (This)->lpVtbl->CreateBounceVector2Animation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateBounceVector3Animation(This,result) \
    ( (This)->lpVtbl->CreateBounceVector3Animation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateContainerShape(This,result) \
    ( (This)->lpVtbl->CreateContainerShape(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateEllipseGeometry(This,result) \
    ( (This)->lpVtbl->CreateEllipseGeometry(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateLineGeometry(This,result) \
    ( (This)->lpVtbl->CreateLineGeometry(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreatePathGeometry(This,result) \
    ( (This)->lpVtbl->CreatePathGeometry(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreatePathGeometryWithPath(This,path,result) \
    ( (This)->lpVtbl->CreatePathGeometryWithPath(This,path,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreatePathKeyFrameAnimation(This,result) \
    ( (This)->lpVtbl->CreatePathKeyFrameAnimation(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateRectangleGeometry(This,result) \
    ( (This)->lpVtbl->CreateRectangleGeometry(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateRoundedRectangleGeometry(This,result) \
    ( (This)->lpVtbl->CreateRoundedRectangleGeometry(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateShapeVisual(This,result) \
    ( (This)->lpVtbl->CreateShapeVisual(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateSpriteShape(This,result) \
    ( (This)->lpVtbl->CreateSpriteShape(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateSpriteShapeWithGeometry(This,geometry,result) \
    ( (This)->lpVtbl->CreateSpriteShapeWithGeometry(This,geometry,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_CreateViewBox(This,result) \
    ( (This)->lpVtbl->CreateViewBox(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor5_RequestCommitAsync(This,operation) \
    ( (This)->lpVtbl->RequestCommitAsync(This,operation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor5;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor5_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositor6
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositor6[] = L"Microsoft.UI.Composition.ICompositor6";
/* [object, uuid("5FD20200-C188-5737-B567-5E61741AF19C"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositor6Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor6 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor6 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor6 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor6 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor6 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositor6 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateGeometricClip )(
        __x_Microsoft_CUI_CComposition_CICompositor6 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionGeometricClip * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateGeometricClipWithGeometry )(
        __x_Microsoft_CUI_CComposition_CICompositor6 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionGeometry * geometry,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionGeometricClip * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateRedirectVisual )(
        __x_Microsoft_CUI_CComposition_CICompositor6 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIRedirectVisual * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateRedirectVisualWithSourceVisual )(
        __x_Microsoft_CUI_CComposition_CICompositor6 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * source,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIRedirectVisual * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateBooleanKeyFrameAnimation )(
        __x_Microsoft_CUI_CComposition_CICompositor6 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIBooleanKeyFrameAnimation * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositor6Vtbl;

interface __x_Microsoft_CUI_CComposition_CICompositor6
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositor6Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositor6_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_CreateGeometricClip(This,result) \
    ( (This)->lpVtbl->CreateGeometricClip(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_CreateGeometricClipWithGeometry(This,geometry,result) \
    ( (This)->lpVtbl->CreateGeometricClipWithGeometry(This,geometry,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_CreateRedirectVisual(This,result) \
    ( (This)->lpVtbl->CreateRedirectVisual(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_CreateRedirectVisualWithSourceVisual(This,source,result) \
    ( (This)->lpVtbl->CreateRedirectVisualWithSourceVisual(This,source,result) )

#define __x_Microsoft_CUI_CComposition_CICompositor6_CreateBooleanKeyFrameAnimation(This,result) \
    ( (This)->lpVtbl->CreateBooleanKeyFrameAnimation(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositor6;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositor6_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorStatics
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorStatics[] = L"Microsoft.UI.Composition.ICompositorStatics";
/* [object, uuid("6BAA947A-F103-55C6-91AD-3D275BEA65C4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositorStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxGlobalPlaybackRate )(
        __x_Microsoft_CUI_CComposition_CICompositorStatics * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinGlobalPlaybackRate )(
        __x_Microsoft_CUI_CComposition_CICompositorStatics * This,
        /* [retval, out] */FLOAT * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositorStaticsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositorStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositorStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositorStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositorStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositorStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositorStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositorStatics_get_MaxGlobalPlaybackRate(This,value) \
    ( (This)->lpVtbl->get_MaxGlobalPlaybackRate(This,value) )

#define __x_Microsoft_CUI_CComposition_CICompositorStatics_get_MinGlobalPlaybackRate(This,value) \
    ( (This)->lpVtbl->get_MinGlobalPlaybackRate(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorStatics;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorStatics_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorWithCompositionIslands
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorWithCompositionIslands[] = L"Microsoft.UI.Composition.ICompositorWithCompositionIslands";
/* [object, uuid("1680AE63-6810-512C-8AA5-069FDE9AF595"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslandsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateVisualIslandSite )(
        __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisualIslandSite * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateVisualTreeIsland )(
        __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisualTreeIsland * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslandsVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslandsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_CreateVisualIslandSite(This,result) \
    ( (This)->lpVtbl->CreateVisualIslandSite(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_CreateVisualTreeIsland(This,result) \
    ( (This)->lpVtbl->CreateVisualTreeIsland(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorWithCompositionIslands_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorWithProjectedShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorWithProjectedShadow[] = L"Microsoft.UI.Composition.ICompositorWithProjectedShadow";
/* [object, uuid("60AB2BF2-B95C-5944-8B36-C9773B9F5256"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadowVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateProjectedShadowCaster )(
        __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowCaster * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateProjectedShadow )(
        __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadow * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateProjectedShadowReceiver )(
        __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionProjectedShadowReceiver * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadowVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadowVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_CreateProjectedShadowCaster(This,result) \
    ( (This)->lpVtbl->CreateProjectedShadowCaster(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_CreateProjectedShadow(This,result) \
    ( (This)->lpVtbl->CreateProjectedShadow(This,result) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_CreateProjectedShadowReceiver(This,result) \
    ( (This)->lpVtbl->CreateProjectedShadowReceiver(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorWithProjectedShadow_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorWithRadialGradient
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorWithRadialGradient[] = L"Microsoft.UI.Composition.ICompositorWithRadialGradient";
/* [object, uuid("FA4F8F7D-5CC7-5C9C-883B-FE878A2F3E30"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradientVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateRadialGradientBrush )(
        __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionRadialGradientBrush * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradientVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradientVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_CreateRadialGradientBrush(This,result) \
    ( (This)->lpVtbl->CreateRadialGradientBrush(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorWithRadialGradient_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICompositorWithVisualSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Compositor
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICompositorWithVisualSurface[] = L"Microsoft.UI.Composition.ICompositorWithVisualSurface";
/* [object, uuid("5FCFE24A-690A-5378-ACEE-561E84BFB982"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurfaceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateVisualSurface )(
        __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionVisualSurface * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurfaceVtbl;

interface __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurfaceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_CreateVisualSurface(This,result) \
    ( (This)->lpVtbl->CreateVisualSurface(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICompositorWithVisualSurface_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IContainerVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ContainerVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IContainerVisual[] = L"Microsoft.UI.Composition.IContainerVisual";
/* [object, uuid("C70DBCE1-2C2F-5D8E-91A4-AAE1121E6186"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIContainerVisualVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisual * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisual * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisual * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisual * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisual * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisual * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Children )(
        __x_Microsoft_CUI_CComposition_CIContainerVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisualCollection * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIContainerVisualVtbl;

interface __x_Microsoft_CUI_CComposition_CIContainerVisual
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIContainerVisualVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIContainerVisual_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisual_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisual_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisual_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisual_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisual_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisual_get_Children(This,value) \
    ( (This)->lpVtbl->get_Children(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIContainerVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIContainerVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IContainerVisualFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ContainerVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IContainerVisualFactory[] = L"Microsoft.UI.Composition.IContainerVisualFactory";
/* [object, uuid("3FA45EEB-C6DD-5AFD-971D-EAAF6245E716"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIContainerVisualFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisualFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisualFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisualFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisualFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisualFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIContainerVisualFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIContainerVisualFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CIContainerVisualFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIContainerVisualFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIContainerVisualFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisualFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisualFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisualFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisualFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIContainerVisualFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIContainerVisualFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIContainerVisualFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ICubicBezierEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.CubicBezierEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ICubicBezierEasingFunction[] = L"Microsoft.UI.Composition.ICubicBezierEasingFunction";
/* [object, uuid("35E7FCDE-F9CE-590A-8B88-64A82A6B4B48"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunctionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ControlPoint1 )(
        __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ControlPoint2 )(
        __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunctionVtbl;

interface __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunctionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_get_ControlPoint1(This,value) \
    ( (This)->lpVtbl->get_ControlPoint1(This,value) )

#define __x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_get_ControlPoint2(This,value) \
    ( (This)->lpVtbl->get_ControlPoint2(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CICubicBezierEasingFunction_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IDistantLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.DistantLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IDistantLight[] = L"Microsoft.UI.Composition.IDistantLight";
/* [object, uuid("125EF556-56EE-5C60-B944-571928CA03F5"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIDistantLightVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Color )(
        __x_Microsoft_CUI_CComposition_CIDistantLight * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Color )(
        __x_Microsoft_CUI_CComposition_CIDistantLight * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CoordinateSpace )(
        __x_Microsoft_CUI_CComposition_CIDistantLight * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CoordinateSpace )(
        __x_Microsoft_CUI_CComposition_CIDistantLight * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Direction )(
        __x_Microsoft_CUI_CComposition_CIDistantLight * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Direction )(
        __x_Microsoft_CUI_CComposition_CIDistantLight * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIDistantLightVtbl;

interface __x_Microsoft_CUI_CComposition_CIDistantLight
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIDistantLightVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIDistantLight_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_get_Color(This,value) \
    ( (This)->lpVtbl->get_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_put_Color(This,value) \
    ( (This)->lpVtbl->put_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_get_CoordinateSpace(This,value) \
    ( (This)->lpVtbl->get_CoordinateSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_put_CoordinateSpace(This,value) \
    ( (This)->lpVtbl->put_CoordinateSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_get_Direction(This,value) \
    ( (This)->lpVtbl->get_Direction(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight_put_Direction(This,value) \
    ( (This)->lpVtbl->put_Direction(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIDistantLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIDistantLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IDistantLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.DistantLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IDistantLight2[] = L"Microsoft.UI.Composition.IDistantLight2";
/* [object, uuid("9F97BFEC-B6B9-51EE-8480-B546468C748F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIDistantLight2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDistantLight2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Intensity )(
        __x_Microsoft_CUI_CComposition_CIDistantLight2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Intensity )(
        __x_Microsoft_CUI_CComposition_CIDistantLight2 * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIDistantLight2Vtbl;

interface __x_Microsoft_CUI_CComposition_CIDistantLight2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIDistantLight2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIDistantLight2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight2_get_Intensity(This,value) \
    ( (This)->lpVtbl->get_Intensity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDistantLight2_put_Intensity(This,value) \
    ( (This)->lpVtbl->put_Intensity(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIDistantLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIDistantLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IDropShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.DropShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IDropShadow[] = L"Microsoft.UI.Composition.IDropShadow";
/* [object, uuid("977095D2-265F-5F58-9789-CB7F85E98C9E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIDropShadowVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BlurRadius )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BlurRadius )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Color )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Color )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Mask )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Mask )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Opacity )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Opacity )(
        __x_Microsoft_CUI_CComposition_CIDropShadow * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIDropShadowVtbl;

interface __x_Microsoft_CUI_CComposition_CIDropShadow
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIDropShadowVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIDropShadow_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_get_BlurRadius(This,value) \
    ( (This)->lpVtbl->get_BlurRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_put_BlurRadius(This,value) \
    ( (This)->lpVtbl->put_BlurRadius(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_get_Color(This,value) \
    ( (This)->lpVtbl->get_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_put_Color(This,value) \
    ( (This)->lpVtbl->put_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_get_Mask(This,value) \
    ( (This)->lpVtbl->get_Mask(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_put_Mask(This,value) \
    ( (This)->lpVtbl->put_Mask(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_get_Opacity(This,value) \
    ( (This)->lpVtbl->get_Opacity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow_put_Opacity(This,value) \
    ( (This)->lpVtbl->put_Opacity(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIDropShadow;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIDropShadow_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IDropShadow2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.DropShadow
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IDropShadow2[] = L"Microsoft.UI.Composition.IDropShadow2";
/* [object, uuid("CBC7C266-2D33-5711-B3B4-5699410BEF56"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIDropShadow2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIDropShadow2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SourcePolicy )(
        __x_Microsoft_CUI_CComposition_CIDropShadow2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionDropShadowSourcePolicy * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_SourcePolicy )(
        __x_Microsoft_CUI_CComposition_CIDropShadow2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionDropShadowSourcePolicy value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIDropShadow2Vtbl;

interface __x_Microsoft_CUI_CComposition_CIDropShadow2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIDropShadow2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIDropShadow2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow2_get_SourcePolicy(This,value) \
    ( (This)->lpVtbl->get_SourcePolicy(This,value) )

#define __x_Microsoft_CUI_CComposition_CIDropShadow2_put_SourcePolicy(This,value) \
    ( (This)->lpVtbl->put_SourcePolicy(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIDropShadow2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIDropShadow2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IExpressionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ExpressionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IExpressionAnimation[] = L"Microsoft.UI.Composition.IExpressionAnimation";
/* [object, uuid("7FFF5826-1992-56C0-9060-5ADE561A4F2D"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIExpressionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIExpressionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIExpressionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIExpressionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIExpressionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIExpressionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIExpressionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Expression )(
        __x_Microsoft_CUI_CComposition_CIExpressionAnimation * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Expression )(
        __x_Microsoft_CUI_CComposition_CIExpressionAnimation * This,
        /* [in] */HSTRING value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIExpressionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIExpressionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIExpressionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation_get_Expression(This,value) \
    ( (This)->lpVtbl->get_Expression(This,value) )

#define __x_Microsoft_CUI_CComposition_CIExpressionAnimation_put_Expression(This,value) \
    ( (This)->lpVtbl->put_Expression(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIExpressionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIExpressionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IImplicitAnimationCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ImplicitAnimationCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IImplicitAnimationCollection[] = L"Microsoft.UI.Composition.IImplicitAnimationCollection";
/* [object, uuid("C5C0689E-F5AE-5BED-829B-C522CDA39717"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollectionVtbl;

interface __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollectionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIImplicitAnimationCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IInsetClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.InsetClip
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IInsetClip[] = L"Microsoft.UI.Composition.IInsetClip";
/* [object, uuid("F9D99475-7B59-5B28-A1D2-B832DA6988C9"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIInsetClipVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIInsetClip * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIInsetClip * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIInsetClip * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIInsetClip * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIInsetClip * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIInsetClip * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BottomInset )(
        __x_Microsoft_CUI_CComposition_CIInsetClip * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BottomInset )(
        __x_Microsoft_CUI_CComposition_CIInsetClip * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LeftInset )(
        __x_Microsoft_CUI_CComposition_CIInsetClip * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_LeftInset )(
        __x_Microsoft_CUI_CComposition_CIInsetClip * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RightInset )(
        __x_Microsoft_CUI_CComposition_CIInsetClip * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RightInset )(
        __x_Microsoft_CUI_CComposition_CIInsetClip * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TopInset )(
        __x_Microsoft_CUI_CComposition_CIInsetClip * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TopInset )(
        __x_Microsoft_CUI_CComposition_CIInsetClip * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIInsetClipVtbl;

interface __x_Microsoft_CUI_CComposition_CIInsetClip
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIInsetClipVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIInsetClip_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_get_BottomInset(This,value) \
    ( (This)->lpVtbl->get_BottomInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_put_BottomInset(This,value) \
    ( (This)->lpVtbl->put_BottomInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_get_LeftInset(This,value) \
    ( (This)->lpVtbl->get_LeftInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_put_LeftInset(This,value) \
    ( (This)->lpVtbl->put_LeftInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_get_RightInset(This,value) \
    ( (This)->lpVtbl->get_RightInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_put_RightInset(This,value) \
    ( (This)->lpVtbl->put_RightInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_get_TopInset(This,value) \
    ( (This)->lpVtbl->get_TopInset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIInsetClip_put_TopInset(This,value) \
    ( (This)->lpVtbl->put_TopInset(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIInsetClip;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIInsetClip_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IKeyFrameAnimation[] = L"Microsoft.UI.Composition.IKeyFrameAnimation";
/* [object, uuid("5A8F57F0-F059-5B47-B308-C4C80FC71248"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DelayTime )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DelayTime )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Duration )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Duration )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IterationBehavior )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CAnimationIterationBehavior * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IterationBehavior )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CAnimationIterationBehavior value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IterationCount )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [retval, out] */INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IterationCount )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyFrameCount )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [retval, out] */INT32 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StopBehavior )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CAnimationStopBehavior * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StopBehavior )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CAnimationStopBehavior value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertExpressionKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */HSTRING value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertExpressionKeyFrameWithEasingFunction )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */HSTRING value,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEasingFunction * easingFunction
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_get_DelayTime(This,value) \
    ( (This)->lpVtbl->get_DelayTime(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_put_DelayTime(This,value) \
    ( (This)->lpVtbl->put_DelayTime(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_get_Duration(This,value) \
    ( (This)->lpVtbl->get_Duration(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_put_Duration(This,value) \
    ( (This)->lpVtbl->put_Duration(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_get_IterationBehavior(This,value) \
    ( (This)->lpVtbl->get_IterationBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_put_IterationBehavior(This,value) \
    ( (This)->lpVtbl->put_IterationBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_get_IterationCount(This,value) \
    ( (This)->lpVtbl->get_IterationCount(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_put_IterationCount(This,value) \
    ( (This)->lpVtbl->put_IterationCount(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_get_KeyFrameCount(This,value) \
    ( (This)->lpVtbl->get_KeyFrameCount(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_get_StopBehavior(This,value) \
    ( (This)->lpVtbl->get_StopBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_put_StopBehavior(This,value) \
    ( (This)->lpVtbl->put_StopBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_InsertExpressionKeyFrame(This,normalizedProgressKey,value) \
    ( (This)->lpVtbl->InsertExpressionKeyFrame(This,normalizedProgressKey,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_InsertExpressionKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) \
    ( (This)->lpVtbl->InsertExpressionKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IKeyFrameAnimation2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IKeyFrameAnimation2[] = L"Microsoft.UI.Composition.IKeyFrameAnimation2";
/* [object, uuid("414692E5-8A7E-58EA-83E1-25CE475D9300"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Direction )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CAnimationDirection * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Direction )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CAnimationDirection value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2Vtbl;

interface __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_get_Direction(This,value) \
    ( (This)->lpVtbl->get_Direction(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_put_Direction(This,value) \
    ( (This)->lpVtbl->put_Direction(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IKeyFrameAnimation3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IKeyFrameAnimation3[] = L"Microsoft.UI.Composition.IKeyFrameAnimation3";
/* [object, uuid("4F97E180-9BCB-5FC4-ABBE-43AA3BE327E7"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DelayBehavior )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CAnimationDelayBehavior * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DelayBehavior )(
        __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CAnimationDelayBehavior value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3Vtbl;

interface __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_get_DelayBehavior(This,value) \
    ( (This)->lpVtbl->get_DelayBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_put_DelayBehavior(This,value) \
    ( (This)->lpVtbl->put_DelayBehavior(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimation3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IKeyFrameAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IKeyFrameAnimationFactory[] = L"Microsoft.UI.Composition.IKeyFrameAnimationFactory";
/* [object, uuid("7CCCFC87-3BAF-5100-B5F8-2F779F954F19"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIKeyFrameAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ILayerVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.LayerVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ILayerVisual[] = L"Microsoft.UI.Composition.ILayerVisual";
/* [object, uuid("64D05CA1-3BF6-5D4F-98A1-7500F2F23EBE"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CILayerVisualVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Effect )(
        __x_Microsoft_CUI_CComposition_CILayerVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionEffectBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Effect )(
        __x_Microsoft_CUI_CComposition_CILayerVisual * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEffectBrush * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CILayerVisualVtbl;

interface __x_Microsoft_CUI_CComposition_CILayerVisual
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CILayerVisualVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CILayerVisual_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual_get_Effect(This,value) \
    ( (This)->lpVtbl->get_Effect(This,value) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual_put_Effect(This,value) \
    ( (This)->lpVtbl->put_Effect(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CILayerVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CILayerVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ILayerVisual2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.LayerVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ILayerVisual2[] = L"Microsoft.UI.Composition.ILayerVisual2";
/* [object, uuid("9AB2E401-AF45-54DA-9991-DD31273155D2"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CILayerVisual2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILayerVisual2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Shadow )(
        __x_Microsoft_CUI_CComposition_CILayerVisual2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionShadow * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Shadow )(
        __x_Microsoft_CUI_CComposition_CILayerVisual2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionShadow * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CILayerVisual2Vtbl;

interface __x_Microsoft_CUI_CComposition_CILayerVisual2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CILayerVisual2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CILayerVisual2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual2_get_Shadow(This,value) \
    ( (This)->lpVtbl->get_Shadow(This,value) )

#define __x_Microsoft_CUI_CComposition_CILayerVisual2_put_Shadow(This,value) \
    ( (This)->lpVtbl->put_Shadow(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CILayerVisual2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CILayerVisual2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ILinearEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.LinearEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ILinearEasingFunction[] = L"Microsoft.UI.Composition.ILinearEasingFunction";
/* [object, uuid("79BFEEF6-70C7-50A6-BB3A-0E9636148695"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CILinearEasingFunctionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CILinearEasingFunction * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILinearEasingFunction * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILinearEasingFunction * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILinearEasingFunction * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILinearEasingFunction * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CILinearEasingFunction * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CILinearEasingFunctionVtbl;

interface __x_Microsoft_CUI_CComposition_CILinearEasingFunction
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CILinearEasingFunctionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CILinearEasingFunction_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CILinearEasingFunction_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CILinearEasingFunction_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CILinearEasingFunction_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CILinearEasingFunction_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CILinearEasingFunction_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CILinearEasingFunction;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CILinearEasingFunction_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.INaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_INaturalMotionAnimation[] = L"Microsoft.UI.Composition.INaturalMotionAnimation";
/* [object, uuid("2FF54EBB-A035-50BE-A73C-20014975EE31"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DelayBehavior )(
        __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CAnimationDelayBehavior * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DelayBehavior )(
        __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CAnimationDelayBehavior value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DelayTime )(
        __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DelayTime )(
        __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StopBehavior )(
        __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CAnimationStopBehavior * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StopBehavior )(
        __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CAnimationStopBehavior value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_get_DelayBehavior(This,value) \
    ( (This)->lpVtbl->get_DelayBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_put_DelayBehavior(This,value) \
    ( (This)->lpVtbl->put_DelayBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_get_DelayTime(This,value) \
    ( (This)->lpVtbl->get_DelayTime(This,value) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_put_DelayTime(This,value) \
    ( (This)->lpVtbl->put_DelayTime(This,value) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_get_StopBehavior(This,value) \
    ( (This)->lpVtbl->get_StopBehavior(This,value) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_put_StopBehavior(This,value) \
    ( (This)->lpVtbl->put_StopBehavior(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CINaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CINaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.INaturalMotionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_INaturalMotionAnimationFactory[] = L"Microsoft.UI.Composition.INaturalMotionAnimationFactory";
/* [object, uuid("0411A259-2622-59E2-A59E-1E23D8F83A9F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CINaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPathKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PathKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPathKeyFrameAnimation[] = L"Microsoft.UI.Composition.IPathKeyFrameAnimation";
/* [object, uuid("2B692808-43DA-5118-B66D-904A3EC74FD9"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionPath * path
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrameWithEasingFunction )(
        __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionPath * path,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEasingFunction * easingFunction
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_InsertKeyFrame(This,normalizedProgressKey,path) \
    ( (This)->lpVtbl->InsertKeyFrame(This,normalizedProgressKey,path) )

#define __x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,path,easingFunction) \
    ( (This)->lpVtbl->InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,path,easingFunction) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPathKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPointLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PointLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPointLight[] = L"Microsoft.UI.Composition.IPointLight";
/* [object, uuid("ED5CC102-F0AC-59A8-8678-CE54146E7BE8"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIPointLightVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Color )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Color )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ConstantAttenuation )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ConstantAttenuation )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CoordinateSpace )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CoordinateSpace )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LinearAttenuation )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_LinearAttenuation )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_QuadraticAttenuation )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_QuadraticAttenuation )(
        __x_Microsoft_CUI_CComposition_CIPointLight * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIPointLightVtbl;

interface __x_Microsoft_CUI_CComposition_CIPointLight
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIPointLightVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIPointLight_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_get_Color(This,value) \
    ( (This)->lpVtbl->get_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_put_Color(This,value) \
    ( (This)->lpVtbl->put_Color(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_get_ConstantAttenuation(This,value) \
    ( (This)->lpVtbl->get_ConstantAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_put_ConstantAttenuation(This,value) \
    ( (This)->lpVtbl->put_ConstantAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_get_CoordinateSpace(This,value) \
    ( (This)->lpVtbl->get_CoordinateSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_put_CoordinateSpace(This,value) \
    ( (This)->lpVtbl->put_CoordinateSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_get_LinearAttenuation(This,value) \
    ( (This)->lpVtbl->get_LinearAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_put_LinearAttenuation(This,value) \
    ( (This)->lpVtbl->put_LinearAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_get_QuadraticAttenuation(This,value) \
    ( (This)->lpVtbl->get_QuadraticAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight_put_QuadraticAttenuation(This,value) \
    ( (This)->lpVtbl->put_QuadraticAttenuation(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPointLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPointLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPointLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PointLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPointLight2[] = L"Microsoft.UI.Composition.IPointLight2";
/* [object, uuid("DE466104-59D9-57D2-92B5-554D6D82EDF2"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIPointLight2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Intensity )(
        __x_Microsoft_CUI_CComposition_CIPointLight2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Intensity )(
        __x_Microsoft_CUI_CComposition_CIPointLight2 * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIPointLight2Vtbl;

interface __x_Microsoft_CUI_CComposition_CIPointLight2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIPointLight2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIPointLight2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIPointLight2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIPointLight2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIPointLight2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIPointLight2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIPointLight2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIPointLight2_get_Intensity(This,value) \
    ( (This)->lpVtbl->get_Intensity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight2_put_Intensity(This,value) \
    ( (This)->lpVtbl->put_Intensity(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPointLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPointLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPointLight3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PointLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPointLight3[] = L"Microsoft.UI.Composition.IPointLight3";
/* [object, uuid("BE30E87A-8CBB-5A56-8D24-2CD865F383B3"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIPointLight3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPointLight3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinAttenuationCutoff )(
        __x_Microsoft_CUI_CComposition_CIPointLight3 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MinAttenuationCutoff )(
        __x_Microsoft_CUI_CComposition_CIPointLight3 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxAttenuationCutoff )(
        __x_Microsoft_CUI_CComposition_CIPointLight3 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MaxAttenuationCutoff )(
        __x_Microsoft_CUI_CComposition_CIPointLight3 * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIPointLight3Vtbl;

interface __x_Microsoft_CUI_CComposition_CIPointLight3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIPointLight3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIPointLight3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_get_MinAttenuationCutoff(This,value) \
    ( (This)->lpVtbl->get_MinAttenuationCutoff(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_put_MinAttenuationCutoff(This,value) \
    ( (This)->lpVtbl->put_MinAttenuationCutoff(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_get_MaxAttenuationCutoff(This,value) \
    ( (This)->lpVtbl->get_MaxAttenuationCutoff(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPointLight3_put_MaxAttenuationCutoff(This,value) \
    ( (This)->lpVtbl->put_MaxAttenuationCutoff(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPointLight3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPointLight3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IPopupIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.PopupIslandSite
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIPopupIslandSite_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIPopupIslandSite_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IPopupIslandSite[] = L"Microsoft.UI.Composition.IPopupIslandSite";
/* [object, uuid("5CFE6179-D033-5FA2-B363-D4A80C37002E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIPopupIslandSiteVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PlacementAnchor )(
        __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionAnchor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_PlacementAnchor )(
        __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnchor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PlacementAnchorPoint )(
        __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_PlacementAnchorPoint )(
        __x_Microsoft_CUI_CComposition_CIPopupIslandSite * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIPopupIslandSiteVtbl;

interface __x_Microsoft_CUI_CComposition_CIPopupIslandSite
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIPopupIslandSiteVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_get_PlacementAnchor(This,value) \
    ( (This)->lpVtbl->get_PlacementAnchor(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_put_PlacementAnchor(This,value) \
    ( (This)->lpVtbl->put_PlacementAnchor(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_get_PlacementAnchorPoint(This,value) \
    ( (This)->lpVtbl->get_PlacementAnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CIPopupIslandSite_put_PlacementAnchorPoint(This,value) \
    ( (This)->lpVtbl->put_PlacementAnchorPoint(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIPopupIslandSite;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIPopupIslandSite_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IQuaternionKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.QuaternionKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IQuaternionKeyFrameAnimation[] = L"Microsoft.UI.Composition.IQuaternionKeyFrameAnimation";
/* [object, uuid("E72D1026-DA3B-5D56-858B-3A9AA3C57D70"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrameWithEasingFunction )(
        __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEasingFunction * easingFunction
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_InsertKeyFrame(This,normalizedProgressKey,value) \
    ( (This)->lpVtbl->InsertKeyFrame(This,normalizedProgressKey,value) )

#define __x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) \
    ( (This)->lpVtbl->InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIQuaternionKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IRedirectVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.RedirectVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IRedirectVisual[] = L"Microsoft.UI.Composition.IRedirectVisual";
/* [object, uuid("6C10081A-CDE1-50D9-AC05-78D6845B656F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIRedirectVisualVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRedirectVisual * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRedirectVisual * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRedirectVisual * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRedirectVisual * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRedirectVisual * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRedirectVisual * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_Microsoft_CUI_CComposition_CIRedirectVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_Microsoft_CUI_CComposition_CIRedirectVisual * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIRedirectVisualVtbl;

interface __x_Microsoft_CUI_CComposition_CIRedirectVisual
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIRedirectVisualVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIRedirectVisual_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIRedirectVisual_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIRedirectVisual_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIRedirectVisual_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIRedirectVisual_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIRedirectVisual_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIRedirectVisual_get_Source(This,value) \
    ( (This)->lpVtbl->get_Source(This,value) )

#define __x_Microsoft_CUI_CComposition_CIRedirectVisual_put_Source(This,value) \
    ( (This)->lpVtbl->put_Source(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIRedirectVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIRedirectVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IRenderingDeviceReplacedEventArgs[] = L"Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs";
/* [object, uuid("FE5B97C7-F656-56D6-A0CD-3E1227E4DD44"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_GraphicsDevice )(
        __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionGraphicsDevice * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl;

interface __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_get_GraphicsDevice(This,value) \
    ( (This)->lpVtbl->get_GraphicsDevice(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIRenderingDeviceReplacedEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IScalarKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ScalarKeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IScalarKeyFrameAnimation[] = L"Microsoft.UI.Composition.IScalarKeyFrameAnimation";
/* [object, uuid("5A5F8ABE-D129-5B25-8AFF-8180FD9BFB22"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */FLOAT value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrameWithEasingFunction )(
        __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */FLOAT value,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEasingFunction * easingFunction
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_InsertKeyFrame(This,normalizedProgressKey,value) \
    ( (This)->lpVtbl->InsertKeyFrame(This,normalizedProgressKey,value) )

#define __x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) \
    ( (This)->lpVtbl->InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIScalarKeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ScalarNaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.IScalarNaturalMotionAnimation";
/* [object, uuid("903224B0-2DBE-56EB-B9EA-33D2E3113181"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FinalValue )(
        __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
        /* [retval, out] */__FIReference_1_float * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FinalValue )(
        __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
        /* [in] */__FIReference_1_float * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InitialValue )(
        __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
        /* [retval, out] */__FIReference_1_float * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InitialValue )(
        __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
        /* [in] */__FIReference_1_float * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InitialVelocity )(
        __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InitialVelocity )(
        __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_get_FinalValue(This,value) \
    ( (This)->lpVtbl->get_FinalValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_put_FinalValue(This,value) \
    ( (This)->lpVtbl->put_FinalValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_get_InitialValue(This,value) \
    ( (This)->lpVtbl->get_InitialValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_put_InitialValue(This,value) \
    ( (This)->lpVtbl->put_InitialValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_get_InitialVelocity(This,value) \
    ( (This)->lpVtbl->get_InitialVelocity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_put_InitialVelocity(This,value) \
    ( (This)->lpVtbl->put_InitialVelocity(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ScalarNaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IScalarNaturalMotionAnimationFactory[] = L"Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory";
/* [object, uuid("14F8A9AB-976C-5E6F-890B-9A74D07FA39F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIScalarNaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IShapeVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.ShapeVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IShapeVisual[] = L"Microsoft.UI.Composition.IShapeVisual";
/* [object, uuid("A911C80B-A5A5-5ACA-B8FF-C43F08F06143"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIShapeVisualVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIShapeVisual * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIShapeVisual * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIShapeVisual * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIShapeVisual * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIShapeVisual * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIShapeVisual * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Shapes )(
        __x_Microsoft_CUI_CComposition_CIShapeVisual * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CComposition__CCompositionShape * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ViewBox )(
        __x_Microsoft_CUI_CComposition_CIShapeVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionViewBox * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ViewBox )(
        __x_Microsoft_CUI_CComposition_CIShapeVisual * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionViewBox * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIShapeVisualVtbl;

interface __x_Microsoft_CUI_CComposition_CIShapeVisual
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIShapeVisualVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIShapeVisual_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIShapeVisual_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIShapeVisual_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIShapeVisual_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIShapeVisual_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIShapeVisual_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIShapeVisual_get_Shapes(This,value) \
    ( (This)->lpVtbl->get_Shapes(This,value) )

#define __x_Microsoft_CUI_CComposition_CIShapeVisual_get_ViewBox(This,value) \
    ( (This)->lpVtbl->get_ViewBox(This,value) )

#define __x_Microsoft_CUI_CComposition_CIShapeVisual_put_ViewBox(This,value) \
    ( (This)->lpVtbl->put_ViewBox(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIShapeVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIShapeVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpotLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpotLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpotLight[] = L"Microsoft.UI.Composition.ISpotLight";
/* [object, uuid("5935496A-0586-5F77-BD03-D5A6BB9E8FA0"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISpotLightVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ConstantAttenuation )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ConstantAttenuation )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CoordinateSpace )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CoordinateSpace )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Direction )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Direction )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InnerConeAngle )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InnerConeAngle )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InnerConeAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InnerConeAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InnerConeColor )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InnerConeColor )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LinearAttenuation )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_LinearAttenuation )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OuterConeAngle )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OuterConeAngle )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OuterConeAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OuterConeAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OuterConeColor )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CColor * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OuterConeColor )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */__x_ABI_CWindows_CUI_CColor value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_QuadraticAttenuation )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_QuadraticAttenuation )(
        __x_Microsoft_CUI_CComposition_CISpotLight * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISpotLightVtbl;

interface __x_Microsoft_CUI_CComposition_CISpotLight
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISpotLightVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISpotLight_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_ConstantAttenuation(This,value) \
    ( (This)->lpVtbl->get_ConstantAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_ConstantAttenuation(This,value) \
    ( (This)->lpVtbl->put_ConstantAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_CoordinateSpace(This,value) \
    ( (This)->lpVtbl->get_CoordinateSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_CoordinateSpace(This,value) \
    ( (This)->lpVtbl->put_CoordinateSpace(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_Direction(This,value) \
    ( (This)->lpVtbl->get_Direction(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_Direction(This,value) \
    ( (This)->lpVtbl->put_Direction(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_InnerConeAngle(This,value) \
    ( (This)->lpVtbl->get_InnerConeAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_InnerConeAngle(This,value) \
    ( (This)->lpVtbl->put_InnerConeAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_InnerConeAngleInDegrees(This,value) \
    ( (This)->lpVtbl->get_InnerConeAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_InnerConeAngleInDegrees(This,value) \
    ( (This)->lpVtbl->put_InnerConeAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_InnerConeColor(This,value) \
    ( (This)->lpVtbl->get_InnerConeColor(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_InnerConeColor(This,value) \
    ( (This)->lpVtbl->put_InnerConeColor(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_LinearAttenuation(This,value) \
    ( (This)->lpVtbl->get_LinearAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_LinearAttenuation(This,value) \
    ( (This)->lpVtbl->put_LinearAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_OuterConeAngle(This,value) \
    ( (This)->lpVtbl->get_OuterConeAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_OuterConeAngle(This,value) \
    ( (This)->lpVtbl->put_OuterConeAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_OuterConeAngleInDegrees(This,value) \
    ( (This)->lpVtbl->get_OuterConeAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_OuterConeAngleInDegrees(This,value) \
    ( (This)->lpVtbl->put_OuterConeAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_OuterConeColor(This,value) \
    ( (This)->lpVtbl->get_OuterConeColor(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_OuterConeColor(This,value) \
    ( (This)->lpVtbl->put_OuterConeColor(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_get_QuadraticAttenuation(This,value) \
    ( (This)->lpVtbl->get_QuadraticAttenuation(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight_put_QuadraticAttenuation(This,value) \
    ( (This)->lpVtbl->put_QuadraticAttenuation(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpotLight;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpotLight_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpotLight2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpotLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpotLight2[] = L"Microsoft.UI.Composition.ISpotLight2";
/* [object, uuid("49DD3B50-EC5C-5B6C-BAA1-8504B13E3A67"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISpotLight2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InnerConeIntensity )(
        __x_Microsoft_CUI_CComposition_CISpotLight2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InnerConeIntensity )(
        __x_Microsoft_CUI_CComposition_CISpotLight2 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OuterConeIntensity )(
        __x_Microsoft_CUI_CComposition_CISpotLight2 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OuterConeIntensity )(
        __x_Microsoft_CUI_CComposition_CISpotLight2 * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISpotLight2Vtbl;

interface __x_Microsoft_CUI_CComposition_CISpotLight2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISpotLight2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISpotLight2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_get_InnerConeIntensity(This,value) \
    ( (This)->lpVtbl->get_InnerConeIntensity(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_put_InnerConeIntensity(This,value) \
    ( (This)->lpVtbl->put_InnerConeIntensity(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_get_OuterConeIntensity(This,value) \
    ( (This)->lpVtbl->get_OuterConeIntensity(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight2_put_OuterConeIntensity(This,value) \
    ( (This)->lpVtbl->put_OuterConeIntensity(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpotLight2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpotLight2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpotLight3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpotLight
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpotLight3[] = L"Microsoft.UI.Composition.ISpotLight3";
/* [object, uuid("C6919941-0D9F-58C8-91E2-ADEF6E5E70A4"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISpotLight3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpotLight3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinAttenuationCutoff )(
        __x_Microsoft_CUI_CComposition_CISpotLight3 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MinAttenuationCutoff )(
        __x_Microsoft_CUI_CComposition_CISpotLight3 * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxAttenuationCutoff )(
        __x_Microsoft_CUI_CComposition_CISpotLight3 * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MaxAttenuationCutoff )(
        __x_Microsoft_CUI_CComposition_CISpotLight3 * This,
        /* [in] */FLOAT value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISpotLight3Vtbl;

interface __x_Microsoft_CUI_CComposition_CISpotLight3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISpotLight3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISpotLight3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_get_MinAttenuationCutoff(This,value) \
    ( (This)->lpVtbl->get_MinAttenuationCutoff(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_put_MinAttenuationCutoff(This,value) \
    ( (This)->lpVtbl->put_MinAttenuationCutoff(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_get_MaxAttenuationCutoff(This,value) \
    ( (This)->lpVtbl->get_MaxAttenuationCutoff(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpotLight3_put_MaxAttenuationCutoff(This,value) \
    ( (This)->lpVtbl->put_MaxAttenuationCutoff(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpotLight3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpotLight3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpringScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation";
/* [object, uuid("6F720AFD-D3D0-5E78-9C2E-83092F6EA45E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DampingRatio )(
        __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DampingRatio )(
        __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Period )(
        __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Period )(
        __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_get_DampingRatio(This,value) \
    ( (This)->lpVtbl->get_DampingRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_put_DampingRatio(This,value) \
    ( (This)->lpVtbl->put_DampingRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_get_Period(This,value) \
    ( (This)->lpVtbl->get_Period(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_put_Period(This,value) \
    ( (This)->lpVtbl->put_Period(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpringScalarNaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpringVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation";
/* [object, uuid("5B4580A4-2594-521E-B288-EAF2C2A16A66"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DampingRatio )(
        __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DampingRatio )(
        __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Period )(
        __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Period )(
        __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_get_DampingRatio(This,value) \
    ( (This)->lpVtbl->get_DampingRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_put_DampingRatio(This,value) \
    ( (This)->lpVtbl->put_DampingRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_get_Period(This,value) \
    ( (This)->lpVtbl->get_Period(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_put_Period(This,value) \
    ( (This)->lpVtbl->put_Period(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpringVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpringVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation";
/* [object, uuid("02D9E1C6-7434-5464-A1F6-D644CE1FC9A6"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DampingRatio )(
        __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DampingRatio )(
        __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Period )(
        __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Period )(
        __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_get_DampingRatio(This,value) \
    ( (This)->lpVtbl->get_DampingRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_put_DampingRatio(This,value) \
    ( (This)->lpVtbl->put_DampingRatio(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_get_Period(This,value) \
    ( (This)->lpVtbl->get_Period(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_put_Period(This,value) \
    ( (This)->lpVtbl->put_Period(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpringVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpriteVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpriteVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpriteVisual[] = L"Microsoft.UI.Composition.ISpriteVisual";
/* [object, uuid("7E964632-45E4-5761-806D-5B4022C14F26"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISpriteVisualVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Brush )(
        __x_Microsoft_CUI_CComposition_CISpriteVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Brush )(
        __x_Microsoft_CUI_CComposition_CISpriteVisual * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionBrush * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISpriteVisualVtbl;

interface __x_Microsoft_CUI_CComposition_CISpriteVisual
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISpriteVisualVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISpriteVisual_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual_get_Brush(This,value) \
    ( (This)->lpVtbl->get_Brush(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual_put_Brush(This,value) \
    ( (This)->lpVtbl->put_Brush(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpriteVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpriteVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISpriteVisual2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SpriteVisual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISpriteVisual2[] = L"Microsoft.UI.Composition.ISpriteVisual2";
/* [object, uuid("3CB43662-9ECF-5128-850D-9EB8437774F0"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISpriteVisual2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISpriteVisual2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Shadow )(
        __x_Microsoft_CUI_CComposition_CISpriteVisual2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionShadow * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Shadow )(
        __x_Microsoft_CUI_CComposition_CISpriteVisual2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionShadow * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISpriteVisual2Vtbl;

interface __x_Microsoft_CUI_CComposition_CISpriteVisual2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISpriteVisual2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISpriteVisual2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual2_get_Shadow(This,value) \
    ( (This)->lpVtbl->get_Shadow(This,value) )

#define __x_Microsoft_CUI_CComposition_CISpriteVisual2_put_Shadow(This,value) \
    ( (This)->lpVtbl->put_Shadow(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISpriteVisual2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISpriteVisual2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IStepEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.StepEasingFunction
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IStepEasingFunction[] = L"Microsoft.UI.Composition.IStepEasingFunction";
/* [object, uuid("C7B1D4CF-C562-56B3-B4E6-B21326165F71"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIStepEasingFunctionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FinalStep )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [retval, out] */INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FinalStep )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InitialStep )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [retval, out] */INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InitialStep )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsFinalStepSingleFrame )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsFinalStepSingleFrame )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsInitialStepSingleFrame )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsInitialStepSingleFrame )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StepCount )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [retval, out] */INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_StepCount )(
        __x_Microsoft_CUI_CComposition_CIStepEasingFunction * This,
        /* [in] */INT32 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIStepEasingFunctionVtbl;

interface __x_Microsoft_CUI_CComposition_CIStepEasingFunction
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIStepEasingFunctionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_get_FinalStep(This,value) \
    ( (This)->lpVtbl->get_FinalStep(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_put_FinalStep(This,value) \
    ( (This)->lpVtbl->put_FinalStep(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_get_InitialStep(This,value) \
    ( (This)->lpVtbl->get_InitialStep(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_put_InitialStep(This,value) \
    ( (This)->lpVtbl->put_InitialStep(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_get_IsFinalStepSingleFrame(This,value) \
    ( (This)->lpVtbl->get_IsFinalStepSingleFrame(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_put_IsFinalStepSingleFrame(This,value) \
    ( (This)->lpVtbl->put_IsFinalStepSingleFrame(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_get_IsInitialStepSingleFrame(This,value) \
    ( (This)->lpVtbl->get_IsInitialStepSingleFrame(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_put_IsInitialStepSingleFrame(This,value) \
    ( (This)->lpVtbl->put_IsInitialStepSingleFrame(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_get_StepCount(This,value) \
    ( (This)->lpVtbl->get_StepCount(This,value) )

#define __x_Microsoft_CUI_CComposition_CIStepEasingFunction_put_StepCount(This,value) \
    ( (This)->lpVtbl->put_StepCount(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIStepEasingFunction;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIStepEasingFunction_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.ISwapChainIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.SwapChainIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CISwapChainIsland_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CISwapChainIsland_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_ISwapChainIsland[] = L"Microsoft.UI.Composition.ISwapChainIsland";
/* [object, uuid("D7FE1A04-3B99-525A-A9CF-E562BEA08230"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CISwapChainIslandVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CISwapChainIsland * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISwapChainIsland * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISwapChainIsland * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISwapChainIsland * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISwapChainIsland * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CISwapChainIsland * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *ClearSwapChain )(
        __x_Microsoft_CUI_CComposition_CISwapChainIsland * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CISwapChainIslandVtbl;

interface __x_Microsoft_CUI_CComposition_CISwapChainIsland
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CISwapChainIslandVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CISwapChainIsland_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CISwapChainIsland_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CISwapChainIsland_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CISwapChainIsland_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CISwapChainIsland_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CISwapChainIsland_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CISwapChainIsland_ClearSwapChain(This) \
    ( (This)->lpVtbl->ClearSwapChain(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CISwapChainIsland;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CISwapChainIsland_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector2KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector2KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector2KeyFrameAnimation[] = L"Microsoft.UI.Composition.IVector2KeyFrameAnimation";
/* [object, uuid("E9C5E3FD-43B7-526E-9DA0-4C3EA96DB27D"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrameWithEasingFunction )(
        __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEasingFunction * easingFunction
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_InsertKeyFrame(This,normalizedProgressKey,value) \
    ( (This)->lpVtbl->InsertKeyFrame(This,normalizedProgressKey,value) )

#define __x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) \
    ( (This)->lpVtbl->InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector2KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector2NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.IVector2NaturalMotionAnimation";
/* [object, uuid("E00E60CE-D1BE-5C24-885D-C1D0A749D109"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FinalValue )(
        __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
        /* [retval, out] */__FIReference_1_Windows__CFoundation__CNumerics__CVector2 * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FinalValue )(
        __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
        /* [in] */__FIReference_1_Windows__CFoundation__CNumerics__CVector2 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InitialValue )(
        __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
        /* [retval, out] */__FIReference_1_Windows__CFoundation__CNumerics__CVector2 * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InitialValue )(
        __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
        /* [in] */__FIReference_1_Windows__CFoundation__CNumerics__CVector2 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InitialVelocity )(
        __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InitialVelocity )(
        __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_get_FinalValue(This,value) \
    ( (This)->lpVtbl->get_FinalValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_put_FinalValue(This,value) \
    ( (This)->lpVtbl->put_FinalValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_get_InitialValue(This,value) \
    ( (This)->lpVtbl->get_InitialValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_put_InitialValue(This,value) \
    ( (This)->lpVtbl->put_InitialValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_get_InitialVelocity(This,value) \
    ( (This)->lpVtbl->get_InitialVelocity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_put_InitialVelocity(This,value) \
    ( (This)->lpVtbl->put_InitialVelocity(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector2NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector2NaturalMotionAnimationFactory[] = L"Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory";
/* [object, uuid("E39AEAD8-80F9-5F64-8644-E9E5646B796F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector2NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector3KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector3KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector3KeyFrameAnimation[] = L"Microsoft.UI.Composition.IVector3KeyFrameAnimation";
/* [object, uuid("D7DA980E-2DDE-5DD1-A40C-D6868DD2449E"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrameWithEasingFunction )(
        __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEasingFunction * easingFunction
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_InsertKeyFrame(This,normalizedProgressKey,value) \
    ( (This)->lpVtbl->InsertKeyFrame(This,normalizedProgressKey,value) )

#define __x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) \
    ( (This)->lpVtbl->InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector3KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector3NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.IVector3NaturalMotionAnimation";
/* [object, uuid("13FEEEF2-D2C0-5B72-AD67-983A19B9B783"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FinalValue )(
        __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
        /* [retval, out] */__FIReference_1_Windows__CFoundation__CNumerics__CVector3 * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FinalValue )(
        __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
        /* [in] */__FIReference_1_Windows__CFoundation__CNumerics__CVector3 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InitialValue )(
        __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
        /* [retval, out] */__FIReference_1_Windows__CFoundation__CNumerics__CVector3 * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InitialValue )(
        __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
        /* [in] */__FIReference_1_Windows__CFoundation__CNumerics__CVector3 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_InitialVelocity )(
        __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_InitialVelocity )(
        __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_get_FinalValue(This,value) \
    ( (This)->lpVtbl->get_FinalValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_put_FinalValue(This,value) \
    ( (This)->lpVtbl->put_FinalValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_get_InitialValue(This,value) \
    ( (This)->lpVtbl->get_InitialValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_put_InitialValue(This,value) \
    ( (This)->lpVtbl->put_InitialValue(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_get_InitialVelocity(This,value) \
    ( (This)->lpVtbl->get_InitialVelocity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_put_InitialVelocity(This,value) \
    ( (This)->lpVtbl->put_InitialVelocity(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector3NaturalMotionAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector3NaturalMotionAnimationFactory[] = L"Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory";
/* [object, uuid("428241CB-BE9C-5C2A-939C-EC78AA60BB8A"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector3NaturalMotionAnimationFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVector4KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Vector4KeyFrameAnimation
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVector4KeyFrameAnimation[] = L"Microsoft.UI.Composition.IVector4KeyFrameAnimation";
/* [object, uuid("16CEA3B9-C5E3-5F6F-B5C7-DA29A31CCFC7"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrame )(
        __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector4 value
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *InsertKeyFrameWithEasingFunction )(
        __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation * This,
        /* [in] */FLOAT normalizedProgressKey,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector4 value,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionEasingFunction * easingFunction
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimationVtbl;

interface __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_InsertKeyFrame(This,normalizedProgressKey,value) \
    ( (This)->lpVtbl->InsertKeyFrame(This,normalizedProgressKey,value) )

#define __x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) \
    ( (This)->lpVtbl->InsertKeyFrameWithEasingFunction(This,normalizedProgressKey,value,easingFunction) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVector4KeyFrameAnimation_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Visual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisual_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisual_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisual[] = L"Microsoft.UI.Composition.IVisual";
/* [object, uuid("C0EEAB6C-C897-5AC6-A1C9-63ABD5055B9B"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisualVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AnchorPoint )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AnchorPoint )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BackfaceVisibility )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionBackfaceVisibility * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BackfaceVisibility )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionBackfaceVisibility value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BorderMode )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionBorderMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BorderMode )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionBorderMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CenterPoint )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Clip )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionClip * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Clip )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionClip * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CompositeMode )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CCompositionCompositeMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CompositeMode )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CCompositionCompositeMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsVisible )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsVisible )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Offset )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Offset )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Opacity )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Opacity )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Orientation )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CQuaternion * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Orientation )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CQuaternion value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Parent )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIContainerVisual * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngle )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAngleInDegrees )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAxis )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAxis )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Scale )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Scale )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Size )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransformMatrix )(
        __x_Microsoft_CUI_CComposition_CIVisual * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisualVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisual
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisualVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisual_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisual_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisual_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisual_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisual_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisual_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_AnchorPoint(This,value) \
    ( (This)->lpVtbl->get_AnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_AnchorPoint(This,value) \
    ( (This)->lpVtbl->put_AnchorPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_BackfaceVisibility(This,value) \
    ( (This)->lpVtbl->get_BackfaceVisibility(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_BackfaceVisibility(This,value) \
    ( (This)->lpVtbl->put_BackfaceVisibility(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_BorderMode(This,value) \
    ( (This)->lpVtbl->get_BorderMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_BorderMode(This,value) \
    ( (This)->lpVtbl->put_BorderMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_CenterPoint(This,value) \
    ( (This)->lpVtbl->get_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_CenterPoint(This,value) \
    ( (This)->lpVtbl->put_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_Clip(This,value) \
    ( (This)->lpVtbl->get_Clip(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_Clip(This,value) \
    ( (This)->lpVtbl->put_Clip(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_CompositeMode(This,value) \
    ( (This)->lpVtbl->get_CompositeMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_CompositeMode(This,value) \
    ( (This)->lpVtbl->put_CompositeMode(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_IsVisible(This,value) \
    ( (This)->lpVtbl->get_IsVisible(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_IsVisible(This,value) \
    ( (This)->lpVtbl->put_IsVisible(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_Offset(This,value) \
    ( (This)->lpVtbl->get_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_Offset(This,value) \
    ( (This)->lpVtbl->put_Offset(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_Opacity(This,value) \
    ( (This)->lpVtbl->get_Opacity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_Opacity(This,value) \
    ( (This)->lpVtbl->put_Opacity(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_Orientation(This,value) \
    ( (This)->lpVtbl->get_Orientation(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_Orientation(This,value) \
    ( (This)->lpVtbl->put_Orientation(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_Parent(This,value) \
    ( (This)->lpVtbl->get_Parent(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_RotationAngle(This,value) \
    ( (This)->lpVtbl->get_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_RotationAngle(This,value) \
    ( (This)->lpVtbl->put_RotationAngle(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->get_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_RotationAngleInDegrees(This,value) \
    ( (This)->lpVtbl->put_RotationAngleInDegrees(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_RotationAxis(This,value) \
    ( (This)->lpVtbl->get_RotationAxis(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_RotationAxis(This,value) \
    ( (This)->lpVtbl->put_RotationAxis(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_Scale(This,value) \
    ( (This)->lpVtbl->get_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_Scale(This,value) \
    ( (This)->lpVtbl->put_Scale(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_Size(This,value) \
    ( (This)->lpVtbl->get_Size(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_Size(This,value) \
    ( (This)->lpVtbl->put_Size(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_get_TransformMatrix(This,value) \
    ( (This)->lpVtbl->get_TransformMatrix(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual_put_TransformMatrix(This,value) \
    ( (This)->lpVtbl->put_TransformMatrix(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisual;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisual_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisual2
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Visual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisual2[] = L"Microsoft.UI.Composition.IVisual2";
/* [object, uuid("492A7995-0C5C-5993-A283-52E4DA3050EE"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisual2Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual2 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual2 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual2 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual2 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual2 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual2 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ParentForTransform )(
        __x_Microsoft_CUI_CComposition_CIVisual2 * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ParentForTransform )(
        __x_Microsoft_CUI_CComposition_CIVisual2 * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RelativeOffsetAdjustment )(
        __x_Microsoft_CUI_CComposition_CIVisual2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RelativeOffsetAdjustment )(
        __x_Microsoft_CUI_CComposition_CIVisual2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RelativeSizeAdjustment )(
        __x_Microsoft_CUI_CComposition_CIVisual2 * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RelativeSizeAdjustment )(
        __x_Microsoft_CUI_CComposition_CIVisual2 * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisual2Vtbl;

interface __x_Microsoft_CUI_CComposition_CIVisual2
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisual2Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisual2_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_get_ParentForTransform(This,value) \
    ( (This)->lpVtbl->get_ParentForTransform(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_put_ParentForTransform(This,value) \
    ( (This)->lpVtbl->put_ParentForTransform(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_get_RelativeOffsetAdjustment(This,value) \
    ( (This)->lpVtbl->get_RelativeOffsetAdjustment(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_put_RelativeOffsetAdjustment(This,value) \
    ( (This)->lpVtbl->put_RelativeOffsetAdjustment(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_get_RelativeSizeAdjustment(This,value) \
    ( (This)->lpVtbl->get_RelativeSizeAdjustment(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual2_put_RelativeSizeAdjustment(This,value) \
    ( (This)->lpVtbl->put_RelativeSizeAdjustment(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisual2;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisual2_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisual3
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Visual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisual3_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisual3_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisual3[] = L"Microsoft.UI.Composition.IVisual3";
/* [object, uuid("972B70B0-950D-5656-A380-BD4A70775868"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisual3Vtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual3 * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual3 * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual3 * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual3 * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual3 * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual3 * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsHitTestVisible )(
        __x_Microsoft_CUI_CComposition_CIVisual3 * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsHitTestVisible )(
        __x_Microsoft_CUI_CComposition_CIVisual3 * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisual3Vtbl;

interface __x_Microsoft_CUI_CComposition_CIVisual3
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisual3Vtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisual3_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisual3_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisual3_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisual3_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisual3_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisual3_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVisual3_get_IsHitTestVisible(This,value) \
    ( (This)->lpVtbl->get_IsHitTestVisible(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisual3_put_IsHitTestVisible(This,value) \
    ( (This)->lpVtbl->put_IsHitTestVisible(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisual3;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisual3_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualCollection[] = L"Microsoft.UI.Composition.IVisualCollection";
/* [object, uuid("D002896D-67D8-5F69-AB70-581FA3BF370F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisualCollectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualCollection * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualCollection * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Count )(
        __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
        /* [retval, out] */INT32 * value
        );
    HRESULT ( STDMETHODCALLTYPE *InsertAbove )(
        __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * newChild,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * sibling
        );
    HRESULT ( STDMETHODCALLTYPE *InsertAtBottom )(
        __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * newChild
        );
    HRESULT ( STDMETHODCALLTYPE *InsertAtTop )(
        __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * newChild
        );
    HRESULT ( STDMETHODCALLTYPE *InsertBelow )(
        __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * newChild,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * sibling
        );
    HRESULT ( STDMETHODCALLTYPE *Remove )(
        __x_Microsoft_CUI_CComposition_CIVisualCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * child
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveAll )(
        __x_Microsoft_CUI_CComposition_CIVisualCollection * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisualCollectionVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisualCollection
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisualCollectionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisualCollection_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_get_Count(This,value) \
    ( (This)->lpVtbl->get_Count(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_InsertAbove(This,newChild,sibling) \
    ( (This)->lpVtbl->InsertAbove(This,newChild,sibling) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_InsertAtBottom(This,newChild) \
    ( (This)->lpVtbl->InsertAtBottom(This,newChild) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_InsertAtTop(This,newChild) \
    ( (This)->lpVtbl->InsertAtTop(This,newChild) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_InsertBelow(This,newChild,sibling) \
    ( (This)->lpVtbl->InsertBelow(This,newChild,sibling) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_Remove(This,child) \
    ( (This)->lpVtbl->Remove(This,child) )

#define __x_Microsoft_CUI_CComposition_CIVisualCollection_RemoveAll(This) \
    ( (This)->lpVtbl->RemoveAll(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualElement
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualElement[] = L"Microsoft.UI.Composition.IVisualElement";
/* [object, uuid("2180F1F5-B5D8-4BF6-920A-12006E63EFEF"), experimental, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisualElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualElement * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualElement * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualElement * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualElement * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualElement * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualElement * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisualElementVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisualElement
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisualElementVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisualElement_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisualElement_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualElement_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualElement_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisualElement_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisualElement_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualElement;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualElement_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.Visual
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualFactory[] = L"Microsoft.UI.Composition.IVisualFactory";
/* [object, uuid("77BB4668-83FA-5BB5-B78B-5E6FDC3D4038"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisualFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisualFactoryVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisualFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisualFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisualFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisualFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisualFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisualFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualFactory;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualFactory_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualIslandSite
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualIslandSite_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualIslandSite_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualIslandSite[] = L"Microsoft.UI.Composition.IVisualIslandSite";
/* [object, uuid("4EF6D9E9-E239-5952-9A89-710240AE246A"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisualIslandSiteVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualSize )(
        __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ActualSize )(
        __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsSiteVisible )(
        __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsSiteVisible )(
        __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RequestedSize )(
        __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SiteVisual )(
        __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisual * * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_RequestedSizeChanged )(
        __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CComposition__CVisualIslandSite_Microsoft__CUI__CComposition__CVisualIslandSiteEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_RequestedSizeChanged )(
        __x_Microsoft_CUI_CComposition_CIVisualIslandSite * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisualIslandSiteVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisualIslandSite
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisualIslandSiteVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_get_ActualSize(This,value) \
    ( (This)->lpVtbl->get_ActualSize(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_put_ActualSize(This,value) \
    ( (This)->lpVtbl->put_ActualSize(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_get_IsSiteVisible(This,value) \
    ( (This)->lpVtbl->get_IsSiteVisible(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_put_IsSiteVisible(This,value) \
    ( (This)->lpVtbl->put_IsSiteVisible(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_get_RequestedSize(This,value) \
    ( (This)->lpVtbl->get_RequestedSize(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_get_SiteVisual(This,value) \
    ( (This)->lpVtbl->get_SiteVisual(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_add_RequestedSizeChanged(This,handler,token) \
    ( (This)->lpVtbl->add_RequestedSizeChanged(This,handler,token) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSite_remove_RequestedSizeChanged(This,token) \
    ( (This)->lpVtbl->remove_RequestedSizeChanged(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualIslandSite;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualIslandSite_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualIslandSiteEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualIslandSiteEventArgs
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualIslandSiteEventArgs[] = L"Microsoft.UI.Composition.IVisualIslandSiteEventArgs";
/* [object, uuid("D7C75727-A18B-5A0A-94C8-526CC06DAA0F"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgsVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualIslandSiteEventArgs_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualTreeIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualTreeIsland
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualTreeIsland[] = L"Microsoft.UI.Composition.IVisualTreeIsland";
/* [object, uuid("4887FF1F-6CD3-542D-B641-6EE121193B68"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisualTreeIslandVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualTreeIsland * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualTreeIsland * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualTreeIsland * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualTreeIsland * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualTreeIsland * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualTreeIsland * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Children )(
        __x_Microsoft_CUI_CComposition_CIVisualTreeIsland * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CIVisualCollection * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisualTreeIslandVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisualTreeIsland
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisualTreeIslandVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisualTreeIsland_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisualTreeIsland_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualTreeIsland_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualTreeIsland_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisualTreeIsland_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisualTreeIsland_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVisualTreeIsland_get_Children(This,value) \
    ( (This)->lpVtbl->get_Children(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualTreeIsland;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualTreeIsland_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisualUnorderedCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Interface is a part of the implementation of type Microsoft.UI.Composition.VisualUnorderedCollection
 *
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisualUnorderedCollection[] = L"Microsoft.UI.Composition.IVisualUnorderedCollection";
/* [object, uuid("4A97216E-793E-54E3-96E8-F9DB790119CD"), experimental, exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Count )(
        __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This,
        /* [retval, out] */INT32 * value
        );
    HRESULT ( STDMETHODCALLTYPE *Add )(
        __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * newVisual
        );
    HRESULT ( STDMETHODCALLTYPE *Remove )(
        __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CIVisual * visual
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveAll )(
        __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollectionVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollectionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_get_Count(This,value) \
    ( (This)->lpVtbl->get_Count(This,value) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_Add(This,newVisual) \
    ( (This)->lpVtbl->Add(This,newVisual) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_Remove(This,visual) \
    ( (This)->lpVtbl->Remove(This,visual) )

#define __x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_RemoveAll(This) \
    ( (This)->lpVtbl->RemoveAll(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisualUnorderedCollection_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Composition.IVisual_CompositionIslands
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#if !defined(____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Composition_IVisual_CompositionIslands[] = L"Microsoft.UI.Composition.IVisual_CompositionIslands";
/* [object, uuid("6D7D845D-643E-5079-8F70-65DC1C0ECE23"), experimental, contract] */
typedef struct __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslandsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateAnchor )(
        __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositionAnchor * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslandsVtbl;

interface __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands
{
    CONST_VTBL struct __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslandsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_CreateAnchor(This,result) \
    ( (This)->lpVtbl->CreateAnchor(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands;
#endif /* !defined(____x_Microsoft_CUI_CComposition_CIVisual__CompositionIslands_INTERFACE_DEFINED__) */
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.AmbientLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IAmbientLight ** Default Interface **
 *    Microsoft.UI.Composition.IAmbientLight2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_AmbientLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_AmbientLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_AmbientLight[] = L"Microsoft.UI.Composition.AmbientLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.AnimationController
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.IAnimationControllerStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IAnimationController ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_AnimationController_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_AnimationController_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_AnimationController[] = L"Microsoft.UI.Composition.AnimationController";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.AnimationPropertyInfo
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IAnimationPropertyInfo ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_AnimationPropertyInfo_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_AnimationPropertyInfo_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_AnimationPropertyInfo[] = L"Microsoft.UI.Composition.AnimationPropertyInfo";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.BooleanKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IBooleanKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_BooleanKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_BooleanKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_BooleanKeyFrameAnimation[] = L"Microsoft.UI.Composition.BooleanKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_BounceScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_BounceScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_BounceScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_BounceVector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_BounceVector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_BounceVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_BounceVector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_BounceVector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_BounceVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ColorKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IColorKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ColorKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ColorKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ColorKeyFrameAnimation[] = L"Microsoft.UI.Composition.ColorKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionAnchor
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionAnchor ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnchor_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnchor_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionAnchor[] = L"Microsoft.UI.Composition.CompositionAnchor";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionAnimation ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionAnimation2
 *    Microsoft.UI.Composition.ICompositionAnimation3
 *    Microsoft.UI.Composition.ICompositionAnimation4
 *    Microsoft.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionAnimation[] = L"Microsoft.UI.Composition.CompositionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionAnimationGroup
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionAnimationGroup ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionAnimation
 *    Microsoft.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnimationGroup_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionAnimationGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionAnimationGroup[] = L"Microsoft.UI.Composition.CompositionAnimationGroup";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionBackdropBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionBackdropBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionBackdropBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionBackdropBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionBackdropBrush[] = L"Microsoft.UI.Composition.CompositionBackdropBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionBatchCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionBatchCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionBatchCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionBatchCompletedEventArgs[] = L"Microsoft.UI.Composition.CompositionBatchCompletedEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionBrush[] = L"Microsoft.UI.Composition.CompositionBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionCapabilities
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionCapabilitiesStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionCapabilities ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionCapabilities_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionCapabilities_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionCapabilities[] = L"Microsoft.UI.Composition.CompositionCapabilities";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionClip ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionClip2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionClip_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionClip[] = L"Microsoft.UI.Composition.CompositionClip";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionColorBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionColorBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionColorBrush[] = L"Microsoft.UI.Composition.CompositionColorBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionColorGradientStop
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionColorGradientStop ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorGradientStop_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorGradientStop_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionColorGradientStop[] = L"Microsoft.UI.Composition.CompositionColorGradientStop";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionColorGradientStopCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionColorGradientStopCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionColorGradientStop
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Composition.CompositionColorGradientStop
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorGradientStopCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionColorGradientStopCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionColorGradientStopCollection[] = L"Microsoft.UI.Composition.CompositionColorGradientStopCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionCommitBatch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionCommitBatch ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionCommitBatch_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionCommitBatch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionCommitBatch[] = L"Microsoft.UI.Composition.CompositionCommitBatch";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionContainerShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionContainerShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionContainerShape_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionContainerShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionContainerShape[] = L"Microsoft.UI.Composition.CompositionContainerShape";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionDrawingSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionDrawingSurface ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionDrawingSurface2
 *    Microsoft.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionDrawingSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionDrawingSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionDrawingSurface[] = L"Microsoft.UI.Composition.CompositionDrawingSurface";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEasingFunction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEasingFunction[] = L"Microsoft.UI.Composition.CompositionEasingFunction";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEffectBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEffectBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEffectBrush[] = L"Microsoft.UI.Composition.CompositionEffectBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEffectFactory
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEffectFactory ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectFactory_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectFactory_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEffectFactory[] = L"Microsoft.UI.Composition.CompositionEffectFactory";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEffectSourceParameter
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEffectSourceParameter ** Default Interface **
 *    Windows.Graphics.Effects.IGraphicsEffectSource
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectSourceParameter_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEffectSourceParameter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEffectSourceParameter[] = L"Microsoft.UI.Composition.CompositionEffectSourceParameter";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionEllipseGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionEllipseGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionEllipseGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionEllipseGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionEllipseGeometry[] = L"Microsoft.UI.Composition.CompositionEllipseGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionGeometricClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionGeometricClip ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionGeometricClip_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionGeometricClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionGeometricClip[] = L"Microsoft.UI.Composition.CompositionGeometricClip";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionGeometry[] = L"Microsoft.UI.Composition.CompositionGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionGradientBrush ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionGradientBrush2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionGradientBrush[] = L"Microsoft.UI.Composition.CompositionGradientBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionGraphicsDevice
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionGraphicsDevice ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionGraphicsDevice2
 *    Microsoft.UI.Composition.ICompositionGraphicsDevice3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionGraphicsDevice_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionGraphicsDevice_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionGraphicsDevice[] = L"Microsoft.UI.Composition.CompositionGraphicsDevice";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionIslandStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIsland ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIsland_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIsland_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIsland[] = L"Microsoft.UI.Composition.CompositionIsland";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIslandAutomationProviderRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIslandAutomationProviderRequestedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandAutomationProviderRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandAutomationProviderRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIslandAutomationProviderRequestedEventArgs[] = L"Microsoft.UI.Composition.CompositionIslandAutomationProviderRequestedEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIslandEnvironment
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionIslandEnvironmentStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIslandEnvironment ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandEnvironment_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandEnvironment_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIslandEnvironment[] = L"Microsoft.UI.Composition.CompositionIslandEnvironment";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIslandEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIslandEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIslandEventArgs[] = L"Microsoft.UI.Composition.CompositionIslandEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionIslandSite ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandSite_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionIslandSite_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionIslandSite[] = L"Microsoft.UI.Composition.CompositionIslandSite";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionLight ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionLight2
 *    Microsoft.UI.Composition.ICompositionLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionLight[] = L"Microsoft.UI.Composition.CompositionLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionLineGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionLineGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionLineGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionLineGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionLineGeometry[] = L"Microsoft.UI.Composition.CompositionLineGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionLinearGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionLinearGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionLinearGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionLinearGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionLinearGradientBrush[] = L"Microsoft.UI.Composition.CompositionLinearGradientBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionMaskBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionMaskBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionMaskBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionMaskBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionMaskBrush[] = L"Microsoft.UI.Composition.CompositionMaskBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionMipmapSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionMipmapSurface ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionMipmapSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionMipmapSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionMipmapSurface[] = L"Microsoft.UI.Composition.CompositionMipmapSurface";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionNineGridBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionNineGridBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionNineGridBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionNineGridBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionNineGridBrush[] = L"Microsoft.UI.Composition.CompositionNineGridBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionNotificationDeferral
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionNotificationDeferral ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionNotificationDeferral_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionNotificationDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionNotificationDeferral[] = L"Microsoft.UI.Composition.CompositionNotificationDeferral";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionObject
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionObjectStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionObject ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionObject2
 *    Microsoft.UI.Composition.ICompositionObject3
 *    Microsoft.UI.Composition.ICompositionObject4
 *    Windows.Foundation.IClosable
 *    Microsoft.UI.Composition.IAnimationObject
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionObject_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionObject[] = L"Microsoft.UI.Composition.CompositionObject";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionPath
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Composition.ICompositionPathFactory interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionPath ** Default Interface **
 *    Microsoft.Graphics.IGeometrySource2D
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionPath_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionPath[] = L"Microsoft.UI.Composition.CompositionPath";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionPathGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionPathGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionPathGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionPathGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionPathGeometry[] = L"Microsoft.UI.Composition.CompositionPathGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadow ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionProjectedShadow2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadow[] = L"Microsoft.UI.Composition.CompositionProjectedShadow";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadowCaster
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadowCaster ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionProjectedShadowCaster2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowCaster_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowCaster_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadowCaster[] = L"Microsoft.UI.Composition.CompositionProjectedShadowCaster";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionProjectedShadowCaster
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowCasterCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowCasterCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadowCasterCollection[] = L"Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadowReceiver
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadowReceiver ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionProjectedShadowReceiver2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowReceiver_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowReceiver_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadowReceiver[] = L"Microsoft.UI.Composition.CompositionProjectedShadowReceiver";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionProjectedShadowReceiver
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionProjectedShadowReceiverUnorderedCollection[] = L"Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionPropertySet
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionPropertySet ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionPropertySet2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionPropertySet_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionPropertySet_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionPropertySet[] = L"Microsoft.UI.Composition.CompositionPropertySet";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionRadialGradientBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionRadialGradientBrush ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionRadialGradientBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionRadialGradientBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionRadialGradientBrush[] = L"Microsoft.UI.Composition.CompositionRadialGradientBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionRectangleGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionRectangleGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionRectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionRectangleGeometry[] = L"Microsoft.UI.Composition.CompositionRectangleGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionRoundedRectangleGeometry
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionRoundedRectangleGeometry_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionRoundedRectangleGeometry_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionRoundedRectangleGeometry[] = L"Microsoft.UI.Composition.CompositionRoundedRectangleGeometry";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionScopedBatch
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionScopedBatch ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionScopedBatch_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionScopedBatch_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionScopedBatch[] = L"Microsoft.UI.Composition.CompositionScopedBatch";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionShadow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionShadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionShadow[] = L"Microsoft.UI.Composition.CompositionShadow";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionShape_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionShape[] = L"Microsoft.UI.Composition.CompositionShape";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionShapeCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Composition.CompositionShape ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.CompositionShape
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionShapeCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionShapeCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionShapeCollection[] = L"Microsoft.UI.Composition.CompositionShapeCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionSpriteShape
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionSpriteShape ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionSpriteShape_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionSpriteShape_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionSpriteShape[] = L"Microsoft.UI.Composition.CompositionSpriteShape";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionStrokeDashArray
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_float ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_float
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionStrokeDashArray_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionStrokeDashArray_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionStrokeDashArray[] = L"Microsoft.UI.Composition.CompositionStrokeDashArray";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionSurfaceBrush
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionSurfaceBrush ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionSurfaceBrush2
 *    Microsoft.UI.Composition.ICompositionSurfaceBrush3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionSurfaceBrush_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionSurfaceBrush_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionSurfaceBrush[] = L"Microsoft.UI.Composition.CompositionSurfaceBrush";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionTarget
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionTarget ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionTarget_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionTarget_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionTarget[] = L"Microsoft.UI.Composition.CompositionTarget";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionTransform
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionTransform ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionTransform_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionTransform_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionTransform[] = L"Microsoft.UI.Composition.CompositionTransform";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionViewBox
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionViewBox ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionViewBox_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionViewBox_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionViewBox[] = L"Microsoft.UI.Composition.CompositionViewBox";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionVirtualDrawingSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionVirtualDrawingSurface ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionVirtualDrawingSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionVirtualDrawingSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionVirtualDrawingSurface[] = L"Microsoft.UI.Composition.CompositionVirtualDrawingSurface";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CompositionVisualSurface
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositionVisualSurface ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionSurface
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CompositionVisualSurface_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CompositionVisualSurface_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CompositionVisualSurface[] = L"Microsoft.UI.Composition.CompositionVisualSurface";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Compositor
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Composition.ICompositorStatics interface starting with version 1.0 of the Microsoft.UI.Composition.LiftedContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICompositor ** Default Interface **
 *    Microsoft.UI.Composition.ICompositor2
 *    Microsoft.UI.Composition.ICompositor3
 *    Microsoft.UI.Composition.ICompositor4
 *    Microsoft.UI.Composition.ICompositor5
 *    Microsoft.UI.Composition.ICompositor6
 *    Microsoft.UI.Composition.ICompositorWithCompositionIslands
 *    Microsoft.UI.Composition.ICompositorWithProjectedShadow
 *    Microsoft.UI.Composition.ICompositorWithRadialGradient
 *    Microsoft.UI.Composition.ICompositorWithVisualSurface
 *    Windows.Foundation.IClosable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Compositor_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Compositor_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Compositor[] = L"Microsoft.UI.Composition.Compositor";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ContainerVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IContainerVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ContainerVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ContainerVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ContainerVisual[] = L"Microsoft.UI.Composition.ContainerVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.CubicBezierEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ICubicBezierEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_CubicBezierEasingFunction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_CubicBezierEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_CubicBezierEasingFunction[] = L"Microsoft.UI.Composition.CubicBezierEasingFunction";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.DistantLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IDistantLight ** Default Interface **
 *    Microsoft.UI.Composition.IDistantLight2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_DistantLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_DistantLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_DistantLight[] = L"Microsoft.UI.Composition.DistantLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.DropShadow
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IDropShadow ** Default Interface **
 *    Microsoft.UI.Composition.IDropShadow2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_DropShadow_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_DropShadow_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_DropShadow[] = L"Microsoft.UI.Composition.DropShadow";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ExpressionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IExpressionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ExpressionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ExpressionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ExpressionAnimation[] = L"Microsoft.UI.Composition.ExpressionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ImplicitAnimationCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IImplicitAnimationCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CComposition__CICompositionAnimationBase
 *    Windows.Foundation.Collections.IMap_2_HSTRING,Microsoft.UI.Composition.ICompositionAnimationBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ImplicitAnimationCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ImplicitAnimationCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ImplicitAnimationCollection[] = L"Microsoft.UI.Composition.ImplicitAnimationCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.InitialValueExpressionCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IMap_2_HSTRING,HSTRING ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1___FIKeyValuePair_2_HSTRING_HSTRING
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_InitialValueExpressionCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_InitialValueExpressionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_InitialValueExpressionCollection[] = L"Microsoft.UI.Composition.InitialValueExpressionCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.InsetClip
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IInsetClip ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_InsetClip_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_InsetClip_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_InsetClip[] = L"Microsoft.UI.Composition.InsetClip";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IKeyFrameAnimation ** Default Interface **
 *    Microsoft.UI.Composition.IKeyFrameAnimation2
 *    Microsoft.UI.Composition.IKeyFrameAnimation3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_KeyFrameAnimation[] = L"Microsoft.UI.Composition.KeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.LayerVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ILayerVisual ** Default Interface **
 *    Microsoft.UI.Composition.ILayerVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_LayerVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_LayerVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_LayerVisual[] = L"Microsoft.UI.Composition.LayerVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.LinearEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ILinearEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_LinearEasingFunction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_LinearEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_LinearEasingFunction[] = L"Microsoft.UI.Composition.LinearEasingFunction";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.INaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_NaturalMotionAnimation[] = L"Microsoft.UI.Composition.NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.PathKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IPathKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_PathKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_PathKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_PathKeyFrameAnimation[] = L"Microsoft.UI.Composition.PathKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.PointLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IPointLight ** Default Interface **
 *    Microsoft.UI.Composition.IPointLight2
 *    Microsoft.UI.Composition.IPointLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_PointLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_PointLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_PointLight[] = L"Microsoft.UI.Composition.PointLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.PopupIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IPopupIslandSite ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_PopupIslandSite_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_PopupIslandSite_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_PopupIslandSite[] = L"Microsoft.UI.Composition.PopupIslandSite";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.QuaternionKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IQuaternionKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_QuaternionKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_QuaternionKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_QuaternionKeyFrameAnimation[] = L"Microsoft.UI.Composition.QuaternionKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.RedirectVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IRedirectVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_RedirectVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_RedirectVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_RedirectVisual[] = L"Microsoft.UI.Composition.RedirectVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_RenderingDeviceReplacedEventArgs[] = L"Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ScalarKeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IScalarKeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ScalarKeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ScalarKeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ScalarKeyFrameAnimation[] = L"Microsoft.UI.Composition.ScalarKeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.ScalarNaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.ShapeVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IShapeVisual ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_ShapeVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_ShapeVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_ShapeVisual[] = L"Microsoft.UI.Composition.ShapeVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpotLight
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpotLight ** Default Interface **
 *    Microsoft.UI.Composition.ISpotLight2
 *    Microsoft.UI.Composition.ISpotLight3
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpotLight_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpotLight_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpotLight[] = L"Microsoft.UI.Composition.SpotLight";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpringScalarNaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpringScalarNaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpringScalarNaturalMotionAnimation[] = L"Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpringVector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpringVector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpringVector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpringVector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpringVector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpringVector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SpriteVisual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISpriteVisual ** Default Interface **
 *    Microsoft.UI.Composition.ISpriteVisual2
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SpriteVisual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SpriteVisual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SpriteVisual[] = L"Microsoft.UI.Composition.SpriteVisual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.StepEasingFunction
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IStepEasingFunction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_StepEasingFunction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_StepEasingFunction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_StepEasingFunction[] = L"Microsoft.UI.Composition.StepEasingFunction";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.SwapChainIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.ISwapChainIsland ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_SwapChainIsland_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_SwapChainIsland_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_SwapChainIsland[] = L"Microsoft.UI.Composition.SwapChainIsland";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector2KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector2KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector2KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector2KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector2KeyFrameAnimation[] = L"Microsoft.UI.Composition.Vector2KeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector2NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector2NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector2NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector2NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector2NaturalMotionAnimation[] = L"Microsoft.UI.Composition.Vector2NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector3KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector3KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector3KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector3KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector3KeyFrameAnimation[] = L"Microsoft.UI.Composition.Vector3KeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector3NaturalMotionAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector3NaturalMotionAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector3NaturalMotionAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector3NaturalMotionAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector3NaturalMotionAnimation[] = L"Microsoft.UI.Composition.Vector3NaturalMotionAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Vector4KeyFrameAnimation
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVector4KeyFrameAnimation ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Vector4KeyFrameAnimation_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Vector4KeyFrameAnimation_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Vector4KeyFrameAnimation[] = L"Microsoft.UI.Composition.Vector4KeyFrameAnimation";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.Visual
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisual ** Default Interface **
 *    Microsoft.UI.Composition.IVisual2
 *    Microsoft.UI.Composition.IVisual3
 *    Microsoft.UI.Composition.IVisual_CompositionIslands
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_Visual_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_Visual_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_Visual[] = L"Microsoft.UI.Composition.Visual";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.Visual
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualCollection[] = L"Microsoft.UI.Composition.VisualCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualIslandSite
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualIslandSite ** Default Interface **
 *    Microsoft.UI.Composition.ICompositionIslandSite
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualIslandSite_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualIslandSite_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualIslandSite[] = L"Microsoft.UI.Composition.VisualIslandSite";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualIslandSiteEventArgs
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualIslandSiteEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualIslandSiteEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualIslandSiteEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualIslandSiteEventArgs[] = L"Microsoft.UI.Composition.VisualIslandSiteEventArgs";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualTreeIsland
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualTreeIsland ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualTreeIsland_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualTreeIsland_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualTreeIsland[] = L"Microsoft.UI.Composition.VisualTreeIsland";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Composition.VisualUnorderedCollection
 *
 * Introduced to Microsoft.UI.Composition.LiftedContract in version 1.0
 *
 *
 * Type is for evaluation purposes and is subject to change or removal in future updates.
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Composition.IVisualUnorderedCollection ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Composition.Visual
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000
#if defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)

#ifndef RUNTIMECLASS_Microsoft_UI_Composition_VisualUnorderedCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Composition_VisualUnorderedCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Composition_VisualUnorderedCollection[] = L"Microsoft.UI.Composition.VisualUnorderedCollection";
#endif
#endif // defined(ENABLE_WINRT_EXPERIMENTAL_TYPES)
#endif // MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION >= 0x10000




#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
#endif // __Microsoft2EUI2EComposition_p_h__

#endif // __Microsoft2EUI2EComposition_h__

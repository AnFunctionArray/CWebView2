/* Header file automatically generated from Microsoft.UI.Xaml.idl */
/*
 * File built with Microsoft(R) MIDLRT Compiler Engine Version 10.00.0226 
 */

#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif

/* verify that the <rpcsal.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif /*COM_NO_WINDOWS_H*/
#ifndef __Microsoft2EUI2EXaml_h__
#define __Microsoft2EUI2EXaml_h__
#ifndef __Microsoft2EUI2EXaml_p_h__
#define __Microsoft2EUI2EXaml_p_h__


#pragma once

// Ensure that the setting of the /ns_prefix command line switch is consistent for all headers.
// If you get an error from the compiler indicating "warning C4005: 'CHECK_NS_PREFIX_STATE': macro redefinition", this
// indicates that you have included two different headers with different settings for the /ns_prefix MIDL command line switch
#if !defined(DISABLE_NS_PREFIX_CHECKS)
#define CHECK_NS_PREFIX_STATE "never"
#endif // !defined(DISABLE_NS_PREFIX_CHECKS)


#pragma push_macro("MIDL_CONST_ID")
#undef MIDL_CONST_ID
#define MIDL_CONST_ID const __declspec(selectany)


//  API Contract Inclusion Definitions
#if !defined(SPECIFIC_API_CONTRACT_DEFINITIONS)
#if !defined(MICROSOFT_GRAPHICS_LIFTEDCONTRACT_VERSION)
#define MICROSOFT_GRAPHICS_LIFTEDCONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_GRAPHICS_LIFTEDCONTRACT_VERSION)

#if !defined(MICROSOFT_SYSTEM_LIFTEDCONTRACT_VERSION)
#define MICROSOFT_SYSTEM_LIFTEDCONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_SYSTEM_LIFTEDCONTRACT_VERSION)

#if !defined(MICROSOFT_UI_COMPOSITION_INTERACTIONS_LIFTEDCONTRACT_VERSION)
#define MICROSOFT_UI_COMPOSITION_INTERACTIONS_LIFTEDCONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_UI_COMPOSITION_INTERACTIONS_LIFTEDCONTRACT_VERSION)

#if !defined(MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION)
#define MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_UI_COMPOSITION_LIFTEDCONTRACT_VERSION)

#if !defined(MICROSOFT_UI_XAML_HOSTING_HOSTINGCONTRACT_VERSION)
#define MICROSOFT_UI_XAML_HOSTING_HOSTINGCONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_UI_XAML_HOSTING_HOSTINGCONTRACT_VERSION)

#if !defined(MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION)
#define MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION 0x10000
#endif // defined(MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION)

#if !defined(MICROSOFT_UI_XAML_WINUICONTRACT_VERSION)
#define MICROSOFT_UI_XAML_WINUICONTRACT_VERSION 0x80000
#endif // defined(MICROSOFT_UI_XAML_WINUICONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_ACTIVATIONCAMERASETTINGSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_CONTACTACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_ACTIVATION_WEBUISEARCHACTIVATEDEVENTSCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_BACKGROUND_BACKGROUNDALARMAPPLICATIONCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_BACKGROUND_BACKGROUNDALARMAPPLICATIONCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_BACKGROUND_BACKGROUNDALARMAPPLICATIONCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_BACKGROUND_CALLSBACKGROUNDCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_BACKGROUND_CALLSBACKGROUNDCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_BACKGROUND_CALLSBACKGROUNDCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION 0x50000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSPHONECONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSVOIPCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_CALLSVOIPCONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_CALLSVOIPCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_CALLS_LOCKSCREENCALLCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_CALLS_LOCKSCREENCALLCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_CALLS_LOCKSCREENCALLCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_COMMUNICATIONBLOCKING_COMMUNICATIONBLOCKINGCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_COMMUNICATIONBLOCKING_COMMUNICATIONBLOCKINGCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_APPLICATIONMODEL_COMMUNICATIONBLOCKING_COMMUNICATIONBLOCKINGCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_FULLTRUSTAPPCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_SEARCH_SEARCHCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_SEARCH_SEARCHCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_SEARCH_SEARCHCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_APPLICATIONMODEL_STARTUPTASKCONTRACT_VERSION)

#if !defined(WINDOWS_APPLICATIONMODEL_WALLET_WALLETCONTRACT_VERSION)
#define WINDOWS_APPLICATIONMODEL_WALLET_WALLETCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_APPLICATIONMODEL_WALLET_WALLETCONTRACT_VERSION)

#if !defined(WINDOWS_DEVICES_PRINTERS_EXTENSIONS_EXTENSIONSCONTRACT_VERSION)
#define WINDOWS_DEVICES_PRINTERS_EXTENSIONS_EXTENSIONSCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_DEVICES_PRINTERS_EXTENSIONS_EXTENSIONSCONTRACT_VERSION)

#if !defined(WINDOWS_DEVICES_SMARTCARDS_SMARTCARDBACKGROUNDTRIGGERCONTRACT_VERSION)
#define WINDOWS_DEVICES_SMARTCARDS_SMARTCARDBACKGROUNDTRIGGERCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_DEVICES_SMARTCARDS_SMARTCARDBACKGROUNDTRIGGERCONTRACT_VERSION)

#if !defined(WINDOWS_DEVICES_SMARTCARDS_SMARTCARDEMULATORCONTRACT_VERSION)
#define WINDOWS_DEVICES_SMARTCARDS_SMARTCARDEMULATORCONTRACT_VERSION 0x60000
#endif // defined(WINDOWS_DEVICES_SMARTCARDS_SMARTCARDEMULATORCONTRACT_VERSION)

#if !defined(WINDOWS_DEVICES_SMS_LEGACYSMSAPICONTRACT_VERSION)
#define WINDOWS_DEVICES_SMS_LEGACYSMSAPICONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_DEVICES_SMS_LEGACYSMSAPICONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)
#define WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_FOUNDATION_FOUNDATIONCONTRACT_VERSION)

#if !defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)
#define WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION 0x80000
#endif // defined(WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION)

#if !defined(WINDOWS_GAMING_INPUT_GAMINGINPUTPREVIEWCONTRACT_VERSION)
#define WINDOWS_GAMING_INPUT_GAMINGINPUTPREVIEWCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_GAMING_INPUT_GAMINGINPUTPREVIEWCONTRACT_VERSION)

#if !defined(WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION)
#define WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_GLOBALIZATION_GLOBALIZATIONJAPANESEPHONETICANALYZERCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPBROADCASTCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION 0x40000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPCAPTURECONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_APPCAPTUREMETADATACONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_CAMERACAPTUREUICONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION)
#define WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_CAPTURE_GAMEBARCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION)
#define WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_DEVICES_CALLCONTROLCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION)
#define WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_MEDIACONTROLCONTRACT_VERSION)

#if !defined(WINDOWS_MEDIA_PROTECTION_PROTECTIONRENEWALCONTRACT_VERSION)
#define WINDOWS_MEDIA_PROTECTION_PROTECTIONRENEWALCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_MEDIA_PROTECTION_PROTECTIONRENEWALCONTRACT_VERSION)

#if !defined(WINDOWS_NETWORKING_CONNECTIVITY_WWANCONTRACT_VERSION)
#define WINDOWS_NETWORKING_CONNECTIVITY_WWANCONTRACT_VERSION 0x20000
#endif // defined(WINDOWS_NETWORKING_CONNECTIVITY_WWANCONTRACT_VERSION)

#if !defined(WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION)
#define WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_NETWORKING_SOCKETS_CONTROLCHANNELTRIGGERCONTRACT_VERSION)

#if !defined(WINDOWS_PHONE_PHONECONTRACT_VERSION)
#define WINDOWS_PHONE_PHONECONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_PHONE_PHONECONTRACT_VERSION)

#if !defined(WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION)
#define WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_PHONE_PHONEINTERNALCONTRACT_VERSION)

#if !defined(WINDOWS_SECURITY_ENTERPRISEDATA_ENTERPRISEDATACONTRACT_VERSION)
#define WINDOWS_SECURITY_ENTERPRISEDATA_ENTERPRISEDATACONTRACT_VERSION 0x50000
#endif // defined(WINDOWS_SECURITY_ENTERPRISEDATA_ENTERPRISEDATACONTRACT_VERSION)

#if !defined(WINDOWS_STORAGE_PROVIDER_CLOUDFILESCONTRACT_VERSION)
#define WINDOWS_STORAGE_PROVIDER_CLOUDFILESCONTRACT_VERSION 0x30000
#endif // defined(WINDOWS_STORAGE_PROVIDER_CLOUDFILESCONTRACT_VERSION)

#if !defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)
#define WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION 0x60000
#endif // defined(WINDOWS_SYSTEM_SYSTEMMANAGEMENTCONTRACT_VERSION)

#if !defined(WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION)
#define WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_CORE_COREWINDOWDIALOGSCONTRACT_VERSION)

#if !defined(WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION)
#define WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_VIEWMANAGEMENT_VIEWMANAGEMENTVIEWSCALINGCONTRACT_VERSION)

#if !defined(WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION)
#define WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION 0x10000
#endif // defined(WINDOWS_UI_WEBUI_CORE_WEBUICOMMANDBARCONTRACT_VERSION)

#endif // defined(SPECIFIC_API_CONTRACT_DEFINITIONS)


// Header files for imported files
#include "inspectable.h"
#include "AsyncInfo.h"
#include "EventToken.h"
#include "windowscontracts.h"
#include "Windows.Foundation.h"
#include "Microsoft.System.h"
#include "Microsoft.UI.Composition.h"
#include "Microsoft.UI.Xaml.Automation.h"
#include "Microsoft.UI.Xaml.Automation.Peers.h"
#include "Microsoft.UI.Xaml.Controls.h"
#include "Microsoft.UI.Xaml.Controls.Primitives.h"
#include "Microsoft.UI.Xaml.Data.h"
#include "Microsoft.UI.Xaml.Hosting.h"
#include "Microsoft.UI.Xaml.Input.h"
#include "Microsoft.UI.Xaml.Media.h"
#include "Microsoft.UI.Xaml.Media.Animation.h"
#include "Microsoft.UI.Xaml.Media.Imaging.h"
#include "Microsoft.UI.Xaml.Media.Media3D.h"
#include "Windows.ApplicationModel.h"
#include "Windows.ApplicationModel.Activation.h"
#include "Windows.ApplicationModel.Core.h"
#include "Windows.ApplicationModel.DataTransfer.h"
#include "Windows.ApplicationModel.DataTransfer.DragDrop.h"
#include "Windows.Foundation.Numerics.h"
#include "Windows.Graphics.DirectX.h"
#include "Windows.Graphics.Imaging.h"
#include "Windows.UI.h"
#include "Windows.UI.Core.h"
#include "Windows.UI.Input.h"
#include "Windows.UI.Xaml.Interop.h"
// Importing Collections header
#include <windows.foundation.collections.h>

#if defined(__cplusplus) && !defined(CINTERFACE)
/* Forward Declarations */
#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IApplicationInitializationCallback;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback Microsoft::UI::Xaml::IApplicationInitializationCallback

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IBindingFailedEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler Microsoft::UI::Xaml::IBindingFailedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ICreateDefaultValueCallback;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback Microsoft::UI::Xaml::ICreateDefaultValueCallback

#endif // ____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDependencyPropertyChangedCallback;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback Microsoft::UI::Xaml::IDependencyPropertyChangedCallback

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDependencyPropertyChangedEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler Microsoft::UI::Xaml::IDependencyPropertyChangedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDragEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDragEventHandler Microsoft::UI::Xaml::IDragEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IEnteredBackgroundEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler Microsoft::UI::Xaml::IEnteredBackgroundEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IExceptionRoutedEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler Microsoft::UI::Xaml::IExceptionRoutedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ILeavingBackgroundEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler Microsoft::UI::Xaml::ILeavingBackgroundEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IPropertyChangedCallback;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback Microsoft::UI::Xaml::IPropertyChangedCallback

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IRoutedEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIRoutedEventHandler Microsoft::UI::Xaml::IRoutedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISizeChangedEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler Microsoft::UI::Xaml::ISizeChangedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISuspendingEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISuspendingEventHandler Microsoft::UI::Xaml::ISuspendingEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUnhandledExceptionEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler Microsoft::UI::Xaml::IUnhandledExceptionEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualStateChangedEventHandler;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler Microsoft::UI::Xaml::IVisualStateChangedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IAdaptiveTrigger;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger Microsoft::UI::Xaml::IAdaptiveTrigger

#endif // ____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IAdaptiveTriggerFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory Microsoft::UI::Xaml::IAdaptiveTriggerFactory

#endif // ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IAdaptiveTriggerStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics Microsoft::UI::Xaml::IAdaptiveTriggerStatics

#endif // ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplication_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplication_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IApplication;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIApplication Microsoft::UI::Xaml::IApplication

#endif // ____x_Microsoft_CUI_CXaml_CIApplication_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IApplicationFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIApplicationFactory Microsoft::UI::Xaml::IApplicationFactory

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IApplicationInitializationCallbackParams;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams Microsoft::UI::Xaml::IApplicationInitializationCallbackParams

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IApplicationOverrides;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides Microsoft::UI::Xaml::IApplicationOverrides

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IApplicationStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIApplicationStatics Microsoft::UI::Xaml::IApplicationStatics

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IAtlasRequestCallback;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback Microsoft::UI::Xaml::IAtlasRequestCallback

#endif // ____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IBindingFailedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs Microsoft::UI::Xaml::IBindingFailedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IBringIntoViewOptions;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions Microsoft::UI::Xaml::IBringIntoViewOptions

#endif // ____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IBringIntoViewRequestedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBrushTransition_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IBrushTransition;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIBrushTransition Microsoft::UI::Xaml::IBrushTransition

#endif // ____x_Microsoft_CUI_CXaml_CIBrushTransition_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IBrushTransitionFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory Microsoft::UI::Xaml::IBrushTransitionFactory

#endif // ____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IColorPaletteResources;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources Microsoft::UI::Xaml::IColorPaletteResources

#endif // ____x_Microsoft_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IColorPaletteResourcesFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory Microsoft::UI::Xaml::IColorPaletteResourcesFactory

#endif // ____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ICornerRadiusHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelper Microsoft::UI::Xaml::ICornerRadiusHelper

#endif // ____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ICornerRadiusHelperStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics Microsoft::UI::Xaml::ICornerRadiusHelperStatics

#endif // ____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDataContextChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs Microsoft::UI::Xaml::IDataContextChangedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDataTemplate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDataTemplate Microsoft::UI::Xaml::IDataTemplate

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDataTemplateExtension;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension Microsoft::UI::Xaml::IDataTemplateExtension

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDataTemplateFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDataTemplateFactory Microsoft::UI::Xaml::IDataTemplateFactory

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDataTemplateKey;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey Microsoft::UI::Xaml::IDataTemplateKey

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDataTemplateKeyFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory Microsoft::UI::Xaml::IDataTemplateKeyFactory

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDataTemplateStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics Microsoft::UI::Xaml::IDataTemplateStatics

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDebugSettings_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDebugSettings;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDebugSettings Microsoft::UI::Xaml::IDebugSettings

#endif // ____x_Microsoft_CUI_CXaml_CIDebugSettings_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDependencyObject;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDependencyObject Microsoft::UI::Xaml::IDependencyObject

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDependencyObjectCollectionFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory Microsoft::UI::Xaml::IDependencyObjectCollectionFactory

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDependencyObjectFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory Microsoft::UI::Xaml::IDependencyObjectFactory

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDependencyProperty;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDependencyProperty Microsoft::UI::Xaml::IDependencyProperty

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDependencyPropertyChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs Microsoft::UI::Xaml::IDependencyPropertyChangedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDependencyPropertyStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics Microsoft::UI::Xaml::IDependencyPropertyStatics

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDispatcherTimer;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer Microsoft::UI::Xaml::IDispatcherTimer

#endif // ____x_Microsoft_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDispatcherTimerFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory Microsoft::UI::Xaml::IDispatcherTimerFactory

#endif // ____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDragEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDragEventArgs Microsoft::UI::Xaml::IDragEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDragOperationDeferral;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDragOperationDeferral Microsoft::UI::Xaml::IDragOperationDeferral

#endif // ____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDragStartingEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs Microsoft::UI::Xaml::IDragStartingEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragUI_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragUI_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDragUI;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDragUI Microsoft::UI::Xaml::IDragUI

#endif // ____x_Microsoft_CUI_CXaml_CIDragUI_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDragUIOverride;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDragUIOverride Microsoft::UI::Xaml::IDragUIOverride

#endif // ____x_Microsoft_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDropCompletedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs Microsoft::UI::Xaml::IDropCompletedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDurationHelper_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDurationHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDurationHelper Microsoft::UI::Xaml::IDurationHelper

#endif // ____x_Microsoft_CUI_CXaml_CIDurationHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDurationHelperStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics Microsoft::UI::Xaml::IDurationHelperStatics

#endif // ____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDxamlCoreTestHooks;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks Microsoft::UI::Xaml::IDxamlCoreTestHooks

#endif // ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IDxamlCoreTestHooksStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics Microsoft::UI::Xaml::IDxamlCoreTestHooksStatics

#endif // ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IEffectiveViewportChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs Microsoft::UI::Xaml::IEffectiveViewportChangedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IElementFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIElementFactory Microsoft::UI::Xaml::IElementFactory

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IElementFactoryGetArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs Microsoft::UI::Xaml::IElementFactoryGetArgs

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IElementFactoryGetArgsFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory Microsoft::UI::Xaml::IElementFactoryGetArgsFactory

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IElementFactoryRecycleArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs Microsoft::UI::Xaml::IElementFactoryRecycleArgs

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IElementFactoryRecycleArgsFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory Microsoft::UI::Xaml::IElementFactoryRecycleArgsFactory

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IElementSoundPlayer;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayer Microsoft::UI::Xaml::IElementSoundPlayer

#endif // ____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IElementSoundPlayerStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics Microsoft::UI::Xaml::IElementSoundPlayerStatics

#endif // ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IElementSoundPlayerStaticsPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate Microsoft::UI::Xaml::IElementSoundPlayerStaticsPrivate

#endif // ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIEventTrigger_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IEventTrigger;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIEventTrigger Microsoft::UI::Xaml::IEventTrigger

#endif // ____x_Microsoft_CUI_CXaml_CIEventTrigger_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IExceptionRoutedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs Microsoft::UI::Xaml::IExceptionRoutedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IExceptionRoutedEventArgsFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory Microsoft::UI::Xaml::IExceptionRoutedEventArgsFactory

#endif // ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkApplicationPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate Microsoft::UI::Xaml::IFrameworkApplicationPrivate

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkApplicationStaticsPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate Microsoft::UI::Xaml::IFrameworkApplicationStaticsPrivate

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkElement;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkElement Microsoft::UI::Xaml::IFrameworkElement

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkElementFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory Microsoft::UI::Xaml::IFrameworkElementFactory

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkElementOverrides;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides Microsoft::UI::Xaml::IFrameworkElementOverrides

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkElementProtected;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected Microsoft::UI::Xaml::IFrameworkElementProtected

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkElementStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics Microsoft::UI::Xaml::IFrameworkElementStatics

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkTemplate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplate Microsoft::UI::Xaml::IFrameworkTemplate

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkTemplateFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory Microsoft::UI::Xaml::IFrameworkTemplateFactory

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkTemplatePrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate Microsoft::UI::Xaml::IFrameworkTemplatePrivate

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkView_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkView;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkView Microsoft::UI::Xaml::IFrameworkView

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkView_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IFrameworkViewSource;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIFrameworkViewSource Microsoft::UI::Xaml::IFrameworkViewSource

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IGridLengthHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIGridLengthHelper Microsoft::UI::Xaml::IGridLengthHelper

#endif // ____x_Microsoft_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IGridLengthHelperStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics Microsoft::UI::Xaml::IGridLengthHelperStatics

#endif // ____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ILaunchActivatedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs Microsoft::UI::Xaml::ILaunchActivatedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IMediaFailedRoutedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs Microsoft::UI::Xaml::IMediaFailedRoutedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IMemoryInfoPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate Microsoft::UI::Xaml::IMemoryInfoPrivate

#endif // ____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPointHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPointHelper_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IPointHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIPointHelper Microsoft::UI::Xaml::IPointHelper

#endif // ____x_Microsoft_CUI_CXaml_CIPointHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IPointHelperStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIPointHelperStatics Microsoft::UI::Xaml::IPointHelperStatics

#endif // ____x_Microsoft_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IPropertyMetadata;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata Microsoft::UI::Xaml::IPropertyMetadata

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IPropertyMetadataFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory Microsoft::UI::Xaml::IPropertyMetadataFactory

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IPropertyMetadataStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics Microsoft::UI::Xaml::IPropertyMetadataStatics

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyPath_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IPropertyPath;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIPropertyPath Microsoft::UI::Xaml::IPropertyPath

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyPath_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IPropertyPathFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIPropertyPathFactory Microsoft::UI::Xaml::IPropertyPathFactory

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRectHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRectHelper_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IRectHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIRectHelper Microsoft::UI::Xaml::IRectHelper

#endif // ____x_Microsoft_CUI_CXaml_CIRectHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IRectHelperStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics Microsoft::UI::Xaml::IRectHelperStatics

#endif // ____x_Microsoft_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IRectHelperStaticsPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate Microsoft::UI::Xaml::IRectHelperStaticsPrivate

#endif // ____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IResourceDictionary;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIResourceDictionary Microsoft::UI::Xaml::IResourceDictionary

#endif // ____x_Microsoft_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IResourceDictionaryFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory Microsoft::UI::Xaml::IResourceDictionaryFactory

#endif // ____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IRoutedEvent;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIRoutedEvent Microsoft::UI::Xaml::IRoutedEvent

#endif // ____x_Microsoft_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IRoutedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgs Microsoft::UI::Xaml::IRoutedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IRoutedEventArgsFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory Microsoft::UI::Xaml::IRoutedEventArgsFactory

#endif // ____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIScalarTransition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIScalarTransition_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IScalarTransition;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIScalarTransition Microsoft::UI::Xaml::IScalarTransition

#endif // ____x_Microsoft_CUI_CXaml_CIScalarTransition_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IScalarTransitionFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory Microsoft::UI::Xaml::IScalarTransitionFactory

#endif // ____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetter_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetter_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISetter;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISetter Microsoft::UI::Xaml::ISetter

#endif // ____x_Microsoft_CUI_CXaml_CISetter_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetterBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetterBase_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISetterBase;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISetterBase Microsoft::UI::Xaml::ISetterBase

#endif // ____x_Microsoft_CUI_CXaml_CISetterBase_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISetterBaseCollection;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISetterBaseCollection Microsoft::UI::Xaml::ISetterBaseCollection

#endif // ____x_Microsoft_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISetterBaseFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISetterBaseFactory Microsoft::UI::Xaml::ISetterBaseFactory

#endif // ____x_Microsoft_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetterFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetterFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISetterFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISetterFactory Microsoft::UI::Xaml::ISetterFactory

#endif // ____x_Microsoft_CUI_CXaml_CISetterFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISizeChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs Microsoft::UI::Xaml::ISizeChangedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISizeHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISizeHelper_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISizeHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISizeHelper Microsoft::UI::Xaml::ISizeHelper

#endif // ____x_Microsoft_CUI_CXaml_CISizeHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISizeHelperStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics Microsoft::UI::Xaml::ISizeHelperStatics

#endif // ____x_Microsoft_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ISourceInfoPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate Microsoft::UI::Xaml::ISourceInfoPrivate

#endif // ____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTrigger_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IStateTrigger;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIStateTrigger Microsoft::UI::Xaml::IStateTrigger

#endif // ____x_Microsoft_CUI_CXaml_CIStateTrigger_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IStateTriggerBase;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIStateTriggerBase Microsoft::UI::Xaml::IStateTriggerBase

#endif // ____x_Microsoft_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IStateTriggerBaseFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory Microsoft::UI::Xaml::IStateTriggerBaseFactory

#endif // ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IStateTriggerBaseProtected;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected Microsoft::UI::Xaml::IStateTriggerBaseProtected

#endif // ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IStateTriggerStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIStateTriggerStatics Microsoft::UI::Xaml::IStateTriggerStatics

#endif // ____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStyle_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStyle_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IStyle;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIStyle Microsoft::UI::Xaml::IStyle

#endif // ____x_Microsoft_CUI_CXaml_CIStyle_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStyleFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IStyleFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIStyleFactory Microsoft::UI::Xaml::IStyleFactory

#endif // ____x_Microsoft_CUI_CXaml_CIStyleFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ITargetPropertyPath;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath Microsoft::UI::Xaml::ITargetPropertyPath

#endif // ____x_Microsoft_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ITargetPropertyPathFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory Microsoft::UI::Xaml::ITargetPropertyPathFactory

#endif // ____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IThicknessHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIThicknessHelper Microsoft::UI::Xaml::IThicknessHelper

#endif // ____x_Microsoft_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IThicknessHelperStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics Microsoft::UI::Xaml::IThicknessHelperStatics

#endif // ____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITriggerAction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITriggerAction_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ITriggerAction;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CITriggerAction Microsoft::UI::Xaml::ITriggerAction

#endif // ____x_Microsoft_CUI_CXaml_CITriggerAction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ITriggerActionFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CITriggerActionFactory Microsoft::UI::Xaml::ITriggerActionFactory

#endif // ____x_Microsoft_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITriggerBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITriggerBase_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ITriggerBase;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CITriggerBase Microsoft::UI::Xaml::ITriggerBase

#endif // ____x_Microsoft_CUI_CXaml_CITriggerBase_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface ITriggerBaseFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CITriggerBaseFactory Microsoft::UI::Xaml::ITriggerBaseFactory

#endif // ____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUIElement;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUIElement Microsoft::UI::Xaml::IUIElement

#endif // ____x_Microsoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUIElementFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUIElementFactory Microsoft::UI::Xaml::IUIElementFactory

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUIElementHostingPreviewStaticsPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate Microsoft::UI::Xaml::IUIElementHostingPreviewStaticsPrivate

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUIElementOverrides;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides Microsoft::UI::Xaml::IUIElementOverrides

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUIElementStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUIElementStatics Microsoft::UI::Xaml::IUIElementStatics

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUIElementStaticsPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate Microsoft::UI::Xaml::IUIElementStaticsPrivate

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUIElementWeakCollectionFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory Microsoft::UI::Xaml::IUIElementWeakCollectionFactory

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IUnhandledExceptionEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs Microsoft::UI::Xaml::IUnhandledExceptionEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVector3Transition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVector3Transition_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVector3Transition;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVector3Transition Microsoft::UI::Xaml::IVector3Transition

#endif // ____x_Microsoft_CUI_CXaml_CIVector3Transition_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVector3TransitionFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory Microsoft::UI::Xaml::IVector3TransitionFactory

#endif // ____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualState_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualState_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualState;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualState Microsoft::UI::Xaml::IVisualState

#endif // ____x_Microsoft_CUI_CXaml_CIVisualState_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualStateChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs Microsoft::UI::Xaml::IVisualStateChangedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualStateGroup;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup Microsoft::UI::Xaml::IVisualStateGroup

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualStateManager;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualStateManager Microsoft::UI::Xaml::IVisualStateManager

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualStateManagerFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory Microsoft::UI::Xaml::IVisualStateManagerFactory

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualStateManagerOverrides;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides Microsoft::UI::Xaml::IVisualStateManagerOverrides

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualStateManagerProtected;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected Microsoft::UI::Xaml::IVisualStateManagerProtected

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualStateManagerStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics Microsoft::UI::Xaml::IVisualStateManagerStatics

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualTransition_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualTransition;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualTransition Microsoft::UI::Xaml::IVisualTransition

#endif // ____x_Microsoft_CUI_CXaml_CIVisualTransition_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IVisualTransitionFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory Microsoft::UI::Xaml::IVisualTransitionFactory

#endif // ____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindow_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindow;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindow Microsoft::UI::Xaml::IWindow

#endif // ____x_Microsoft_CUI_CXaml_CIWindow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindowActivatedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs Microsoft::UI::Xaml::IWindowActivatedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindowCreatedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs Microsoft::UI::Xaml::IWindowCreatedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindowEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs Microsoft::UI::Xaml::IWindowEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIWindowEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowFactory_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindowFactory;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindowFactory Microsoft::UI::Xaml::IWindowFactory

#endif // ____x_Microsoft_CUI_CXaml_CIWindowFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowPrivate_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindowPrivate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindowPrivate Microsoft::UI::Xaml::IWindowPrivate

#endif // ____x_Microsoft_CUI_CXaml_CIWindowPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindowSizeChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs Microsoft::UI::Xaml::IWindowSizeChangedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindowStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindowStatics Microsoft::UI::Xaml::IWindowStatics

#endif // ____x_Microsoft_CUI_CXaml_CIWindowStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IWindowVisibilityChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs Microsoft::UI::Xaml::IWindowVisibilityChangedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IXamlRoot;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIXamlRoot Microsoft::UI::Xaml::IXamlRoot

#endif // ____x_Microsoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IXamlRootChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs Microsoft::UI::Xaml::IXamlRootChangedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIXamlRootStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIXamlRootStatics_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            interface IXamlRootStatics;
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CIXamlRootStatics Microsoft::UI::Xaml::IXamlRootStatics

#endif // ____x_Microsoft_CUI_CXaml_CIXamlRootStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C++)

// Collection interface definitions

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DependencyObject;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bb6cf1cd-b929-526d-a974-ec7dee468fc8"))
IIterator<Microsoft::UI::Xaml::DependencyObject*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DependencyObject*, Microsoft::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::DependencyObject*> __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IDependencyObject*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e47eeac7-4045-5e48-a05b-8a1cc8d10d1b"))
IIterable<Microsoft::UI::Xaml::DependencyObject*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DependencyObject*, Microsoft::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::DependencyObject*> __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IDependencyObject*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000




#ifndef DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("59e7ae0c-c29d-5ad6-bef5-dedb52a198e1"))
IKeyValuePair<IInspectable*,IInspectable*> : IKeyValuePair_impl<IInspectable*,IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<IInspectable*,IInspectable*> __FIKeyValuePair_2_IInspectable_IInspectable_t;
#define __FIKeyValuePair_2_IInspectable_IInspectable Windows::Foundation::Collections::__FIKeyValuePair_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIKeyValuePair_2_IInspectable_IInspectable Windows::Foundation::Collections::IKeyValuePair<IInspectable*,IInspectable*>
//#define __FIKeyValuePair_2_IInspectable_IInspectable_t Windows::Foundation::Collections::IKeyValuePair<IInspectable*,IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_IInspectable_IInspectable_USE */





#ifndef DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("31e55e8a-0f05-52fd-90d3-b04aa331aaa4"))
IIterator<__FIKeyValuePair_2_IInspectable_IInspectable*> : IIterator_impl<__FIKeyValuePair_2_IInspectable_IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_IInspectable_IInspectable*> __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_t;
#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable*,IInspectable*>*>
//#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_t Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable*,IInspectable*>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_USE */





#ifndef DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("33ac68f0-1084-529a-8a17-4e7c8adb7a0c"))
IIterable<__FIKeyValuePair_2_IInspectable_IInspectable*> : IIterable_impl<__FIKeyValuePair_2_IInspectable_IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<Object, Object>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_IInspectable_IInspectable*> __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_t;
#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable*,IInspectable*>*>
//#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_t Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable*,IInspectable*>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_USE */






#ifndef DEF___FIMapView_2_IInspectable_IInspectable_USE
#define DEF___FIMapView_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("efe76d10-cb60-50ad-8a4f-6885cd6212a1"))
IMapView<IInspectable*,IInspectable*> : IMapView_impl<IInspectable*,IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMapView`2<Object, Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<IInspectable*,IInspectable*> __FIMapView_2_IInspectable_IInspectable_t;
#define __FIMapView_2_IInspectable_IInspectable Windows::Foundation::Collections::__FIMapView_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMapView_2_IInspectable_IInspectable Windows::Foundation::Collections::IMapView<IInspectable*,IInspectable*>
//#define __FIMapView_2_IInspectable_IInspectable_t Windows::Foundation::Collections::IMapView<IInspectable*,IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_IInspectable_IInspectable_USE */






#ifndef DEF___FIMap_2_IInspectable_IInspectable_USE
#define DEF___FIMap_2_IInspectable_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("f5f69427-55ed-5512-8429-d4f6626dfcdd"))
IMap<IInspectable*,IInspectable*> : IMap_impl<IInspectable*,IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMap`2<Object, Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<IInspectable*,IInspectable*> __FIMap_2_IInspectable_IInspectable_t;
#define __FIMap_2_IInspectable_IInspectable Windows::Foundation::Collections::__FIMap_2_IInspectable_IInspectable_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMap_2_IInspectable_IInspectable Windows::Foundation::Collections::IMap<IInspectable*,IInspectable*>
//#define __FIMap_2_IInspectable_IInspectable_t Windows::Foundation::Collections::IMap<IInspectable*,IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_IInspectable_IInspectable_USE */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ResourceDictionary;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9483d8a0-2803-50f1-98db-fa3a7e6a56b3"))
IIterator<Microsoft::UI::Xaml::ResourceDictionary*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::ResourceDictionary*, Microsoft::UI::Xaml::IResourceDictionary*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.ResourceDictionary>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::ResourceDictionary*> __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IResourceDictionary*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IResourceDictionary*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1da2bea2-3287-5edf-b62e-0d073c68ce0b"))
IIterable<Microsoft::UI::Xaml::ResourceDictionary*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::ResourceDictionary*, Microsoft::UI::Xaml::IResourceDictionary*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.ResourceDictionary>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::ResourceDictionary*> __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IResourceDictionary*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IResourceDictionary*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class SetterBase;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("555894a1-cc82-5af0-b220-53e73b2dba33"))
IIterator<Microsoft::UI::Xaml::SetterBase*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::SetterBase*, Microsoft::UI::Xaml::ISetterBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.SetterBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::SetterBase*> __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::ISetterBase*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::ISetterBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("9fa9cd08-8676-51ab-aff6-604d0ddea185"))
IIterable<Microsoft::UI::Xaml::SetterBase*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::SetterBase*, Microsoft::UI::Xaml::ISetterBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.SetterBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::SetterBase*> __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::ISetterBase*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::ISetterBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class StateTriggerBase;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3cd61913-6c9b-585f-ad3e-cbfb80453a7a"))
IIterator<Microsoft::UI::Xaml::StateTriggerBase*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::StateTriggerBase*, Microsoft::UI::Xaml::IStateTriggerBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.StateTriggerBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::StateTriggerBase*> __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IStateTriggerBase*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IStateTriggerBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("b497741b-5419-5197-bff0-67f844e5e7ad"))
IIterable<Microsoft::UI::Xaml::StateTriggerBase*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::StateTriggerBase*, Microsoft::UI::Xaml::IStateTriggerBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.StateTriggerBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::StateTriggerBase*> __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IStateTriggerBase*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IStateTriggerBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class TriggerAction;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2409dbc6-f975-5ad2-8f13-114819bf7fdd"))
IIterator<Microsoft::UI::Xaml::TriggerAction*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::TriggerAction*, Microsoft::UI::Xaml::ITriggerAction*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.TriggerAction>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::TriggerAction*> __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::ITriggerAction*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::ITriggerAction*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("de3e0f0b-06a7-5c3e-a52a-b53d2cd809d2"))
IIterable<Microsoft::UI::Xaml::TriggerAction*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::TriggerAction*, Microsoft::UI::Xaml::ITriggerAction*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.TriggerAction>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::TriggerAction*> __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::ITriggerAction*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::ITriggerAction*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class TriggerBase;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("93d0f9fa-22d2-5e84-ac72-aacf06f97900"))
IIterator<Microsoft::UI::Xaml::TriggerBase*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::TriggerBase*, Microsoft::UI::Xaml::ITriggerBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.TriggerBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::TriggerBase*> __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::ITriggerBase*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::ITriggerBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4fb6a3b8-0c07-57c1-aca7-a7bc453b91e2"))
IIterable<Microsoft::UI::Xaml::TriggerBase*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::TriggerBase*, Microsoft::UI::Xaml::ITriggerBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.TriggerBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::TriggerBase*> __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::ITriggerBase*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::ITriggerBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class UIElement;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CUIElement_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("bfb0697d-5e83-5397-becf-d15b3f89552d"))
IIterator<Microsoft::UI::Xaml::UIElement*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.UIElement>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::UIElement*> __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IUIElement*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IUIElement*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CUIElement_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CUIElement_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("2a1b0809-f688-5aff-94a6-677eb0bc8884"))
IIterable<Microsoft::UI::Xaml::UIElement*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.UIElement>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::UIElement*> __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IUIElement*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IUIElement*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CUIElement_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class VisualState;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualState_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("cd297392-960b-5dd7-b522-eb920a0eaeae"))
IIterator<Microsoft::UI::Xaml::VisualState*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualState*, Microsoft::UI::Xaml::IVisualState*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.VisualState>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::VisualState*> __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CVisualState_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IVisualState*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IVisualState*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualState_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualState_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3f8d5041-b506-5ad0-b3b6-89a1162e87b1"))
IIterable<Microsoft::UI::Xaml::VisualState*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualState*, Microsoft::UI::Xaml::IVisualState*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.VisualState>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::VisualState*> __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CVisualState_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IVisualState*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IVisualState*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualState_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class VisualStateGroup;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c8d02e0b-8835-57af-a12e-61386f22bbc8"))
IIterator<Microsoft::UI::Xaml::VisualStateGroup*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualStateGroup*, Microsoft::UI::Xaml::IVisualStateGroup*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.VisualStateGroup>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::VisualStateGroup*> __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IVisualStateGroup*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IVisualStateGroup*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1440de85-e884-545a-9356-12a93e3a08fd"))
IIterable<Microsoft::UI::Xaml::VisualStateGroup*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualStateGroup*, Microsoft::UI::Xaml::IVisualStateGroup*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.VisualStateGroup>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::VisualStateGroup*> __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IVisualStateGroup*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IVisualStateGroup*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class VisualTransition;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8979e218-236f-5935-a956-66c4ac1bd5e5"))
IIterator<Microsoft::UI::Xaml::VisualTransition*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualTransition*, Microsoft::UI::Xaml::IVisualTransition*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.VisualTransition>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::VisualTransition*> __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IVisualTransition*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::IVisualTransition*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5b14edfc-6706-5c9d-af5c-f0e7844791ad"))
IIterable<Microsoft::UI::Xaml::VisualTransition*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualTransition*, Microsoft::UI::Xaml::IVisualTransition*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.VisualTransition>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::VisualTransition*> __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IVisualTransition*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::IVisualTransition*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DataTemplate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#define DEF___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("14f26bce-f317-5d51-b47c-96a9c6d6ad14"))
IKeyValuePair<HSTRING,Microsoft::UI::Xaml::DataTemplate*> : IKeyValuePair_impl<HSTRING,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DataTemplate*, Microsoft::UI::Xaml::IDataTemplate*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IKeyValuePair`2<String, Microsoft.UI.Xaml.DataTemplate>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IKeyValuePair<HSTRING,Microsoft::UI::Xaml::DataTemplate*> __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t;
#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>
//#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#define DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("91308579-0a29-5eb2-9537-d2da72e5cf75"))
IIterator<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate*> : IIterator_impl<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Microsoft.UI.Xaml.DataTemplate>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate*> __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t;
#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::__FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>*>
//#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#define DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8324d347-cf61-502b-8d1f-85603d7be5b9"))
IIterable<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate*> : IIterable_impl<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IKeyValuePair`2<String, Microsoft.UI.Xaml.DataTemplate>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate*> __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t;
#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::__FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>*>
//#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#define DEF___FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d600c36a-d0e8-5dfe-8c82-e985c1146cc2"))
IMapView<HSTRING,Microsoft::UI::Xaml::DataTemplate*> : IMapView_impl<HSTRING,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DataTemplate*, Microsoft::UI::Xaml::IDataTemplate*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMapView`2<String, Microsoft.UI.Xaml.DataTemplate>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMapView<HSTRING,Microsoft::UI::Xaml::DataTemplate*> __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t;
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::__FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::IMapView<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>
//#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t Windows::Foundation::Collections::IMapView<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#define DEF___FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4502dbf2-e012-5267-881b-6de613e4b853"))
IMap<HSTRING,Microsoft::UI::Xaml::DataTemplate*> : IMap_impl<HSTRING,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DataTemplate*, Microsoft::UI::Xaml::IDataTemplate*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IMap`2<String, Microsoft.UI.Xaml.DataTemplate>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IMap<HSTRING,Microsoft::UI::Xaml::DataTemplate*> __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t;
#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::__FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate Windows::Foundation::Collections::IMap<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>
//#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_t Windows::Foundation::Collections::IMap<HSTRING,Microsoft::UI::Xaml::IDataTemplate*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dd6705ee-fcea-5b4e-9d6e-ece0ee25f462"))
IVectorView<Microsoft::UI::Xaml::DependencyObject*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DependencyObject*, Microsoft::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::DependencyObject*> __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IDependencyObject*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4231226d-746b-5a0d-b6d4-cd1be7905a72"))
IVector<Microsoft::UI::Xaml::DependencyObject*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DependencyObject*, Microsoft::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::DependencyObject*> __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IDependencyObject*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#define DEF___FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("dfe44040-e7fc-5530-9010-11a2256f724a"))
VectorChangedEventHandler<Microsoft::UI::Xaml::DependencyObject*> : VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DependencyObject*, Microsoft::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.VectorChangedEventHandler`1<Microsoft.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef VectorChangedEventHandler<Microsoft::UI::Xaml::DependencyObject*> __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_t;
#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::__FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::VectorChangedEventHandler<Microsoft::UI::Xaml::IDependencyObject*>
//#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_t Windows::Foundation::Collections::VectorChangedEventHandler<Microsoft::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#define DEF___FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("8da0d78c-cf14-5d44-a14d-d4fb7f2599d9"))
IObservableVector<Microsoft::UI::Xaml::DependencyObject*> : IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DependencyObject*, Microsoft::UI::Xaml::IDependencyObject*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IObservableVector`1<Microsoft.UI.Xaml.DependencyObject>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IObservableVector<Microsoft::UI::Xaml::DependencyObject*> __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_t;
#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::__FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject Windows::Foundation::Collections::IObservableVector<Microsoft::UI::Xaml::IDependencyObject*>
//#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_t Windows::Foundation::Collections::IObservableVector<Microsoft::UI::Xaml::IDependencyObject*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("1afc35b6-d46b-5d29-a9f6-e21e68b05846"))
IVectorView<Microsoft::UI::Xaml::ResourceDictionary*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::ResourceDictionary*, Microsoft::UI::Xaml::IResourceDictionary*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.ResourceDictionary>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::ResourceDictionary*> __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IResourceDictionary*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IResourceDictionary*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("01f305aa-8ef8-5237-8767-5adaa3b4a524"))
IVectorView<Microsoft::UI::Xaml::SetterBase*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::SetterBase*, Microsoft::UI::Xaml::ISetterBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.SetterBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::SetterBase*> __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::ISetterBase*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::ISetterBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("00c2e28d-9e12-5d23-af85-a4d9919168bf"))
IVectorView<Microsoft::UI::Xaml::StateTriggerBase*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::StateTriggerBase*, Microsoft::UI::Xaml::IStateTriggerBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.StateTriggerBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::StateTriggerBase*> __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IStateTriggerBase*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IStateTriggerBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e27d0c8f-3f78-5ef2-a8bf-d21e7e771a4d"))
IVectorView<Microsoft::UI::Xaml::TriggerAction*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::TriggerAction*, Microsoft::UI::Xaml::ITriggerAction*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.TriggerAction>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::TriggerAction*> __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::ITriggerAction*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::ITriggerAction*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4b947794-8e5c-5fed-87be-4d2b3729bdd7"))
IVectorView<Microsoft::UI::Xaml::TriggerBase*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::TriggerBase*, Microsoft::UI::Xaml::ITriggerBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.TriggerBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::TriggerBase*> __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::ITriggerBase*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::ITriggerBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("af80b81b-9c6e-5ac6-b425-801e81036ff9"))
IVectorView<Microsoft::UI::Xaml::UIElement*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.UIElement>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::UIElement*> __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IUIElement*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IUIElement*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5c9df898-d0f9-5196-96a4-28722acca2a2"))
IVectorView<Microsoft::UI::Xaml::VisualState*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualState*, Microsoft::UI::Xaml::IVisualState*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.VisualState>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::VisualState*> __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IVisualState*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IVisualState*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("7d50bfbc-971e-53d7-8bff-bf3519d7349c"))
IVectorView<Microsoft::UI::Xaml::VisualStateGroup*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualStateGroup*, Microsoft::UI::Xaml::IVisualStateGroup*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.VisualStateGroup>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::VisualStateGroup*> __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IVisualStateGroup*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IVisualStateGroup*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("94a2368c-5ab9-58d5-b917-e201ba8643fd"))
IVectorView<Microsoft::UI::Xaml::VisualTransition*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualTransition*, Microsoft::UI::Xaml::IVisualTransition*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.VisualTransition>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::VisualTransition*> __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IVisualTransition*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::IVisualTransition*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c6fbfe1a-f015-5b23-8e7e-14497e9707a1"))
IVector<Microsoft::UI::Xaml::ResourceDictionary*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::ResourceDictionary*, Microsoft::UI::Xaml::IResourceDictionary*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.ResourceDictionary>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::ResourceDictionary*> __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IResourceDictionary*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IResourceDictionary*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CSetterBase_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CSetterBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4357f913-f457-553b-8475-52acd4ab3599"))
IVector<Microsoft::UI::Xaml::SetterBase*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::SetterBase*, Microsoft::UI::Xaml::ISetterBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.SetterBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::SetterBase*> __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CSetterBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::ISetterBase*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::ISetterBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CSetterBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("df1e41c3-5b3e-55be-86cf-c9242a9a0293"))
IVector<Microsoft::UI::Xaml::StateTriggerBase*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::StateTriggerBase*, Microsoft::UI::Xaml::IStateTriggerBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.StateTriggerBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::StateTriggerBase*> __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IStateTriggerBase*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IStateTriggerBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0e7f69a2-ac1a-5888-ba0c-144d4c07e82d"))
IVector<Microsoft::UI::Xaml::TriggerAction*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::TriggerAction*, Microsoft::UI::Xaml::ITriggerAction*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.TriggerAction>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::TriggerAction*> __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::ITriggerAction*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::ITriggerAction*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ef52e000-0b0f-52b5-bdfe-4f5935dcf1bc"))
IVector<Microsoft::UI::Xaml::TriggerBase*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::TriggerBase*, Microsoft::UI::Xaml::ITriggerBase*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.TriggerBase>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::TriggerBase*> __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::ITriggerBase*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::ITriggerBase*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CUIElement_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CUIElement_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("26919880-d3be-52c5-a150-76a6810a1346"))
IVector<Microsoft::UI::Xaml::UIElement*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.UIElement>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::UIElement*> __FIVector_1_Microsoft__CUI__CXaml__CUIElement_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CUIElement_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IUIElement*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IUIElement*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CUIElement_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualState_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualState_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("d9a7e4ce-6753-58d9-9314-983be67762fc"))
IVector<Microsoft::UI::Xaml::VisualState*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualState*, Microsoft::UI::Xaml::IVisualState*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.VisualState>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::VisualState*> __FIVector_1_Microsoft__CUI__CXaml__CVisualState_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CVisualState_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IVisualState*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IVisualState*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualState_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("533324a4-e624-5041-ba1a-69eb5d006acf"))
IVector<Microsoft::UI::Xaml::VisualStateGroup*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualStateGroup*, Microsoft::UI::Xaml::IVisualStateGroup*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.VisualStateGroup>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::VisualStateGroup*> __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IVisualStateGroup*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IVisualStateGroup*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("937ffd52-1b1e-5700-adef-8fd156d58003"))
IVector<Microsoft::UI::Xaml::VisualTransition*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::VisualTransition*, Microsoft::UI::Xaml::IVisualTransition*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.VisualTransition>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::VisualTransition*> __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IVisualTransition*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::IVisualTransition*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class WindowActivatedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_USE
#define DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("e5299329-636a-5c20-a38a-12df43f6d038"))
ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::WindowActivatedEventArgs*> : ITypedEventHandler_impl<IInspectable*,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::WindowActivatedEventArgs*, Microsoft::UI::Xaml::IWindowActivatedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Object, Microsoft.UI.Xaml.WindowActivatedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::WindowActivatedEventArgs*> __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_t;
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs Windows::Foundation::__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::IWindowActivatedEventArgs*>
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_t Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::IWindowActivatedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class WindowEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_USE
#define DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2a954d28-7f8b-5479-8ce9-900424a0409f"))
ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::WindowEventArgs*> : ITypedEventHandler_impl<IInspectable*,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::WindowEventArgs*, Microsoft::UI::Xaml::IWindowEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Object, Microsoft.UI.Xaml.WindowEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::WindowEventArgs*> __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_t;
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs Windows::Foundation::__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::IWindowEventArgs*>
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_t Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::IWindowEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class WindowSizeChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("5ac3fe68-1312-5598-b097-5c789fe72fba"))
ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::WindowSizeChangedEventArgs*> : ITypedEventHandler_impl<IInspectable*,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::WindowSizeChangedEventArgs*, Microsoft::UI::Xaml::IWindowSizeChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Object, Microsoft.UI.Xaml.WindowSizeChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::WindowSizeChangedEventArgs*> __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_t;
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs Windows::Foundation::__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::IWindowSizeChangedEventArgs*>
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_t Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::IWindowSizeChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class WindowVisibilityChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c5011004-f9a8-521d-9b1d-d7cd184889f8"))
ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::WindowVisibilityChangedEventArgs*> : ITypedEventHandler_impl<IInspectable*,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::WindowVisibilityChangedEventArgs*, Microsoft::UI::Xaml::IWindowVisibilityChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Object, Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::WindowVisibilityChangedEventArgs*> __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_t;
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs Windows::Foundation::__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::IWindowVisibilityChangedEventArgs*>
//#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_t Windows::Foundation::ITypedEventHandler<IInspectable*,Microsoft::UI::Xaml::IWindowVisibilityChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class FrameworkElement;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("53876073-be4f-5dac-9ae0-015db6e40c74"))
ITypedEventHandler<Microsoft::UI::Xaml::FrameworkElement*,IInspectable*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::FrameworkElement*, Microsoft::UI::Xaml::IFrameworkElement*>,IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.FrameworkElement, Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::FrameworkElement*,IInspectable*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IFrameworkElement*,IInspectable*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IFrameworkElement*,IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DataContextChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("4e4ec708-def4-5d93-8690-dfc5f9233c53"))
ITypedEventHandler<Microsoft::UI::Xaml::FrameworkElement*,Microsoft::UI::Xaml::DataContextChangedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::FrameworkElement*, Microsoft::UI::Xaml::IFrameworkElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DataContextChangedEventArgs*, Microsoft::UI::Xaml::IDataContextChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.FrameworkElement, Microsoft.UI.Xaml.DataContextChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::FrameworkElement*,Microsoft::UI::Xaml::DataContextChangedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IFrameworkElement*,Microsoft::UI::Xaml::IDataContextChangedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IFrameworkElement*,Microsoft::UI::Xaml::IDataContextChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class EffectiveViewportChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("276f9f20-9e38-5aed-b5a8-68b25ec409c2"))
ITypedEventHandler<Microsoft::UI::Xaml::FrameworkElement*,Microsoft::UI::Xaml::EffectiveViewportChangedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::FrameworkElement*, Microsoft::UI::Xaml::IFrameworkElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::EffectiveViewportChangedEventArgs*, Microsoft::UI::Xaml::IEffectiveViewportChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.FrameworkElement, Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::FrameworkElement*,Microsoft::UI::Xaml::EffectiveViewportChangedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IFrameworkElement*,Microsoft::UI::Xaml::IEffectiveViewportChangedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IFrameworkElement*,Microsoft::UI::Xaml::IEffectiveViewportChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class BringIntoViewRequestedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("2fda8b21-e764-5519-8ed4-a72b7abff3b8"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::BringIntoViewRequestedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::BringIntoViewRequestedEventArgs*, Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::BringIntoViewRequestedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DragStartingEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("243c3e97-5e68-5372-b2f8-6cdcaa2b1e80"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::DragStartingEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DragStartingEventArgs*, Microsoft::UI::Xaml::IDragStartingEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.DragStartingEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::DragStartingEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::IDragStartingEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::IDragStartingEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DropCompletedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("1b8a0482-0561-5d62-b2ec-1d558720afbc"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::DropCompletedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::DropCompletedEventArgs*, Microsoft::UI::Xaml::IDropCompletedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.DropCompletedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::DropCompletedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::IDropCompletedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::IDropCompletedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class RoutedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3776416f-a251-5594-b60d-31995552cb5c"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::RoutedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::RoutedEventArgs*, Microsoft::UI::Xaml::IRoutedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.RoutedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::RoutedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::IRoutedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::IRoutedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class XamlRoot;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class XamlRootChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("9aeadceb-2169-57c9-b750-6d3ee438a415"))
ITypedEventHandler<Microsoft::UI::Xaml::XamlRoot*,Microsoft::UI::Xaml::XamlRootChangedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::XamlRoot*, Microsoft::UI::Xaml::IXamlRoot*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::XamlRootChangedEventArgs*, Microsoft::UI::Xaml::IXamlRootChangedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.XamlRoot, Microsoft.UI.Xaml.XamlRootChangedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::XamlRoot*,Microsoft::UI::Xaml::XamlRootChangedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IXamlRoot*,Microsoft::UI::Xaml::IXamlRootChangedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IXamlRoot*,Microsoft::UI::Xaml::IXamlRootChangedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#ifndef DEF___FIEventHandler_1_IInspectable_USE
#define DEF___FIEventHandler_1_IInspectable_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("c50898f6-c536-5f47-8583-8b2c2438a13b"))
IEventHandler<IInspectable*> : IEventHandler_impl<IInspectable*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.EventHandler`1<Object>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IEventHandler<IInspectable*> __FIEventHandler_1_IInspectable_t;
#define __FIEventHandler_1_IInspectable Windows::Foundation::__FIEventHandler_1_IInspectable_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIEventHandler_1_IInspectable Windows::Foundation::IEventHandler<IInspectable*>
//#define __FIEventHandler_1_IInspectable_t Windows::Foundation::IEventHandler<IInspectable*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIEventHandler_1_IInspectable_USE */




namespace Windows {
    namespace Foundation {
        struct Rect;
        
    } /* Foundation */
} /* Windows */


#ifndef DEF___FIReference_1_Windows__CFoundation__CRect_USE
#define DEF___FIReference_1_Windows__CFoundation__CRect_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("80423f11-054f-5eac-afd3-63b6ce15e77b"))
IReference<struct Windows::Foundation::Rect> : IReference_impl<struct Windows::Foundation::Rect> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IReference`1<Windows.Foundation.Rect>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct Windows::Foundation::Rect> __FIReference_1_Windows__CFoundation__CRect_t;
#define __FIReference_1_Windows__CFoundation__CRect Windows::Foundation::__FIReference_1_Windows__CFoundation__CRect_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIReference_1_Windows__CFoundation__CRect Windows::Foundation::IReference<Windows::Foundation::Rect>
//#define __FIReference_1_Windows__CFoundation__CRect_t Windows::Foundation::IReference<Windows::Foundation::Rect>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CFoundation__CRect_USE */




namespace Windows {
    namespace UI {
        struct Color;
        
    } /* UI */
} /* Windows */


#ifndef DEF___FIReference_1_Windows__CUI__CColor_USE
#define DEF___FIReference_1_Windows__CUI__CColor_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("ab8e5d11-b0c1-5a21-95ae-f16bf3a37624"))
IReference<struct Windows::UI::Color> : IReference_impl<struct Windows::UI::Color> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.IReference`1<Windows.UI.Color>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IReference<struct Windows::UI::Color> __FIReference_1_Windows__CUI__CColor_t;
#define __FIReference_1_Windows__CUI__CColor Windows::Foundation::__FIReference_1_Windows__CUI__CColor_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIReference_1_Windows__CUI__CColor Windows::Foundation::IReference<Windows::UI::Color>
//#define __FIReference_1_Windows__CUI__CColor_t Windows::Foundation::IReference<Windows::UI::Color>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIReference_1_Windows__CUI__CColor_USE */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Animation {
                    class Transition;
                } /* Animation */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Animation {
                    interface ITransition;
                } /* Animation */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition Microsoft::UI::Xaml::Media::Animation::ITransition

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("5cfd74c7-6e4a-5c7d-9370-2f81c62274f5"))
IIterator<Microsoft::UI::Xaml::Media::Animation::Transition*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Media::Animation::Transition*, Microsoft::UI::Xaml::Media::Animation::ITransition*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Media.Animation.Transition>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::Media::Animation::Transition*> __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::Media::Animation::ITransition*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::Media::Animation::ITransition*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("3ccaccb1-02dc-5456-922a-a264c80105b8"))
IIterable<Microsoft::UI::Xaml::Media::Animation::Transition*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Media::Animation::Transition*, Microsoft::UI::Xaml::Media::Animation::ITransition*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.Animation.Transition>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::Media::Animation::Transition*> __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::Media::Animation::ITransition*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::Media::Animation::ITransition*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6fe2632e-3c2a-5087-bdbc-8bc51da7520b"))
IVectorView<Microsoft::UI::Xaml::Media::Animation::Transition*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Media::Animation::Transition*, Microsoft::UI::Xaml::Media::Animation::ITransition*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Media.Animation.Transition>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::Media::Animation::Transition*> __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::Media::Animation::ITransition*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::Media::Animation::ITransition*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("030a9884-05db-57af-ae3b-4c77ffabfe57"))
IVector<Microsoft::UI::Xaml::Media::Animation::Transition*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Media::Animation::Transition*, Microsoft::UI::Xaml::Media::Animation::ITransition*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.Animation.Transition>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::Media::Animation::Transition*> __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Media::Animation::ITransition*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Media::Animation::ITransition*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class Pointer;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IPointer;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIPointer Microsoft::UI::Xaml::Input::IPointer

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c70a6499-5294-5688-954e-3b6b3a84a901"))
IIterator<Microsoft::UI::Xaml::Input::Pointer*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::Pointer*, Microsoft::UI::Xaml::Input::IPointer*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Input.Pointer>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::Input::Pointer*> __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::Input::IPointer*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::Input::IPointer*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("efb9b25d-bddc-5f34-96c2-f912cb9a1c27"))
IIterable<Microsoft::UI::Xaml::Input::Pointer*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::Pointer*, Microsoft::UI::Xaml::Input::IPointer*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Input.Pointer>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::Input::Pointer*> __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::Input::IPointer*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::Input::IPointer*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0d03ca87-5c97-542a-bc70-8ec683723bc6"))
IVectorView<Microsoft::UI::Xaml::Input::Pointer*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::Pointer*, Microsoft::UI::Xaml::Input::IPointer*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Input.Pointer>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::Input::Pointer*> __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::Input::IPointer*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::Input::IPointer*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                class XamlLight;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                interface IXamlLight;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight Microsoft::UI::Xaml::Media::IXamlLight

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("e75863b3-0b25-5c28-86c8-9ec49f76d468"))
IIterator<Microsoft::UI::Xaml::Media::XamlLight*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Media::XamlLight*, Microsoft::UI::Xaml::Media::IXamlLight*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Media.XamlLight>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::Media::XamlLight*> __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::Media::IXamlLight*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::Media::IXamlLight*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c166d8ca-b148-5241-bed5-13003063bd3e"))
IIterable<Microsoft::UI::Xaml::Media::XamlLight*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Media::XamlLight*, Microsoft::UI::Xaml::Media::IXamlLight*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Media.XamlLight>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::Media::XamlLight*> __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::Media::IXamlLight*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::Media::IXamlLight*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("cf393ba1-2605-543e-8b4e-e800eb179492"))
IVectorView<Microsoft::UI::Xaml::Media::XamlLight*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Media::XamlLight*, Microsoft::UI::Xaml::Media::IXamlLight*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Media.XamlLight>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::Media::XamlLight*> __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::Media::IXamlLight*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::Media::IXamlLight*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("fb6065bb-83e0-57c0-ae7f-418fd763b0ce"))
IVector<Microsoft::UI::Xaml::Media::XamlLight*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Media::XamlLight*, Microsoft::UI::Xaml::Media::IXamlLight*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Media.XamlLight>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::Media::XamlLight*> __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Media::IXamlLight*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Media::IXamlLight*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class KeyboardAccelerator;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IKeyboardAccelerator;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator Microsoft::UI::Xaml::Input::IKeyboardAccelerator

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#define DEF___FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("6a7cb393-53c9-5481-ba42-90d431243d14"))
IIterator<Microsoft::UI::Xaml::Input::KeyboardAccelerator*> : IIterator_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::KeyboardAccelerator*, Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Microsoft.UI.Xaml.Input.KeyboardAccelerator>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<Microsoft::UI::Xaml::Input::KeyboardAccelerator*> __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t;
#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator Windows::Foundation::Collections::__FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>
//#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t Windows::Foundation::Collections::IIterator<Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#define DEF___FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("68b2e097-f07e-580f-8bfd-b90a0b2a8835"))
IIterable<Microsoft::UI::Xaml::Input::KeyboardAccelerator*> : IIterable_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::KeyboardAccelerator*, Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Microsoft.UI.Xaml.Input.KeyboardAccelerator>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<Microsoft::UI::Xaml::Input::KeyboardAccelerator*> __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t;
#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator Windows::Foundation::Collections::__FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>
//#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t Windows::Foundation::Collections::IIterable<Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#define DEF___FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("4d4dfa1a-7153-51f3-8036-6b61de68bca8"))
IVectorView<Microsoft::UI::Xaml::Input::KeyboardAccelerator*> : IVectorView_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::KeyboardAccelerator*, Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Xaml.Input.KeyboardAccelerator>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVectorView<Microsoft::UI::Xaml::Input::KeyboardAccelerator*> __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t;
#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator Windows::Foundation::Collections::__FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>
//#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t Windows::Foundation::Collections::IVectorView<Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#define DEF___FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("0db091c3-8538-5d25-937f-db6e003e1f71"))
IVector<Microsoft::UI::Xaml::Input::KeyboardAccelerator*> : IVector_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::KeyboardAccelerator*, Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IVector`1<Microsoft.UI.Xaml.Input.KeyboardAccelerator>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IVector<Microsoft::UI::Xaml::Input::KeyboardAccelerator*> __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t;
#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator Windows::Foundation::Collections::__FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>
//#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_t Windows::Foundation::Collections::IVector<Microsoft::UI::Xaml::Input::IKeyboardAccelerator*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class CharacterReceivedRoutedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface ICharacterReceivedRoutedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs Microsoft::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("12e844dc-4c82-5057-adff-1207226704fe"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::CharacterReceivedRoutedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::CharacterReceivedRoutedEventArgs*, Microsoft::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.CharacterReceivedRoutedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::CharacterReceivedRoutedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::ICharacterReceivedRoutedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class ContextRequestedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IContextRequestedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs Microsoft::UI::Xaml::Input::IContextRequestedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("6df80487-4427-5fc3-af11-664075dfce23"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::ContextRequestedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::ContextRequestedEventArgs*, Microsoft::UI::Xaml::Input::IContextRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.ContextRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::ContextRequestedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IContextRequestedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IContextRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class AccessKeyDisplayRequestedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IAccessKeyDisplayRequestedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs Microsoft::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("9cbc96f0-7059-5064-b432-b6d98ef21fa0"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*, Microsoft::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::AccessKeyDisplayRequestedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IAccessKeyDisplayRequestedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class AccessKeyDisplayDismissedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IAccessKeyDisplayDismissedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs Microsoft::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8bd06d13-a6d4-53a2-917e-4a2bfd654000"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*, Microsoft::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::AccessKeyDisplayDismissedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IAccessKeyDisplayDismissedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class AccessKeyInvokedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IAccessKeyInvokedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs Microsoft::UI::Xaml::Input::IAccessKeyInvokedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("bc91cb83-e956-5ee2-85dd-9105063fd381"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::AccessKeyInvokedEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::AccessKeyInvokedEventArgs*, Microsoft::UI::Xaml::Input::IAccessKeyInvokedEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::AccessKeyInvokedEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IAccessKeyInvokedEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IAccessKeyInvokedEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class ProcessKeyboardAcceleratorEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IProcessKeyboardAcceleratorEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("3b9746a4-d7b6-5bcd-becd-4ac55738c3a1"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::ProcessKeyboardAcceleratorEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::ProcessKeyboardAcceleratorEventArgs*, Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::ProcessKeyboardAcceleratorEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class GettingFocusEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IGettingFocusEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs Microsoft::UI::Xaml::Input::IGettingFocusEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("0b1ffd20-921d-5463-adcb-d066f18b4e4e"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::GettingFocusEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::GettingFocusEventArgs*, Microsoft::UI::Xaml::Input::IGettingFocusEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.GettingFocusEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::GettingFocusEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IGettingFocusEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::IGettingFocusEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class LosingFocusEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface ILosingFocusEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs Microsoft::UI::Xaml::Input::ILosingFocusEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("84f2708f-62e3-5fea-a123-5828133fb274"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::LosingFocusEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::LosingFocusEventArgs*, Microsoft::UI::Xaml::Input::ILosingFocusEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.LosingFocusEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::LosingFocusEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::ILosingFocusEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::ILosingFocusEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class NoFocusCandidateFoundEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface INoFocusCandidateFoundEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs Microsoft::UI::Xaml::Input::INoFocusCandidateFoundEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_USE
#define DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("d1e7b8e5-4e62-529f-a368-c48eedbcd938"))
ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::NoFocusCandidateFoundEventArgs*> : ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::UIElement*, Microsoft::UI::Xaml::IUIElement*>,Windows::Foundation::Internal::AggregateType<Microsoft::UI::Xaml::Input::NoFocusCandidateFoundEventArgs*, Microsoft::UI::Xaml::Input::INoFocusCandidateFoundEventArgs*>> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Xaml.UIElement, Microsoft.UI.Xaml.Input.NoFocusCandidateFoundEventArgs>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef ITypedEventHandler<Microsoft::UI::Xaml::UIElement*,Microsoft::UI::Xaml::Input::NoFocusCandidateFoundEventArgs*> __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_t;
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs Windows::Foundation::__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::INoFocusCandidateFoundEventArgs*>
//#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_t Windows::Foundation::ITypedEventHandler<Microsoft::UI::Xaml::IUIElement*,Microsoft::UI::Xaml::Input::INoFocusCandidateFoundEventArgs*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_USE */


#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Windows {
    namespace ApplicationModel {
        namespace DataTransfer {
            enum DataPackageOperation : unsigned int;
        } /* DataTransfer */
    } /* ApplicationModel */
} /* Windows */


#ifndef DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#define DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("add21d46-17df-5a43-a685-3262fce84643"))
IAsyncOperationCompletedHandler<enum Windows::ApplicationModel::DataTransfer::DataPackageOperation> : IAsyncOperationCompletedHandler_impl<enum Windows::ApplicationModel::DataTransfer::DataPackageOperation> 
{
    Microsoft_UI_Xaml_static const wchar_t* z_get_rc_name_impl() 
    Microsoft_UI_Xaml_{
        Microsoft_UI_Xaml_return L"Windows.Foundation.AsyncOperationCompletedHandler`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperationCompletedHandler<enum Windows::ApplicationModel::DataTransfer::DataPackageOperation> __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t;
#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation Windows::Foundation::__FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation Windows::Foundation::IAsyncOperationCompletedHandler<Windows::ApplicationModel::DataTransfer::DataPackageOperation>
//#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t Windows::Foundation::IAsyncOperationCompletedHandler<Windows::ApplicationModel::DataTransfer::DataPackageOperation>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE */





#ifndef DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#define DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation {
template <>
struct __declspec(uuid("8b98aea9-64f0-5672-b30e-dfd9c2e4f6fe"))
IAsyncOperation<enum Windows::ApplicationModel::DataTransfer::DataPackageOperation> : IAsyncOperation_impl<enum Windows::ApplicationModel::DataTransfer::DataPackageOperation> 
{
    Microsoft_UI_Xaml_static const wchar_t* z_get_rc_name_impl() 
    Microsoft_UI_Xaml_{
        Microsoft_UI_Xaml_return L"Windows.Foundation.IAsyncOperation`1<Windows.ApplicationModel.DataTransfer.DataPackageOperation>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IAsyncOperation<enum Windows::ApplicationModel::DataTransfer::DataPackageOperation> __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t;
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation Windows::Foundation::__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t
/* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation Windows::Foundation::IAsyncOperation<Windows::ApplicationModel::DataTransfer::DataPackageOperation>
//#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_t Windows::Foundation::IAsyncOperation<Windows::ApplicationModel::DataTransfer::DataPackageOperation>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_USE */




namespace Windows {
    namespace Foundation {
        struct Point;
        
    } /* Foundation */
} /* Windows */


#ifndef DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterator_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c602b59e-0a8e-5e99-b478-2b564585278d"))
IIterator<struct Windows::Foundation::Point> : IIterator_impl<struct Windows::Foundation::Point> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Point>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<struct Windows::Foundation::Point> __FIIterator_1_Windows__CFoundation__CPoint_t;
#define __FIIterator_1_Windows__CFoundation__CPoint Windows::Foundation::Collections::__FIIterator_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1_Windows__CFoundation__CPoint Windows::Foundation::Collections::IIterator<Windows::Foundation::Point>
//#define __FIIterator_1_Windows__CFoundation__CPoint_t Windows::Foundation::Collections::IIterator<Windows::Foundation::Point>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1_Windows__CFoundation__CPoint_USE */





#ifndef DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterable_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("c192280d-3a09-5423-9dc5-67b83ebde41d"))
IIterable<struct Windows::Foundation::Point> : IIterable_impl<struct Windows::Foundation::Point> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<struct Windows::Foundation::Point> __FIIterable_1_Windows__CFoundation__CPoint_t;
#define __FIIterable_1_Windows__CFoundation__CPoint Windows::Foundation::Collections::__FIIterable_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1_Windows__CFoundation__CPoint Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>
//#define __FIIterable_1_Windows__CFoundation__CPoint_t Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1_Windows__CFoundation__CPoint_USE */





#ifndef DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("377f6162-6e4d-574e-bf01-77f4fd021d0e"))
IIterator<__FIIterable_1_Windows__CFoundation__CPoint*> : IIterator_impl<__FIIterable_1_Windows__CFoundation__CPoint*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterator`1<Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterator<__FIIterable_1_Windows__CFoundation__CPoint*> __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_t;
#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint Windows::Foundation::Collections::__FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>*>
//#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_t Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_USE */





#ifndef DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#define DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE
#if !defined(RO_NO_TEMPLATE_NAME)
namespace Windows { namespace Foundation { namespace Collections {
template <>
struct __declspec(uuid("ae44597e-d411-5b7f-bbec-6a96c94a107a"))
IIterable<__FIIterable_1_Windows__CFoundation__CPoint*> : IIterable_impl<__FIIterable_1_Windows__CFoundation__CPoint*> 
{
    static const wchar_t* z_get_rc_name_impl() 
    {
        return L"Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Collections.IIterable`1<Windows.Foundation.Point>>"; 
    }
};
// Define a typedef for the parameterized interface specialization's mangled name.
// This allows code which uses the mangled name for the parameterized interface to access the
// correct parameterized interface specialization.
typedef IIterable<__FIIterable_1_Windows__CFoundation__CPoint*> __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_t;
#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint Windows::Foundation::Collections::__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_t
/* Collections */ } /* Foundation */ } /* Windows */ } 

////  Define an alias for the C version of the interface for compatibility purposes.
//#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>*>
//#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_t Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>*>
#endif // !defined(RO_NO_TEMPLATE_NAME)
#endif /* DEF___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_USE */






namespace Microsoft {
    namespace UI {
        namespace Composition {
            class AnimationPropertyInfo;
        } /* Composition */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IAnimationPropertyInfo;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo Microsoft::UI::Composition::IAnimationPropertyInfo

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Composition {
            class Compositor;
        } /* Composition */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositor;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositor Microsoft::UI::Composition::ICompositor

#endif // ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IAnimationObject;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIAnimationObject Microsoft::UI::Composition::IAnimationObject

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface ICompositionAnimationBase;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CICompositionAnimationBase Microsoft::UI::Composition::ICompositionAnimationBase

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Composition {
            interface IVisualElement;
        } /* Composition */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CComposition_CIVisualElement Microsoft::UI::Composition::IVisualElement

#endif // ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__






namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Automation {
                class AutomationProperty;
            } /* Automation */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Automation {
                interface IAutomationProperty;
            } /* Automation */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty Microsoft::UI::Xaml::Automation::IAutomationProperty

#endif // ____x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Automation {
                class ComponentPropertyValue;
            } /* Automation */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Automation {
                interface IComponentPropertyValue;
            } /* Automation */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue Microsoft::UI::Xaml::Automation::IComponentPropertyValue

#endif // ____x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue_FWD_DEFINED__







namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Automation {
                namespace Peers {
                    class AutomationPeer;
                } /* Peers */
            } /* Automation */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Automation {
                namespace Peers {
                    interface IAutomationPeer;
                } /* Peers */
            } /* Automation */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer

#endif // ____x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__








namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Controls {
                class ContainerContentChangingEventArgs;
            } /* Controls */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Controls {
                interface IContainerContentChangingEventArgs;
            } /* Controls */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs Microsoft::UI::Xaml::Controls::IContainerContentChangingEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Controls {
                class Control;
            } /* Controls */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Controls {
                interface IControl;
            } /* Controls */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CControls_CIControl Microsoft::UI::Xaml::Controls::IControl

#endif // ____x_Microsoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__







namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Controls {
                namespace Primitives {
                    
                    typedef enum ComponentResourceLocation : int ComponentResourceLocation;
                    
                } /* Primitives */
            } /* Controls */
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Controls {
                namespace Primitives {
                    class FlyoutBase;
                } /* Primitives */
            } /* Controls */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Controls {
                namespace Primitives {
                    interface IFlyoutBase;
                } /* Primitives */
            } /* Controls */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase Microsoft::UI::Xaml::Controls::Primitives::IFlyoutBase

#endif // ____x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__








namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Data {
                class BindingBase;
            } /* Data */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Data {
                interface IBindingBase;
            } /* Data */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CData_CIBindingBase Microsoft::UI::Xaml::Data::IBindingBase

#endif // ____x_Microsoft_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Data {
                class BindingExpression;
            } /* Data */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Data {
                interface IBindingExpression;
            } /* Data */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CData_CIBindingExpression Microsoft::UI::Xaml::Data::IBindingExpression

#endif // ____x_Microsoft_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__







namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Hosting {
                class XamlIsland;
            } /* Hosting */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Hosting {
                interface IXamlIsland;
            } /* Hosting */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland Microsoft::UI::Xaml::Hosting::IXamlIsland

#endif // ____x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland_FWD_DEFINED__











#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IDoubleTappedEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler Microsoft::UI::Xaml::Input::IDoubleTappedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__



#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IHoldingEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler Microsoft::UI::Xaml::Input::IHoldingEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IKeyEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler Microsoft::UI::Xaml::Input::IKeyEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                
                typedef enum KeyTipPlacementMode : int KeyTipPlacementMode;
                
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                class KeyboardAcceleratorInvokedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IKeyboardAcceleratorInvokedEventArgs;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs Microsoft::UI::Xaml::Input::IKeyboardAcceleratorInvokedEventArgs

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                
                typedef enum KeyboardAcceleratorPlacementMode : int KeyboardAcceleratorPlacementMode;
                
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                
                typedef enum KeyboardNavigationMode : int KeyboardNavigationMode;
                
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IManipulationCompletedEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler Microsoft::UI::Xaml::Input::IManipulationCompletedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IManipulationDeltaEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler Microsoft::UI::Xaml::Input::IManipulationDeltaEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IManipulationInertiaStartingEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler Microsoft::UI::Xaml::Input::IManipulationInertiaStartingEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                
                typedef enum ManipulationModes : unsigned int ManipulationModes;
                
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IManipulationStartedEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler Microsoft::UI::Xaml::Input::IManipulationStartedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IManipulationStartingEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler Microsoft::UI::Xaml::Input::IManipulationStartingEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__




#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IPointerEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler Microsoft::UI::Xaml::Input::IPointerEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__



#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface IRightTappedEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler Microsoft::UI::Xaml::Input::IRightTappedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                interface ITappedEventHandler;
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler Microsoft::UI::Xaml::Input::ITappedEventHandler

#endif // ____x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                
                typedef enum XYFocusKeyboardNavigationMode : int XYFocusKeyboardNavigationMode;
                
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Input {
                
                typedef enum XYFocusNavigationStrategy : int XYFocusNavigationStrategy;
                
            } /* Input */
        } /* Xaml */
    } /* UI */
} /* Microsoft */






namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Animation {
                    class EasingFunctionBase;
                } /* Animation */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Animation {
                    interface IEasingFunctionBase;
                } /* Animation */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase Microsoft::UI::Xaml::Media::Animation::IEasingFunctionBase

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Animation {
                    class Storyboard;
                } /* Animation */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Animation {
                    interface IStoryboard;
                } /* Animation */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard Microsoft::UI::Xaml::Media::Animation::IStoryboard

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Animation {
                    class TransitionCollection;
                } /* Animation */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */








namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                class Brush;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                interface IBrush;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CIBrush Microsoft::UI::Xaml::Media::IBrush

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                class CacheMode;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                interface ICacheMode;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CICacheMode Microsoft::UI::Xaml::Media::ICacheMode

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                
                typedef enum ElementCompositeMode : int ElementCompositeMode;
                
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                class GeneralTransform;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                interface IGeneralTransform;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform Microsoft::UI::Xaml::Media::IGeneralTransform

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__







namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Imaging {
                    class BitmapImage;
                } /* Imaging */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Imaging {
                    interface IBitmapImage;
                } /* Imaging */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage Microsoft::UI::Xaml::Media::Imaging::IBitmapImage

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__








namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Media3D {
                    class Transform3D;
                } /* Media3D */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                namespace Media3D {
                    interface ITransform3D;
                } /* Media3D */
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D Microsoft::UI::Xaml::Media::Media3D::ITransform3D

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__








namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                class Projection;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                interface IProjection;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CIProjection Microsoft::UI::Xaml::Media::IProjection

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                class RectangleGeometry;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                interface IRectangleGeometry;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry Microsoft::UI::Xaml::Media::IRectangleGeometry

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                class Shadow;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                interface IShadow;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CIShadow Microsoft::UI::Xaml::Media::IShadow

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                class Transform;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            namespace Media {
                interface ITransform;
            } /* Media */
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#define __x_Microsoft_CUI_CXaml_CMedia_CITransform Microsoft::UI::Xaml::Media::ITransform

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__










namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ApplicationHighContrastAdjustment : unsigned int ApplicationHighContrastAdjustment;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ApplicationRequiresPointerMode : int ApplicationRequiresPointerMode;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ApplicationTheme : int ApplicationTheme;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum AutomationTextAttributesEnum : int AutomationTextAttributesEnum;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum DurationType : int DurationType;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ElementHighContrastAdjustment : unsigned int ElementHighContrastAdjustment;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ElementSoundKind : int ElementSoundKind;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ElementSoundMode : int ElementSoundMode;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ElementSoundPlayerState : int ElementSoundPlayerState;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ElementSpatialAudioMode : int ElementSpatialAudioMode;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum ElementTheme : int ElementTheme;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FlowDirection : int FlowDirection;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FocusState : int FocusState;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FocusVisualKind : int FocusVisualKind;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FontCapitals : int FontCapitals;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FontEastAsianLanguage : int FontEastAsianLanguage;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FontEastAsianWidths : int FontEastAsianWidths;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FontFraction : int FontFraction;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FontNumeralAlignment : int FontNumeralAlignment;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FontNumeralStyle : int FontNumeralStyle;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum FontVariants : int FontVariants;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum GridUnitType : int GridUnitType;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum HorizontalAlignment : int HorizontalAlignment;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum LineStackingStrategy : int LineStackingStrategy;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum OpticalMarginAlignment : int OpticalMarginAlignment;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum TextAlignment : int TextAlignment;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum TextLineBounds : int TextLineBounds;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum TextReadingOrder : int TextReadingOrder;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum TextTrimming : int TextTrimming;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum TextWrapping : int TextWrapping;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum TransitionParent : int TransitionParent;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum TransitionTrigger : int TransitionTrigger;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum Vector3TransitionComponents : unsigned int Vector3TransitionComponents;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum VerticalAlignment : int VerticalAlignment;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum Visibility : int Visibility;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef enum WindowActivationState : int WindowActivationState;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef struct CornerRadius CornerRadius;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef struct Duration Duration;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef struct GridLength GridLength;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            
            typedef struct Thickness Thickness;
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */



































































































































































namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class AdaptiveTrigger;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class Application;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ApplicationInitializationCallbackParams;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class BindingFailedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class BringIntoViewOptions;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class BrushTransition;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ColorPaletteResources;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class CornerRadiusHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */





namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DataTemplateKey;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DebugSettings;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DependencyObjectCollection;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DependencyProperty;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DependencyPropertyChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DispatcherTimer;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DragEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DragOperationDeferral;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DragUI;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DragUIOverride;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DurationHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class DxamlCoreTestHooks;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ElementFactoryGetArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ElementFactoryRecycleArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ElementSoundPlayer;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class EventTrigger;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ExceptionRoutedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class FrameworkTemplate;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class FrameworkView;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class FrameworkViewSource;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class GridLengthHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class LaunchActivatedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class MediaFailedRoutedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class PointHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class PropertyMetadata;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class PropertyPath;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class RectHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class RoutedEvent;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ScalarTransition;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class Setter;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class SetterBaseCollection;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class SizeChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class SizeHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class StateTrigger;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class Style;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class TargetPropertyPath;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class ThicknessHelper;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class TriggerActionCollection;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class TriggerCollection;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class UIElementWeakCollection;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class UnhandledExceptionEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */



namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class Vector3Transition;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class VisualStateChangedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class VisualStateManager;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class Window;
        } /* Xaml */
    } /* UI */
} /* Microsoft */




namespace Microsoft {
    namespace UI {
        namespace Xaml {
            class WindowCreatedEventArgs;
        } /* Xaml */
    } /* UI */
} /* Microsoft */

















/*
 *
 * Struct Microsoft.UI.Xaml.ApplicationHighContrastAdjustment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, flags, contract] */
            enum ApplicationHighContrastAdjustment : unsigned int
            {
                ApplicationHighContrastAdjustment_None = 0,
                ApplicationHighContrastAdjustment_Auto = 0xffffffff,
            };
            
            DEFINE_ENUM_FLAG_OPERATORS(ApplicationHighContrastAdjustment)
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ApplicationRequiresPointerMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum ApplicationRequiresPointerMode : int
            {
                ApplicationRequiresPointerMode_Auto = 0,
                ApplicationRequiresPointerMode_WhenRequested = 1,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ApplicationTheme
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum ApplicationTheme : int
            {
                ApplicationTheme_Light = 0,
                ApplicationTheme_Dark = 1,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.AutomationTextAttributesEnum
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum AutomationTextAttributesEnum : int
            {
                AutomationTextAttributesEnum_AnimationStyleAttribute = 40000,
                AutomationTextAttributesEnum_BackgroundColorAttribute = 40001,
                AutomationTextAttributesEnum_BulletStyleAttribute = 40002,
                AutomationTextAttributesEnum_CapStyleAttribute = 40003,
                AutomationTextAttributesEnum_CultureAttribute = 40004,
                AutomationTextAttributesEnum_FontNameAttribute = 40005,
                AutomationTextAttributesEnum_FontSizeAttribute = 40006,
                AutomationTextAttributesEnum_FontWeightAttribute = 40007,
                AutomationTextAttributesEnum_ForegroundColorAttribute = 40008,
                AutomationTextAttributesEnum_HorizontalTextAlignmentAttribute = 40009,
                AutomationTextAttributesEnum_IndentationFirstLineAttribute = 40010,
                AutomationTextAttributesEnum_IndentationLeadingAttribute = 40011,
                AutomationTextAttributesEnum_IndentationTrailingAttribute = 40012,
                AutomationTextAttributesEnum_IsHiddenAttribute = 40013,
                AutomationTextAttributesEnum_IsItalicAttribute = 40014,
                AutomationTextAttributesEnum_IsReadOnlyAttribute = 40015,
                AutomationTextAttributesEnum_IsSubscriptAttribute = 40016,
                AutomationTextAttributesEnum_IsSuperscriptAttribute = 40017,
                AutomationTextAttributesEnum_MarginBottomAttribute = 40018,
                AutomationTextAttributesEnum_MarginLeadingAttribute = 40019,
                AutomationTextAttributesEnum_MarginTopAttribute = 40020,
                AutomationTextAttributesEnum_MarginTrailingAttribute = 40021,
                AutomationTextAttributesEnum_OutlineStylesAttribute = 40022,
                AutomationTextAttributesEnum_OverlineColorAttribute = 40023,
                AutomationTextAttributesEnum_OverlineStyleAttribute = 40024,
                AutomationTextAttributesEnum_StrikethroughColorAttribute = 40025,
                AutomationTextAttributesEnum_StrikethroughStyleAttribute = 40026,
                AutomationTextAttributesEnum_TabsAttribute = 40027,
                AutomationTextAttributesEnum_TextFlowDirectionsAttribute = 40028,
                AutomationTextAttributesEnum_UnderlineColorAttribute = 40029,
                AutomationTextAttributesEnum_UnderlineStyleAttribute = 40030,
                AutomationTextAttributesEnum_AnnotationTypesAttribute = 40031,
                AutomationTextAttributesEnum_AnnotationObjectsAttribute = 40032,
                AutomationTextAttributesEnum_StyleNameAttribute = 40033,
                AutomationTextAttributesEnum_StyleIdAttribute = 40034,
                AutomationTextAttributesEnum_LinkAttribute = 40035,
                AutomationTextAttributesEnum_IsActiveAttribute = 40036,
                AutomationTextAttributesEnum_SelectionActiveEndAttribute = 40037,
                AutomationTextAttributesEnum_CaretPositionAttribute = 40038,
                AutomationTextAttributesEnum_CaretBidiModeAttribute = 40039,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.DurationType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum DurationType : int
            {
                DurationType_Automatic = 0,
                DurationType_TimeSpan = 1,
                DurationType_Forever = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementHighContrastAdjustment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, flags, contract] */
            enum ElementHighContrastAdjustment : unsigned int
            {
                ElementHighContrastAdjustment_None = 0,
                ElementHighContrastAdjustment_Application = 0x80000000,
                ElementHighContrastAdjustment_Auto = 0xffffffff,
            };
            
            DEFINE_ENUM_FLAG_OPERATORS(ElementHighContrastAdjustment)
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementSoundKind
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum ElementSoundKind : int
            {
                ElementSoundKind_Focus = 0,
                ElementSoundKind_Invoke = 1,
                ElementSoundKind_Show = 2,
                ElementSoundKind_Hide = 3,
                ElementSoundKind_MovePrevious = 4,
                ElementSoundKind_MoveNext = 5,
                ElementSoundKind_GoBack = 6,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementSoundMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum ElementSoundMode : int
            {
                ElementSoundMode_Default = 0,
                ElementSoundMode_FocusOnly = 1,
                ElementSoundMode_Off = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementSoundPlayerState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum ElementSoundPlayerState : int
            {
                ElementSoundPlayerState_Auto = 0,
                ElementSoundPlayerState_Off = 1,
                ElementSoundPlayerState_On = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementSpatialAudioMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum ElementSpatialAudioMode : int
            {
                ElementSpatialAudioMode_Auto = 0,
                ElementSpatialAudioMode_Off = 1,
                ElementSpatialAudioMode_On = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementTheme
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum ElementTheme : int
            {
                ElementTheme_Default = 0,
                ElementTheme_Light = 1,
                ElementTheme_Dark = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FlowDirection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FlowDirection : int
            {
                FlowDirection_LeftToRight = 0,
                FlowDirection_RightToLeft = 1,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FocusState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FocusState : int
            {
                FocusState_Unfocused = 0,
                FocusState_Pointer = 1,
                FocusState_Keyboard = 2,
                FocusState_Programmatic = 3,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FocusVisualKind
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FocusVisualKind : int
            {
                FocusVisualKind_DottedLine = 0,
                FocusVisualKind_HighVisibility = 1,
                FocusVisualKind_Reveal = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontCapitals
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FontCapitals : int
            {
                FontCapitals_Normal = 0,
                FontCapitals_AllSmallCaps = 1,
                FontCapitals_SmallCaps = 2,
                FontCapitals_AllPetiteCaps = 3,
                FontCapitals_PetiteCaps = 4,
                FontCapitals_Unicase = 5,
                FontCapitals_Titling = 6,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontEastAsianLanguage
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FontEastAsianLanguage : int
            {
                FontEastAsianLanguage_Normal = 0,
                FontEastAsianLanguage_HojoKanji = 1,
                FontEastAsianLanguage_Jis04 = 2,
                FontEastAsianLanguage_Jis78 = 3,
                FontEastAsianLanguage_Jis83 = 4,
                FontEastAsianLanguage_Jis90 = 5,
                FontEastAsianLanguage_NlcKanji = 6,
                FontEastAsianLanguage_Simplified = 7,
                FontEastAsianLanguage_Traditional = 8,
                FontEastAsianLanguage_TraditionalNames = 9,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontEastAsianWidths
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FontEastAsianWidths : int
            {
                FontEastAsianWidths_Normal = 0,
                FontEastAsianWidths_Full = 1,
                FontEastAsianWidths_Half = 2,
                FontEastAsianWidths_Proportional = 3,
                FontEastAsianWidths_Quarter = 4,
                FontEastAsianWidths_Third = 5,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontFraction
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FontFraction : int
            {
                FontFraction_Normal = 0,
                FontFraction_Stacked = 1,
                FontFraction_Slashed = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontNumeralAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FontNumeralAlignment : int
            {
                FontNumeralAlignment_Normal = 0,
                FontNumeralAlignment_Proportional = 1,
                FontNumeralAlignment_Tabular = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontNumeralStyle
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FontNumeralStyle : int
            {
                FontNumeralStyle_Normal = 0,
                FontNumeralStyle_Lining = 1,
                FontNumeralStyle_OldStyle = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontVariants
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum FontVariants : int
            {
                FontVariants_Normal = 0,
                FontVariants_Superscript = 1,
                FontVariants_Subscript = 2,
                FontVariants_Ordinal = 3,
                FontVariants_Inferior = 4,
                FontVariants_Ruby = 5,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.GridUnitType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum GridUnitType : int
            {
                GridUnitType_Auto = 0,
                GridUnitType_Pixel = 1,
                GridUnitType_Star = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.HorizontalAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum HorizontalAlignment : int
            {
                HorizontalAlignment_Left = 0,
                HorizontalAlignment_Center = 1,
                HorizontalAlignment_Right = 2,
                HorizontalAlignment_Stretch = 3,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.LineStackingStrategy
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum LineStackingStrategy : int
            {
                LineStackingStrategy_MaxHeight = 0,
                LineStackingStrategy_BlockLineHeight = 1,
                LineStackingStrategy_BaselineToBaseline = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.OpticalMarginAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum OpticalMarginAlignment : int
            {
                OpticalMarginAlignment_None = 0,
                OpticalMarginAlignment_TrimSideBearings = 1,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum TextAlignment : int
            {
                TextAlignment_Center = 0,
                TextAlignment_Left = 1,
                TextAlignment_Start = 1,
                TextAlignment_Right = 2,
                TextAlignment_End = 2,
                TextAlignment_Justify = 3,
                TextAlignment_DetectFromContent = 4,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextLineBounds
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum TextLineBounds : int
            {
                TextLineBounds_Full = 0,
                TextLineBounds_TrimToCapHeight = 1,
                TextLineBounds_TrimToBaseline = 2,
                TextLineBounds_Tight = 3,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextReadingOrder
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum TextReadingOrder : int
            {
                TextReadingOrder_Default = 0,
                TextReadingOrder_UseFlowDirection = 0,
                TextReadingOrder_DetectFromContent = 1,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextTrimming
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum TextTrimming : int
            {
                TextTrimming_None = 0,
                TextTrimming_CharacterEllipsis = 1,
                TextTrimming_WordEllipsis = 2,
                TextTrimming_Clip = 3,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextWrapping
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum TextWrapping : int
            {
                TextWrapping_NoWrap = 1,
                TextWrapping_Wrap = 2,
                TextWrapping_WrapWholeWords = 3,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TransitionParent
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum TransitionParent : int
            {
                TransitionParent_ParentToRoot = 0,
                TransitionParent_ParentToCommonParent = 1,
                TransitionParent_ParentToGrandParent = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TransitionTrigger
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum TransitionTrigger : int
            {
                TransitionTrigger_Load = 0,
                TransitionTrigger_Layout = 1,
                TransitionTrigger_Unload = 2,
                TransitionTrigger_Reparent = 3,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.Vector3TransitionComponents
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, flags, contract] */
            enum Vector3TransitionComponents : unsigned int
            {
                Vector3TransitionComponents_X = 0x1,
                Vector3TransitionComponents_Y = 0x2,
                Vector3TransitionComponents_Z = 0x4,
            };
            
            DEFINE_ENUM_FLAG_OPERATORS(Vector3TransitionComponents)
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Struct Microsoft.UI.Xaml.VerticalAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum VerticalAlignment : int
            {
                VerticalAlignment_Top = 0,
                VerticalAlignment_Center = 1,
                VerticalAlignment_Bottom = 2,
                VerticalAlignment_Stretch = 3,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.Visibility
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum Visibility : int
            {
                Visibility_Visible = 0,
                Visibility_Collapsed = 1,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.WindowActivationState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [v1_enum, contract] */
            enum WindowActivationState : int
            {
                WindowActivationState_CodeActivated = 0,
                WindowActivationState_Deactivated = 1,
                WindowActivationState_PointerActivated = 2,
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.CornerRadius
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [contract] */
            struct CornerRadius
            {
                DOUBLE TopLeft;
                DOUBLE TopRight;
                DOUBLE BottomRight;
                DOUBLE BottomLeft;
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.Duration
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [contract] */
            struct Duration
            {
                Windows::Foundation::TimeSpan TimeSpan;
                Microsoft::UI::Xaml::DurationType Type;
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.GridLength
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [contract] */
            struct GridLength
            {
                DOUBLE Value;
                Microsoft::UI::Xaml::GridUnitType GridUnitType;
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.Thickness
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [contract] */
            struct Thickness
            {
                DOUBLE Left;
                DOUBLE Top;
                DOUBLE Right;
                DOUBLE Bottom;
            };
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.ApplicationInitializationCallback
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("D8EEF1C9-1234-56F1-9963-45DD9C80A661"), contract] */
            MIDL_INTERFACE("D8EEF1C9-1234-56F1-9963-45DD9C80A661")
            IApplicationInitializationCallback : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */Microsoft::UI::Xaml::IApplicationInitializationCallbackParams * p
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IApplicationInitializationCallback=_uuidof(IApplicationInitializationCallback);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.BindingFailedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A3160AB0-A8A9-5F38-AF17-5CD91A2B33F5"), contract] */
            MIDL_INTERFACE("A3160AB0-A8A9-5F38-AF17-5CD91A2B33F5")
            IBindingFailedEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Microsoft::UI::Xaml::IBindingFailedEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBindingFailedEventHandler=_uuidof(IBindingFailedEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.CreateDefaultValueCallback
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("7F808C05-2AC4-5AD9-AC8A-26890333D81E"), contract] */
            MIDL_INTERFACE("7F808C05-2AC4-5AD9-AC8A-26890333D81E")
            ICreateDefaultValueCallback : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [retval, out] */IInspectable * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICreateDefaultValueCallback=_uuidof(ICreateDefaultValueCallback);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.DependencyPropertyChangedCallback
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("F055BB21-219B-5B0C-805D-BCAEDAE15458"), contract] */
            MIDL_INTERFACE("F055BB21-219B-5B0C-805D-BCAEDAE15458")
            IDependencyPropertyChangedCallback : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * sender,
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDependencyPropertyChangedCallback=_uuidof(IDependencyPropertyChangedCallback);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("4BE8DC75-373D-5F4E-A0B4-54B9EEAFB4A9"), contract] */
            MIDL_INTERFACE("4BE8DC75-373D-5F4E-A0B4-54B9EEAFB4A9")
            IDependencyPropertyChangedEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Microsoft::UI::Xaml::IDependencyPropertyChangedEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDependencyPropertyChangedEventHandler=_uuidof(IDependencyPropertyChangedEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.DragEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("277AFC83-CB67-56C8-B601-1B9C0F1C3D32"), contract] */
            MIDL_INTERFACE("277AFC83-CB67-56C8-B601-1B9C0F1C3D32")
            IDragEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Microsoft::UI::Xaml::IDragEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDragEventHandler=_uuidof(IDragEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.EnteredBackgroundEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("F9A5148D-8F72-553F-B479-21B68610899D"), contract] */
            MIDL_INTERFACE("F9A5148D-8F72-553F-B479-21B68610899D")
            IEnteredBackgroundEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Windows::ApplicationModel::IEnteredBackgroundEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IEnteredBackgroundEventHandler=_uuidof(IEnteredBackgroundEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.ExceptionRoutedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("45FBB85D-54F9-5A2A-8A38-00A3B7761F96"), contract] */
            MIDL_INTERFACE("45FBB85D-54F9-5A2A-8A38-00A3B7761F96")
            IExceptionRoutedEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Microsoft::UI::Xaml::IExceptionRoutedEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IExceptionRoutedEventHandler=_uuidof(IExceptionRoutedEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.LeavingBackgroundEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("3D723B94-FBCF-5C0D-B6EF-5062E68BF9F8"), contract] */
            MIDL_INTERFACE("3D723B94-FBCF-5C0D-B6EF-5062E68BF9F8")
            ILeavingBackgroundEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Windows::ApplicationModel::ILeavingBackgroundEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ILeavingBackgroundEventHandler=_uuidof(ILeavingBackgroundEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.PropertyChangedCallback
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("5FD9243A-2422-53C9-8D6F-F1BA1A0BBA9A"), contract] */
            MIDL_INTERFACE("5FD9243A-2422-53C9-8D6F-F1BA1A0BBA9A")
            IPropertyChangedCallback : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * d,
                    /* [in] */Microsoft::UI::Xaml::IDependencyPropertyChangedEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPropertyChangedCallback=_uuidof(IPropertyChangedCallback);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyChangedCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.RoutedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("DAE23D85-69CA-5BDF-805B-6161A3A215CC"), contract] */
            MIDL_INTERFACE("DAE23D85-69CA-5BDF-805B-6161A3A215CC")
            IRoutedEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Microsoft::UI::Xaml::IRoutedEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IRoutedEventHandler=_uuidof(IRoutedEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRoutedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.SizeChangedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("8D7B1A58-14C6-51C9-892C-9FCCE368E77D"), contract] */
            MIDL_INTERFACE("8D7B1A58-14C6-51C9-892C-9FCCE368E77D")
            ISizeChangedEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Microsoft::UI::Xaml::ISizeChangedEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISizeChangedEventHandler=_uuidof(ISizeChangedEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISizeChangedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.SuspendingEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E4BEEC79-95FD-5841-ACEB-01A8A1FB73D0"), contract] */
            MIDL_INTERFACE("E4BEEC79-95FD-5841-ACEB-01A8A1FB73D0")
            ISuspendingEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Windows::ApplicationModel::ISuspendingEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISuspendingEventHandler=_uuidof(ISuspendingEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISuspendingEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.UnhandledExceptionEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("3427C1B6-5ECA-5631-84B8-5BAE732FB67F"), contract] */
            MIDL_INTERFACE("3427C1B6-5ECA-5631-84B8-5BAE732FB67F")
            IUnhandledExceptionEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Microsoft::UI::Xaml::IUnhandledExceptionEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IUnhandledExceptionEventHandler=_uuidof(IUnhandledExceptionEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.VisualStateChangedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("CDBBD854-0539-5BFF-B448-33193D2F41B8"), contract] */
            MIDL_INTERFACE("CDBBD854-0539-5BFF-B448-33193D2F41B8")
            IVisualStateChangedEventHandler : public IUnknown
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Invoke(
                    /* [in] */IInspectable * sender,
                    /* [in] */Microsoft::UI::Xaml::IVisualStateChangedEventArgs * e
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualStateChangedEventHandler=_uuidof(IVisualStateChangedEventHandler);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IAdaptiveTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.AdaptiveTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IAdaptiveTrigger[] = L"Microsoft.UI.Xaml.IAdaptiveTrigger";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("B2B18AE8-48D9-5A1D-A555-6685DDD4DA80"), exclusiveto, contract] */
            MIDL_INTERFACE("B2B18AE8-48D9-5A1D-A555-6685DDD4DA80")
            IAdaptiveTrigger : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinWindowWidth(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MinWindowWidth(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinWindowHeight(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MinWindowHeight(
                    /* [in] */DOUBLE value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAdaptiveTrigger=_uuidof(IAdaptiveTrigger);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIAdaptiveTrigger;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IAdaptiveTriggerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.AdaptiveTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IAdaptiveTriggerFactory[] = L"Microsoft.UI.Xaml.IAdaptiveTriggerFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("9C9560BB-4099-5175-9250-45A15E753DA8"), exclusiveto, contract] */
            MIDL_INTERFACE("9C9560BB-4099-5175-9250-45A15E753DA8")
            IAdaptiveTriggerFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IAdaptiveTrigger * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAdaptiveTriggerFactory=_uuidof(IAdaptiveTriggerFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IAdaptiveTriggerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.AdaptiveTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IAdaptiveTriggerStatics[] = L"Microsoft.UI.Xaml.IAdaptiveTriggerStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E7A3547F-C077-5F20-AAB1-D16C30D9D37F"), exclusiveto, contract] */
            MIDL_INTERFACE("E7A3547F-C077-5F20-AAB1-D16C30D9D37F")
            IAdaptiveTriggerStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinWindowWidthProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinWindowHeightProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAdaptiveTriggerStatics=_uuidof(IAdaptiveTriggerStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplication
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Application
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplication_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplication_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplication[] = L"Microsoft.UI.Xaml.IApplication";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("9BC9D617-B5F8-5AD8-80C1-93D8B82425F9"), exclusiveto, contract] */
            MIDL_INTERFACE("9BC9D617-B5F8-5AD8-80C1-93D8B82425F9")
            IApplication : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Resources(
                    /* [retval, out] */Microsoft::UI::Xaml::IResourceDictionary * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Resources(
                    /* [in] */Microsoft::UI::Xaml::IResourceDictionary * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DebugSettings(
                    /* [retval, out] */Microsoft::UI::Xaml::IDebugSettings * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RequestedTheme(
                    /* [retval, out] */Microsoft::UI::Xaml::ApplicationTheme * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RequestedTheme(
                    /* [in] */Microsoft::UI::Xaml::ApplicationTheme value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualKind(
                    /* [retval, out] */Microsoft::UI::Xaml::FocusVisualKind * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FocusVisualKind(
                    /* [in] */Microsoft::UI::Xaml::FocusVisualKind value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RequiresPointerMode(
                    /* [retval, out] */Microsoft::UI::Xaml::ApplicationRequiresPointerMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RequiresPointerMode(
                    /* [in] */Microsoft::UI::Xaml::ApplicationRequiresPointerMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HighContrastAdjustment(
                    /* [retval, out] */Microsoft::UI::Xaml::ApplicationHighContrastAdjustment * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_HighContrastAdjustment(
                    /* [in] */Microsoft::UI::Xaml::ApplicationHighContrastAdjustment value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_UnhandledException(
                    /* [in] */Microsoft::UI::Xaml::IUnhandledExceptionEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_UnhandledException(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Suspending(
                    /* [in] */Microsoft::UI::Xaml::ISuspendingEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Suspending(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Resuming(
                    /* [in] */__FIEventHandler_1_IInspectable * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Resuming(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_LeavingBackground(
                    /* [in] */Microsoft::UI::Xaml::ILeavingBackgroundEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_LeavingBackground(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_EnteredBackground(
                    /* [in] */Microsoft::UI::Xaml::IEnteredBackgroundEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_EnteredBackground(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Exit(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IApplication=_uuidof(IApplication);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplication;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplication_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplicationFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Application
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplicationFactory[] = L"Microsoft.UI.Xaml.IApplicationFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("9FD96657-5294-5A65-A1DB-4FEA143597DA"), exclusiveto, contract] */
            MIDL_INTERFACE("9FD96657-5294-5A65-A1DB-4FEA143597DA")
            IApplicationFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IApplication * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IApplicationFactory=_uuidof(IApplicationFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplicationInitializationCallbackParams
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ApplicationInitializationCallbackParams
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplicationInitializationCallbackParams[] = L"Microsoft.UI.Xaml.IApplicationInitializationCallbackParams";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("1B1906EA-5B7B-5876-81AB-7C2281AC3D20"), exclusiveto, contract] */
            MIDL_INTERFACE("1B1906EA-5B7B-5876-81AB-7C2281AC3D20")
            IApplicationInitializationCallbackParams : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IApplicationInitializationCallbackParams=_uuidof(IApplicationInitializationCallbackParams);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplicationOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Application
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplicationOverrides[] = L"Microsoft.UI.Xaml.IApplicationOverrides";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("3785B209-37BB-5B49-B3C6-6974DCDC4787"), exclusiveto, contract] */
            MIDL_INTERFACE("3785B209-37BB-5B49-B3C6-6974DCDC4787")
            IApplicationOverrides : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE OnActivated(
                    /* [in] */Windows::ApplicationModel::Activation::IActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnLaunched(
                    /* [in] */Microsoft::UI::Xaml::ILaunchActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnFileActivated(
                    /* [in] */Windows::ApplicationModel::Activation::IFileActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnSearchActivated(
                    /* [in] */Windows::ApplicationModel::Activation::ISearchActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnShareTargetActivated(
                    /* [in] */Windows::ApplicationModel::Activation::IShareTargetActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnFileOpenPickerActivated(
                    /* [in] */Windows::ApplicationModel::Activation::IFileOpenPickerActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnFileSavePickerActivated(
                    /* [in] */Windows::ApplicationModel::Activation::IFileSavePickerActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnCachedFileUpdaterActivated(
                    /* [in] */Windows::ApplicationModel::Activation::ICachedFileUpdaterActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnBackgroundActivated(
                    /* [in] */Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnWindowCreated(
                    /* [in] */Microsoft::UI::Xaml::IWindowCreatedEventArgs * args
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IApplicationOverrides=_uuidof(IApplicationOverrides);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationOverrides;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplicationStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Application
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplicationStatics[] = L"Microsoft.UI.Xaml.IApplicationStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("4E0D09F5-4358-512C-A987-503B52848E95"), exclusiveto, contract] */
            MIDL_INTERFACE("4E0D09F5-4358-512C-A987-503B52848E95")
            IApplicationStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Current(
                    /* [retval, out] */Microsoft::UI::Xaml::IApplication * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Start(
                    /* [in] */Microsoft::UI::Xaml::IApplicationInitializationCallback  * callback
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE LoadComponent(
                    /* [in] */IInspectable * component,
                    /* [in] */Windows::Foundation::IUriRuntimeClass * resourceLocator
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE LoadComponentWithResourceLocation(
                    /* [in] */IInspectable * component,
                    /* [in] */Windows::Foundation::IUriRuntimeClass * resourceLocator,
                    /* [in] */Microsoft::UI::Xaml::Controls::Primitives::ComponentResourceLocation componentResourceLocation
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IApplicationStatics=_uuidof(IApplicationStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IAtlasRequestCallback
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IAtlasRequestCallback[] = L"Microsoft.UI.Xaml.IAtlasRequestCallback";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("15645012-8F3F-5090-B584-DF078FCC509A"), contract] */
            MIDL_INTERFACE("15645012-8F3F-5090-B584-DF078FCC509A")
            IAtlasRequestCallback : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE AtlasRequest(
                    /* [in] */UINT32 width,
                    /* [in] */UINT32 height,
                    /* [in] */Windows::Graphics::DirectX::DirectXPixelFormat pixelFormat,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IAtlasRequestCallback=_uuidof(IAtlasRequestCallback);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIAtlasRequestCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IBindingFailedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BindingFailedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBindingFailedEventArgs[] = L"Microsoft.UI.Xaml.IBindingFailedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A7BF50F3-DBC0-5B44-BE74-56E8F80FD716"), exclusiveto, contract] */
            MIDL_INTERFACE("A7BF50F3-DBC0-5B44-BE74-56E8F80FD716")
            IBindingFailedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Message(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBindingFailedEventArgs=_uuidof(IBindingFailedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IBringIntoViewOptions
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BringIntoViewOptions
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBringIntoViewOptions[] = L"Microsoft.UI.Xaml.IBringIntoViewOptions";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("EEB4A447-EB9E-5003-A479-B9E3A886B708"), exclusiveto, contract] */
            MIDL_INTERFACE("EEB4A447-EB9E-5003-A479-B9E3A886B708")
            IBringIntoViewOptions : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AnimationDesired(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AnimationDesired(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TargetRect(
                    /* [retval, out] */__FIReference_1_Windows__CFoundation__CRect * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TargetRect(
                    /* [in] */__FIReference_1_Windows__CFoundation__CRect * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentRatio(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_HorizontalAlignmentRatio(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentRatio(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_VerticalAlignmentRatio(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HorizontalOffset(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_HorizontalOffset(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VerticalOffset(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_VerticalOffset(
                    /* [in] */DOUBLE value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBringIntoViewOptions=_uuidof(IBringIntoViewOptions);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBringIntoViewOptions;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IBringIntoViewRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBringIntoViewRequestedEventArgs[] = L"Microsoft.UI.Xaml.IBringIntoViewRequestedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("807DE8F9-B1DC-5A63-8101-5EE966841A27"), exclusiveto, contract] */
            MIDL_INTERFACE("807DE8F9-B1DC-5A63-8101-5EE966841A27")
            IBringIntoViewRequestedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TargetElement(
                    /* [retval, out] */Microsoft::UI::Xaml::IUIElement * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TargetElement(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AnimationDesired(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AnimationDesired(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TargetRect(
                    /* [retval, out] */Windows::Foundation::Rect * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TargetRect(
                    /* [in] */Windows::Foundation::Rect value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentRatio(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentRatio(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HorizontalOffset(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_HorizontalOffset(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VerticalOffset(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_VerticalOffset(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBringIntoViewRequestedEventArgs=_uuidof(IBringIntoViewRequestedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IBrushTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BrushTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBrushTransition[] = L"Microsoft.UI.Xaml.IBrushTransition";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A996A7BA-4567-5963-A112-76E3C0000204"), exclusiveto, contract] */
            MIDL_INTERFACE("A996A7BA-4567-5963-A112-76E3C0000204")
            IBrushTransition : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Duration(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Duration(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBrushTransition=_uuidof(IBrushTransition);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBrushTransition;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IBrushTransitionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BrushTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBrushTransitionFactory[] = L"Microsoft.UI.Xaml.IBrushTransitionFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("13735998-C3B6-5C24-B40A-7B166A6FFC2C"), exclusiveto, contract] */
            MIDL_INTERFACE("13735998-C3B6-5C24-B40A-7B166A6FFC2C")
            IBrushTransitionFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IBrushTransition * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IBrushTransitionFactory=_uuidof(IBrushTransitionFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBrushTransitionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IColorPaletteResources
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ColorPaletteResources
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IColorPaletteResources[] = L"Microsoft.UI.Xaml.IColorPaletteResources";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("1903A03C-1750-54FE-A434-14B227CBE701"), exclusiveto, contract] */
            MIDL_INTERFACE("1903A03C-1750-54FE-A434-14B227CBE701")
            IColorPaletteResources : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AltHigh(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AltHigh(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AltLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AltLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AltMedium(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AltMedium(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AltMediumHigh(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AltMediumHigh(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AltMediumLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AltMediumLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BaseHigh(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BaseHigh(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BaseLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BaseLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BaseMedium(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BaseMedium(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BaseMediumHigh(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BaseMediumHigh(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BaseMediumLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BaseMediumLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeAltLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeAltLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeBlackHigh(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeBlackHigh(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeBlackLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeBlackLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeBlackMediumLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeBlackMediumLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeBlackMedium(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeBlackMedium(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeDisabledHigh(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeDisabledHigh(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeDisabledLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeDisabledLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeHigh(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeHigh(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeMedium(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeMedium(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeMediumLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeMediumLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeWhite(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeWhite(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ChromeGray(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ChromeGray(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ListLow(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ListLow(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ListMedium(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ListMedium(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ErrorText(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ErrorText(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Accent(
                    /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Accent(
                    /* [in] */__FIReference_1_Windows__CUI__CColor * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IColorPaletteResources=_uuidof(IColorPaletteResources);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIColorPaletteResources;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IColorPaletteResourcesFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ColorPaletteResources
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IColorPaletteResourcesFactory[] = L"Microsoft.UI.Xaml.IColorPaletteResourcesFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("32FDE185-8544-59C0-9E0A-E6E0BAD9EDCF"), exclusiveto, contract] */
            MIDL_INTERFACE("32FDE185-8544-59C0-9E0A-E6E0BAD9EDCF")
            IColorPaletteResourcesFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IColorPaletteResources * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IColorPaletteResourcesFactory=_uuidof(IColorPaletteResourcesFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ICornerRadiusHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.CornerRadiusHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ICornerRadiusHelper[] = L"Microsoft.UI.Xaml.ICornerRadiusHelper";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("DFCC382D-CFA8-5614-A35A-4091D1A81C9E"), exclusiveto, contract] */
            MIDL_INTERFACE("DFCC382D-CFA8-5614-A35A-4091D1A81C9E")
            ICornerRadiusHelper : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ICornerRadiusHelper=_uuidof(ICornerRadiusHelper);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CICornerRadiusHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ICornerRadiusHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.CornerRadiusHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ICornerRadiusHelperStatics[] = L"Microsoft.UI.Xaml.ICornerRadiusHelperStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("77352882-894B-5DED-B54C-A86105E4E068"), exclusiveto, contract] */
            MIDL_INTERFACE("77352882-894B-5DED-B54C-A86105E4E068")
            ICornerRadiusHelperStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE FromRadii(
                    /* [in] */DOUBLE topLeft,
                    /* [in] */DOUBLE topRight,
                    /* [in] */DOUBLE bottomRight,
                    /* [in] */DOUBLE bottomLeft,
                    /* [retval, out] */Microsoft::UI::Xaml::CornerRadius * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromUniformRadius(
                    /* [in] */DOUBLE uniformRadius,
                    /* [retval, out] */Microsoft::UI::Xaml::CornerRadius * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ICornerRadiusHelperStatics=_uuidof(ICornerRadiusHelperStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataContextChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataContextChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataContextChangedEventArgs[] = L"Microsoft.UI.Xaml.IDataContextChangedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A1BE80F4-CF83-5022-B113-9233F1D4FAFA"), exclusiveto, contract] */
            MIDL_INTERFACE("A1BE80F4-CF83-5022-B113-9233F1D4FAFA")
            IDataContextChangedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NewValue(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDataContextChangedEventArgs=_uuidof(IDataContextChangedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplate
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplate[] = L"Microsoft.UI.Xaml.IDataTemplate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("08FA70FA-EE75-5E92-A101-F52D0E1E9FAB"), exclusiveto, contract] */
            MIDL_INTERFACE("08FA70FA-EE75-5E92-A101-F52D0E1E9FAB")
            IDataTemplate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE LoadContent(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDataTemplate=_uuidof(IDataTemplate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateExtension
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateExtension[] = L"Microsoft.UI.Xaml.IDataTemplateExtension";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("351E63C4-8FA3-5CC3-B073-7F84BAA6485D"), contract] */
            MIDL_INTERFACE("351E63C4-8FA3-5CC3-B073-7F84BAA6485D")
            IDataTemplateExtension : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE ResetTemplate(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE ProcessBinding(
                    /* [in] */UINT32 phase,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ProcessBindings(
                    /* [in] */Microsoft::UI::Xaml::Controls::IContainerContentChangingEventArgs * arg,
                    /* [retval, out] */INT32 * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDataTemplateExtension=_uuidof(IDataTemplateExtension);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateExtension;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateFactory[] = L"Microsoft.UI.Xaml.IDataTemplateFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("D8E8249D-305B-5CA5-ACF8-3E1BEFFD0219"), exclusiveto, contract] */
            MIDL_INTERFACE("D8E8249D-305B-5CA5-ACF8-3E1BEFFD0219")
            IDataTemplateFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IDataTemplate * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDataTemplateFactory=_uuidof(IDataTemplateFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateKey
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplateKey
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateKey[] = L"Microsoft.UI.Xaml.IDataTemplateKey";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("6E704A95-4B2F-5BA8-ADA5-1261C832BAED"), exclusiveto, contract] */
            MIDL_INTERFACE("6E704A95-4B2F-5BA8-ADA5-1261C832BAED")
            IDataTemplateKey : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DataType(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DataType(
                    /* [in] */IInspectable * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDataTemplateKey=_uuidof(IDataTemplateKey);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateKey;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateKeyFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplateKey
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateKeyFactory[] = L"Microsoft.UI.Xaml.IDataTemplateKeyFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("13B2F604-EEBC-5DAA-8A5B-460C4FABDEB7"), exclusiveto, contract] */
            MIDL_INTERFACE("13B2F604-EEBC-5DAA-8A5B-460C4FABDEB7")
            IDataTemplateKeyFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IDataTemplateKey * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithType(
                    /* [in] */IInspectable * dataType,
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IDataTemplateKey * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDataTemplateKeyFactory=_uuidof(IDataTemplateKeyFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateStatics[] = L"Microsoft.UI.Xaml.IDataTemplateStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("CF6ADA69-4BF1-5F2D-8BDB-09EA1A26F975"), exclusiveto, contract] */
            MIDL_INTERFACE("CF6ADA69-4BF1-5F2D-8BDB-09EA1A26F975")
            IDataTemplateStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ExtensionInstanceProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetExtensionInstance(
                    /* [in] */Microsoft::UI::Xaml::IFrameworkElement * element,
                    /* [retval, out] */Microsoft::UI::Xaml::IDataTemplateExtension * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetExtensionInstance(
                    /* [in] */Microsoft::UI::Xaml::IFrameworkElement * element,
                    /* [in] */Microsoft::UI::Xaml::IDataTemplateExtension * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDataTemplateStatics=_uuidof(IDataTemplateStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDebugSettings
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DebugSettings
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDebugSettings[] = L"Microsoft.UI.Xaml.IDebugSettings";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("4004943B-2509-5476-BBA2-3FE05ECF615D"), exclusiveto, contract] */
            MIDL_INTERFACE("4004943B-2509-5476-BBA2-3FE05ECF615D")
            IDebugSettings : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_EnableFrameRateCounter(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_EnableFrameRateCounter(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsBindingTracingEnabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsBindingTracingEnabled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsTextPerformanceVisualizationEnabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsTextPerformanceVisualizationEnabled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FailFastOnErrors(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FailFastOnErrors(
                    /* [in] */::boolean value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_BindingFailed(
                    /* [in] */Microsoft::UI::Xaml::IBindingFailedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_BindingFailed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDebugSettings=_uuidof(IDebugSettings);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDebugSettings;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyObject
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyObject
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyObject[] = L"Microsoft.UI.Xaml.IDependencyObject";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("9FB92D6F-2CC3-5892-ABB3-45F6461EA7E4"), exclusiveto, contract] */
            MIDL_INTERFACE("9FB92D6F-2CC3-5892-ABB3-45F6461EA7E4")
            IDependencyObject : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetValue(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp,
                    /* [retval, out] */IInspectable * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetValue(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp,
                    /* [in] */IInspectable * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ClearValue(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ReadLocalValue(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp,
                    /* [retval, out] */IInspectable * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetAnimationBaseValue(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp,
                    /* [retval, out] */IInspectable * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RegisterPropertyChangedCallback(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp,
                    /* [in] */Microsoft::UI::Xaml::IDependencyPropertyChangedCallback  * callback,
                    /* [retval, out] */INT64 * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE UnregisterPropertyChangedCallback(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp,
                    /* [in] */INT64 token
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Dispatcher(
                    /* [retval, out] */Windows::UI::Core::ICoreDispatcher * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DispatcherQueue(
                    /* [retval, out] */Microsoft::System::IDispatcherQueue * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDependencyObject=_uuidof(IDependencyObject);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyObject;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyObjectCollectionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyObjectCollection
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyObjectCollectionFactory[] = L"Microsoft.UI.Xaml.IDependencyObjectCollectionFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("2A74EE43-90FD-5D61-9383-584EA8422B39"), exclusiveto, contract] */
            MIDL_INTERFACE("2A74EE43-90FD-5D61-9383-584EA8422B39")
            IDependencyObjectCollectionFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */__FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDependencyObjectCollectionFactory=_uuidof(IDependencyObjectCollectionFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyObjectFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyObject
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyObjectFactory[] = L"Microsoft.UI.Xaml.IDependencyObjectFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("936B614C-475F-5D7D-B3F7-BF1FBEA28126"), exclusiveto, contract] */
            MIDL_INTERFACE("936B614C-475F-5D7D-B3F7-BF1FBEA28126")
            IDependencyObjectFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDependencyObjectFactory=_uuidof(IDependencyObjectFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyObjectFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyProperty
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyProperty
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyProperty[] = L"Microsoft.UI.Xaml.IDependencyProperty";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("960EAB49-9672-58A0-995B-3A42E5EA6278"), exclusiveto, contract] */
            MIDL_INTERFACE("960EAB49-9672-58A0-995B-3A42E5EA6278")
            IDependencyProperty : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetMetadata(
                    /* [in] */Windows::UI::Xaml::Interop::TypeName forType,
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyMetadata * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDependencyProperty=_uuidof(IDependencyProperty);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyProperty;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyPropertyChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyPropertyChangedEventArgs[] = L"Microsoft.UI.Xaml.IDependencyPropertyChangedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("84EAD020-7849-5E98-8030-488A80D164EC"), exclusiveto, contract] */
            MIDL_INTERFACE("84EAD020-7849-5E98-8030-488A80D164EC")
            IDependencyPropertyChangedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Property(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OldValue(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NewValue(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDependencyPropertyChangedEventArgs=_uuidof(IDependencyPropertyChangedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyPropertyStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyProperty
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyPropertyStatics[] = L"Microsoft.UI.Xaml.IDependencyPropertyStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("61DDC651-0383-5D6F-98CE-5C046AAAAA8F"), exclusiveto, contract] */
            MIDL_INTERFACE("61DDC651-0383-5D6F-98CE-5C046AAAAA8F")
            IDependencyPropertyStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UnsetValue(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Register(
                    /* [in] */HSTRING name,
                    /* [in] */Windows::UI::Xaml::Interop::TypeName propertyType,
                    /* [in] */Windows::UI::Xaml::Interop::TypeName ownerType,
                    /* [in] */Microsoft::UI::Xaml::IPropertyMetadata * typeMetadata,
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RegisterAttached(
                    /* [in] */HSTRING name,
                    /* [in] */Windows::UI::Xaml::Interop::TypeName propertyType,
                    /* [in] */Windows::UI::Xaml::Interop::TypeName ownerType,
                    /* [in] */Microsoft::UI::Xaml::IPropertyMetadata * defaultMetadata,
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDependencyPropertyStatics=_uuidof(IDependencyPropertyStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDispatcherTimer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DispatcherTimer
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDispatcherTimer[] = L"Microsoft.UI.Xaml.IDispatcherTimer";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("58A4ABF1-A4A3-53DD-AE21-08F43231E817"), exclusiveto, contract] */
            MIDL_INTERFACE("58A4ABF1-A4A3-53DD-AE21-08F43231E817")
            IDispatcherTimer : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Interval(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Interval(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsEnabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Tick(
                    /* [in] */__FIEventHandler_1_IInspectable * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Tick(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Start(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Stop(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDispatcherTimer=_uuidof(IDispatcherTimer);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDispatcherTimer;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDispatcherTimerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DispatcherTimer
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDispatcherTimerFactory[] = L"Microsoft.UI.Xaml.IDispatcherTimerFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("1BCB3166-22E4-50BF-A5A2-B78CA4377BD0"), exclusiveto, contract] */
            MIDL_INTERFACE("1BCB3166-22E4-50BF-A5A2-B78CA4377BD0")
            IDispatcherTimerFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IDispatcherTimer * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDispatcherTimerFactory=_uuidof(IDispatcherTimerFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragEventArgs[] = L"Microsoft.UI.Xaml.IDragEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("47AC5757-E4BC-52BA-8AB9-1BF81AAD7900"), exclusiveto, contract] */
            MIDL_INTERFACE("47AC5757-E4BC-52BA-8AB9-1BF81AAD7900")
            IDragEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Data(
                    /* [retval, out] */Windows::ApplicationModel::DataTransfer::IDataPackage * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Data(
                    /* [in] */Windows::ApplicationModel::DataTransfer::IDataPackage * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DataView(
                    /* [retval, out] */Windows::ApplicationModel::DataTransfer::IDataPackageView * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DragUIOverride(
                    /* [retval, out] */Microsoft::UI::Xaml::IDragUIOverride * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Modifiers(
                    /* [retval, out] */Windows::ApplicationModel::DataTransfer::DragDrop::DragDropModifiers * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AcceptedOperation(
                    /* [retval, out] */Windows::ApplicationModel::DataTransfer::DataPackageOperation * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AcceptedOperation(
                    /* [in] */Windows::ApplicationModel::DataTransfer::DataPackageOperation value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowedOperations(
                    /* [retval, out] */Windows::ApplicationModel::DataTransfer::DataPackageOperation * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                    /* [retval, out] */Microsoft::UI::Xaml::IDragOperationDeferral * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetPosition(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * relativeTo,
                    /* [retval, out] */Windows::Foundation::Point * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDragEventArgs=_uuidof(IDragEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragOperationDeferral
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragOperationDeferral
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragOperationDeferral[] = L"Microsoft.UI.Xaml.IDragOperationDeferral";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("462C1880-FC6A-5035-8ABF-564BACB78158"), exclusiveto, contract] */
            MIDL_INTERFACE("462C1880-FC6A-5035-8ABF-564BACB78158")
            IDragOperationDeferral : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE Complete(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDragOperationDeferral=_uuidof(IDragOperationDeferral);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragOperationDeferral;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragStartingEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragStartingEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragStartingEventArgs[] = L"Microsoft.UI.Xaml.IDragStartingEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("AD17BACE-9613-5666-A31B-79A73FBA77CF"), exclusiveto, contract] */
            MIDL_INTERFACE("AD17BACE-9613-5666-A31B-79A73FBA77CF")
            IDragStartingEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Cancel(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Cancel(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Data(
                    /* [retval, out] */Windows::ApplicationModel::DataTransfer::IDataPackage * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DragUI(
                    /* [retval, out] */Microsoft::UI::Xaml::IDragUI * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowedOperations(
                    /* [retval, out] */Windows::ApplicationModel::DataTransfer::DataPackageOperation * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AllowedOperations(
                    /* [in] */Windows::ApplicationModel::DataTransfer::DataPackageOperation value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetDeferral(
                    /* [retval, out] */Microsoft::UI::Xaml::IDragOperationDeferral * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetPosition(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * relativeTo,
                    /* [retval, out] */Windows::Foundation::Point * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDragStartingEventArgs=_uuidof(IDragStartingEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragStartingEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragUI
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragUI
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragUI[] = L"Microsoft.UI.Xaml.IDragUI";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("35F170E0-93BF-58DA-877A-8EC77D8D9F00"), exclusiveto, contract] */
            MIDL_INTERFACE("35F170E0-93BF-58DA-877A-8EC77D8D9F00")
            IDragUI : public IInspectable
            {
            public:
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImage(
                    /* [in] */Microsoft::UI::Xaml::Media::Imaging::IBitmapImage * bitmapImage
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImageWithAnchorPoint(
                    /* [in] */Microsoft::UI::Xaml::Media::Imaging::IBitmapImage * bitmapImage,
                    /* [in] */Windows::Foundation::Point anchorPoint
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmap(
                    /* [in] */Windows::Graphics::Imaging::ISoftwareBitmap * softwareBitmap
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmapWithAnchorPoint(
                    /* [in] */Windows::Graphics::Imaging::ISoftwareBitmap * softwareBitmap,
                    /* [in] */Windows::Foundation::Point anchorPoint
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetContentFromDataPackage(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDragUI=_uuidof(IDragUI);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragUI;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragUIOverride
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragUIOverride
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragUIOverride[] = L"Microsoft.UI.Xaml.IDragUIOverride";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("3260B18B-70DF-5DF2-B98A-56BEB0601F79"), exclusiveto, contract] */
            MIDL_INTERFACE("3260B18B-70DF-5DF2-B98A-56BEB0601F79")
            IDragUIOverride : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Caption(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Caption(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsContentVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsContentVisible(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsCaptionVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsCaptionVisible(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsGlyphVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsGlyphVisible(
                    /* [in] */::boolean value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Clear(void) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImage(
                    /* [in] */Microsoft::UI::Xaml::Media::Imaging::IBitmapImage * bitmapImage
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetContentFromBitmapImageWithAnchorPoint(
                    /* [in] */Microsoft::UI::Xaml::Media::Imaging::IBitmapImage * bitmapImage,
                    /* [in] */Windows::Foundation::Point anchorPoint
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmap(
                    /* [in] */Windows::Graphics::Imaging::ISoftwareBitmap * softwareBitmap
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE SetContentFromSoftwareBitmapWithAnchorPoint(
                    /* [in] */Windows::Graphics::Imaging::ISoftwareBitmap * softwareBitmap,
                    /* [in] */Windows::Foundation::Point anchorPoint
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDragUIOverride=_uuidof(IDragUIOverride);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragUIOverride;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDropCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DropCompletedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDropCompletedEventArgs[] = L"Microsoft.UI.Xaml.IDropCompletedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E700082D-C640-5D44-B23A-F213DFBEB245"), exclusiveto, contract] */
            MIDL_INTERFACE("E700082D-C640-5D44-B23A-F213DFBEB245")
            IDropCompletedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DropResult(
                    /* [retval, out] */Windows::ApplicationModel::DataTransfer::DataPackageOperation * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDropCompletedEventArgs=_uuidof(IDropCompletedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDurationHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DurationHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDurationHelper[] = L"Microsoft.UI.Xaml.IDurationHelper";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("CC1089AB-8041-5C3E-B753-8397E7358CC6"), exclusiveto, contract] */
            MIDL_INTERFACE("CC1089AB-8041-5C3E-B753-8397E7358CC6")
            IDurationHelper : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IDurationHelper=_uuidof(IDurationHelper);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDurationHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDurationHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DurationHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDurationHelperStatics[] = L"Microsoft.UI.Xaml.IDurationHelperStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("491FEB2C-3475-5F89-B15C-49C236EB514C"), exclusiveto, contract] */
            MIDL_INTERFACE("491FEB2C-3475-5F89-B15C-49C236EB514C")
            IDurationHelperStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Automatic(
                    /* [retval, out] */Microsoft::UI::Xaml::Duration * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Forever(
                    /* [retval, out] */Microsoft::UI::Xaml::Duration * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Compare(
                    /* [in] */Microsoft::UI::Xaml::Duration duration1,
                    /* [in] */Microsoft::UI::Xaml::Duration duration2,
                    /* [retval, out] */INT32 * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromTimeSpan(
                    /* [in] */Windows::Foundation::TimeSpan timeSpan,
                    /* [retval, out] */Microsoft::UI::Xaml::Duration * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetHasTimeSpan(
                    /* [in] */Microsoft::UI::Xaml::Duration target,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Add(
                    /* [in] */Microsoft::UI::Xaml::Duration target,
                    /* [in] */Microsoft::UI::Xaml::Duration duration,
                    /* [retval, out] */Microsoft::UI::Xaml::Duration * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Equals(
                    /* [in] */Microsoft::UI::Xaml::Duration target,
                    /* [in] */Microsoft::UI::Xaml::Duration value,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Subtract(
                    /* [in] */Microsoft::UI::Xaml::Duration target,
                    /* [in] */Microsoft::UI::Xaml::Duration duration,
                    /* [retval, out] */Microsoft::UI::Xaml::Duration * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDurationHelperStatics=_uuidof(IDurationHelperStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDurationHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDxamlCoreTestHooks
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DxamlCoreTestHooks
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDxamlCoreTestHooks[] = L"Microsoft.UI.Xaml.IDxamlCoreTestHooks";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E44D8E58-844D-5201-83BD-5D48CEB7035D"), exclusiveto, contract] */
            MIDL_INTERFACE("E44D8E58-844D-5201-83BD-5D48CEB7035D")
            IDxamlCoreTestHooks : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IDxamlCoreTestHooks=_uuidof(IDxamlCoreTestHooks);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDxamlCoreTestHooksStatics
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DxamlCoreTestHooks
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDxamlCoreTestHooksStatics[] = L"Microsoft.UI.Xaml.IDxamlCoreTestHooksStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("4B2F7A38-3584-53E8-A67F-F3EDF229E5AB"), exclusiveto, contract] */
            MIDL_INTERFACE("4B2F7A38-3584-53E8-A67F-F3EDF229E5AB")
            IDxamlCoreTestHooksStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetForCurrentThread(
                    /* [retval, out] */Microsoft::UI::Xaml::IDxamlCoreTestHooks * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IDxamlCoreTestHooksStatics=_uuidof(IDxamlCoreTestHooksStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IEffectiveViewportChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IEffectiveViewportChangedEventArgs[] = L"Microsoft.UI.Xaml.IEffectiveViewportChangedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("636E8159-2D82-538A-8483-CD576E41D0DF"), exclusiveto, contract] */
            MIDL_INTERFACE("636E8159-2D82-538A-8483-CD576E41D0DF")
            IEffectiveViewportChangedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_EffectiveViewport(
                    /* [retval, out] */Windows::Foundation::Rect * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxViewport(
                    /* [retval, out] */Windows::Foundation::Rect * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BringIntoViewDistanceX(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BringIntoViewDistanceY(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IEffectiveViewportChangedEventArgs=_uuidof(IEffectiveViewportChangedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactory[] = L"Microsoft.UI.Xaml.IElementFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("75FABA47-2CF2-54AE-91E6-0581556FDDAA"), contract] */
            MIDL_INTERFACE("75FABA47-2CF2-54AE-91E6-0581556FDDAA")
            IElementFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetElement(
                    /* [in] */Microsoft::UI::Xaml::IElementFactoryGetArgs * args,
                    /* [retval, out] */Microsoft::UI::Xaml::IUIElement * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RecycleElement(
                    /* [in] */Microsoft::UI::Xaml::IElementFactoryRecycleArgs * args
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IElementFactory=_uuidof(IElementFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactoryGetArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementFactoryGetArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactoryGetArgs[] = L"Microsoft.UI.Xaml.IElementFactoryGetArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("B7017D68-EC9E-5435-B078-BE6F906F0953"), exclusiveto, contract] */
            MIDL_INTERFACE("B7017D68-EC9E-5435-B078-BE6F906F0953")
            IElementFactoryGetArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Data(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Data(
                    /* [in] */IInspectable * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Parent(
                    /* [retval, out] */Microsoft::UI::Xaml::IUIElement * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Parent(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IElementFactoryGetArgs=_uuidof(IElementFactoryGetArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactoryGetArgsFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementFactoryGetArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactoryGetArgsFactory[] = L"Microsoft.UI.Xaml.IElementFactoryGetArgsFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A88E401B-9FE5-5960-87A3-89A3CFE2531C"), exclusiveto, contract] */
            MIDL_INTERFACE("A88E401B-9FE5-5960-87A3-89A3CFE2531C")
            IElementFactoryGetArgsFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IElementFactoryGetArgs * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IElementFactoryGetArgsFactory=_uuidof(IElementFactoryGetArgsFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactoryRecycleArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementFactoryRecycleArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactoryRecycleArgs[] = L"Microsoft.UI.Xaml.IElementFactoryRecycleArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("46E444F7-05D3-5C5E-9B7A-5541F63E4EF9"), exclusiveto, contract] */
            MIDL_INTERFACE("46E444F7-05D3-5C5E-9B7A-5541F63E4EF9")
            IElementFactoryRecycleArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Element(
                    /* [retval, out] */Microsoft::UI::Xaml::IUIElement * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Element(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Parent(
                    /* [retval, out] */Microsoft::UI::Xaml::IUIElement * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Parent(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IElementFactoryRecycleArgs=_uuidof(IElementFactoryRecycleArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactoryRecycleArgsFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementFactoryRecycleArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactoryRecycleArgsFactory[] = L"Microsoft.UI.Xaml.IElementFactoryRecycleArgsFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("30EE194A-FE4D-53E7-A84A-CD34FAB0D4EF"), exclusiveto, contract] */
            MIDL_INTERFACE("30EE194A-FE4D-53E7-A84A-CD34FAB0D4EF")
            IElementFactoryRecycleArgsFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IElementFactoryRecycleArgs * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IElementFactoryRecycleArgsFactory=_uuidof(IElementFactoryRecycleArgsFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementSoundPlayer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementSoundPlayer
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementSoundPlayer[] = L"Microsoft.UI.Xaml.IElementSoundPlayer";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("0EA67E68-937C-5C00-B609-53B63D9A5D42"), exclusiveto, contract] */
            MIDL_INTERFACE("0EA67E68-937C-5C00-B609-53B63D9A5D42")
            IElementSoundPlayer : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IElementSoundPlayer=_uuidof(IElementSoundPlayer);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementSoundPlayer;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementSoundPlayerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementSoundPlayer
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementSoundPlayerStatics[] = L"Microsoft.UI.Xaml.IElementSoundPlayerStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("5A5A20C3-1C9B-5D61-9D63-487C8BF16ECB"), exclusiveto, contract] */
            MIDL_INTERFACE("5A5A20C3-1C9B-5D61-9D63-487C8BF16ECB")
            IElementSoundPlayerStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Volume(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Volume(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_State(
                    /* [retval, out] */Microsoft::UI::Xaml::ElementSoundPlayerState * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_State(
                    /* [in] */Microsoft::UI::Xaml::ElementSoundPlayerState value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_SpatialAudioMode(
                    /* [retval, out] */Microsoft::UI::Xaml::ElementSpatialAudioMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_SpatialAudioMode(
                    /* [in] */Microsoft::UI::Xaml::ElementSpatialAudioMode value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Play(
                    /* [in] */Microsoft::UI::Xaml::ElementSoundKind sound
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IElementSoundPlayerStatics=_uuidof(IElementSoundPlayerStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementSoundPlayerStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementSoundPlayerStaticsPrivate[] = L"Microsoft.UI.Xaml.IElementSoundPlayerStaticsPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("65D2203B-6FB0-5EBA-8821-F6DD313C33FB"), contract] */
            MIDL_INTERFACE("65D2203B-6FB0-5EBA-8821-F6DD313C33FB")
            IElementSoundPlayerStaticsPrivate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE RequestInteractionSoundForElement(
                    /* [in] */Microsoft::UI::Xaml::ElementSoundKind sound,
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * element
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetEffectiveSoundMode(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * element,
                    /* [retval, out] */Microsoft::UI::Xaml::ElementSoundMode * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IElementSoundPlayerStaticsPrivate=_uuidof(IElementSoundPlayerStaticsPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IEventTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.EventTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IEventTrigger[] = L"Microsoft.UI.Xaml.IEventTrigger";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("8C6F0541-C6AC-5F27-9D45-CF8BDBDFABE6"), exclusiveto, contract] */
            MIDL_INTERFACE("8C6F0541-C6AC-5F27-9D45-CF8BDBDFABE6")
            IEventTrigger : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RoutedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RoutedEvent(
                    /* [in] */Microsoft::UI::Xaml::IRoutedEvent * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Actions(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IEventTrigger=_uuidof(IEventTrigger);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIEventTrigger;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IExceptionRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ExceptionRoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IExceptionRoutedEventArgs[] = L"Microsoft.UI.Xaml.IExceptionRoutedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E8BCB6D2-D3F5-5393-A84F-DFCD44A2DF34"), exclusiveto, contract] */
            MIDL_INTERFACE("E8BCB6D2-D3F5-5393-A84F-DFCD44A2DF34")
            IExceptionRoutedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ErrorMessage(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IExceptionRoutedEventArgs=_uuidof(IExceptionRoutedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IExceptionRoutedEventArgsFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ExceptionRoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IExceptionRoutedEventArgsFactory[] = L"Microsoft.UI.Xaml.IExceptionRoutedEventArgsFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E1E71FB6-2AD0-5189-8D96-33BAE488C5FB"), exclusiveto, contract] */
            MIDL_INTERFACE("E1E71FB6-2AD0-5189-8D96-33BAE488C5FB")
            IExceptionRoutedEventArgsFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IExceptionRoutedEventArgsFactory=_uuidof(IExceptionRoutedEventArgsFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkApplicationPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkApplicationPrivate[] = L"Microsoft.UI.Xaml.IFrameworkApplicationPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("5CA69216-9979-5E26-B067-D45856580732"), contract] */
            MIDL_INTERFACE("5CA69216-9979-5E26-B067-D45856580732")
            IFrameworkApplicationPrivate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE StartOnCurrentThread(
                    /* [in] */Microsoft::UI::Xaml::IApplicationInitializationCallback  * callback
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateIsland(
                    /* [retval, out] */Microsoft::UI::Xaml::Hosting::IXamlIsland * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateIslandWithContentBridge(
                    /* [in] */IInspectable * owner,
                    /* [in] */IInspectable * contentBridge,
                    /* [retval, out] */Microsoft::UI::Xaml::Hosting::IXamlIsland * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RemoveIsland(
                    /* [in] */Microsoft::UI::Xaml::Hosting::IXamlIsland * island
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetSynchronizationWindow(
                    /* [in] */UINT64 commitResizeWindow
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkApplicationPrivate=_uuidof(IFrameworkApplicationPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkApplicationStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkApplicationStaticsPrivate[] = L"Microsoft.UI.Xaml.IFrameworkApplicationStaticsPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("66CB5498-0063-5D10-B06B-6C6CE06E4D2D"), contract] */
            MIDL_INTERFACE("66CB5498-0063-5D10-B06B-6C6CE06E4D2D")
            IFrameworkApplicationStaticsPrivate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE EnableFailFastOnStowedException(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkApplicationStaticsPrivate=_uuidof(IFrameworkApplicationStaticsPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElement
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElement[] = L"Microsoft.UI.Xaml.IFrameworkElement";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("FE08F13D-DC6A-5495-AD44-C2D8D21863B0"), exclusiveto, contract] */
            MIDL_INTERFACE("FE08F13D-DC6A-5495-AD44-C2D8D21863B0")
            IFrameworkElement : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Triggers(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Resources(
                    /* [retval, out] */Microsoft::UI::Xaml::IResourceDictionary * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Resources(
                    /* [in] */Microsoft::UI::Xaml::IResourceDictionary * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Tag(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Tag(
                    /* [in] */IInspectable * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Language(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Language(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualWidth(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualHeight(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Width(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Width(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Height(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Height(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinWidth(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MinWidth(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxWidth(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MaxWidth(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinHeight(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MinHeight(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxHeight(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_MaxHeight(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignment(
                    /* [retval, out] */Microsoft::UI::Xaml::HorizontalAlignment * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_HorizontalAlignment(
                    /* [in] */Microsoft::UI::Xaml::HorizontalAlignment value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignment(
                    /* [retval, out] */Microsoft::UI::Xaml::VerticalAlignment * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_VerticalAlignment(
                    /* [in] */Microsoft::UI::Xaml::VerticalAlignment value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Margin(
                    /* [retval, out] */Microsoft::UI::Xaml::Thickness * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Margin(
                    /* [in] */Microsoft::UI::Xaml::Thickness value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Name(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Name(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BaseUri(
                    /* [retval, out] */Windows::Foundation::IUriRuntimeClass * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DataContext(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_DataContext(
                    /* [in] */IInspectable * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowFocusOnInteraction(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AllowFocusOnInteraction(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualMargin(
                    /* [retval, out] */Microsoft::UI::Xaml::Thickness * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FocusVisualMargin(
                    /* [in] */Microsoft::UI::Xaml::Thickness value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualSecondaryThickness(
                    /* [retval, out] */Microsoft::UI::Xaml::Thickness * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FocusVisualSecondaryThickness(
                    /* [in] */Microsoft::UI::Xaml::Thickness value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualPrimaryThickness(
                    /* [retval, out] */Microsoft::UI::Xaml::Thickness * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FocusVisualPrimaryThickness(
                    /* [in] */Microsoft::UI::Xaml::Thickness value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualSecondaryBrush(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::IBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FocusVisualSecondaryBrush(
                    /* [in] */Microsoft::UI::Xaml::Media::IBrush * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualPrimaryBrush(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::IBrush * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FocusVisualPrimaryBrush(
                    /* [in] */Microsoft::UI::Xaml::Media::IBrush * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowFocusWhenDisabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AllowFocusWhenDisabled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Style(
                    /* [retval, out] */Microsoft::UI::Xaml::IStyle * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Style(
                    /* [in] */Microsoft::UI::Xaml::IStyle * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Parent(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FlowDirection(
                    /* [retval, out] */Microsoft::UI::Xaml::FlowDirection * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_FlowDirection(
                    /* [in] */Microsoft::UI::Xaml::FlowDirection value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RequestedTheme(
                    /* [retval, out] */Microsoft::UI::Xaml::ElementTheme * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RequestedTheme(
                    /* [in] */Microsoft::UI::Xaml::ElementTheme value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsLoaded(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualTheme(
                    /* [retval, out] */Microsoft::UI::Xaml::ElementTheme * value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Loaded(
                    /* [in] */Microsoft::UI::Xaml::IRoutedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Loaded(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Unloaded(
                    /* [in] */Microsoft::UI::Xaml::IRoutedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Unloaded(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_DataContextChanged(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_DataContextChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_SizeChanged(
                    /* [in] */Microsoft::UI::Xaml::ISizeChangedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_SizeChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_LayoutUpdated(
                    /* [in] */__FIEventHandler_1_IInspectable * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_LayoutUpdated(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Loading(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Loading(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ActualThemeChanged(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ActualThemeChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_EffectiveViewportChanged(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_EffectiveViewportChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindName(
                    /* [in] */HSTRING name,
                    /* [retval, out] */IInspectable * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetBinding(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp,
                    /* [in] */Microsoft::UI::Xaml::Data::IBindingBase * binding
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetBindingExpression(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * dp,
                    /* [retval, out] */Microsoft::UI::Xaml::Data::IBindingExpression * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkElement=_uuidof(IFrameworkElement);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElement;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElementFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElementFactory[] = L"Microsoft.UI.Xaml.IFrameworkElementFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("BD3F2272-3EFA-5F92-B759-90B1CC3E784C"), exclusiveto, contract] */
            MIDL_INTERFACE("BD3F2272-3EFA-5F92-B759-90B1CC3E784C")
            IFrameworkElementFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IFrameworkElement * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkElementFactory=_uuidof(IFrameworkElementFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElementFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElementOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElementOverrides[] = L"Microsoft.UI.Xaml.IFrameworkElementOverrides";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("FFC6FD98-F38C-5904-9CE4-97A3427CF4BA"), exclusiveto, contract] */
            MIDL_INTERFACE("FFC6FD98-F38C-5904-9CE4-97A3427CF4BA")
            IFrameworkElementOverrides : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE MeasureOverride(
                    /* [in] */Windows::Foundation::Size availableSize,
                    /* [retval, out] */Windows::Foundation::Size * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ArrangeOverride(
                    /* [in] */Windows::Foundation::Size finalSize,
                    /* [retval, out] */Windows::Foundation::Size * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnApplyTemplate(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE GoToElementStateCore(
                    /* [in] */HSTRING stateName,
                    /* [in] */::boolean useTransitions,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkElementOverrides=_uuidof(IFrameworkElementOverrides);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElementProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElementProtected[] = L"Microsoft.UI.Xaml.IFrameworkElementProtected";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E59A3DB0-91E5-5903-9CAF-D1BB9F458BF2"), exclusiveto, contract] */
            MIDL_INTERFACE("E59A3DB0-91E5-5903-9CAF-D1BB9F458BF2")
            IFrameworkElementProtected : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE InvalidateViewport(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkElementProtected=_uuidof(IFrameworkElementProtected);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElementProtected;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElementStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElementStatics[] = L"Microsoft.UI.Xaml.IFrameworkElementStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("894E2704-14E7-569A-B21E-AFC7DF7145A1"), exclusiveto, contract] */
            MIDL_INTERFACE("894E2704-14E7-569A-B21E-AFC7DF7145A1")
            IFrameworkElementStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TagProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LanguageProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualWidthProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualHeightProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_WidthProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HeightProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinWidthProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxWidthProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MinHeightProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MaxHeightProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HorizontalAlignmentProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VerticalAlignmentProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MarginProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NameProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DataContextProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowFocusOnInteractionProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualMarginProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualSecondaryThicknessProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualPrimaryThicknessProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualSecondaryBrushProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusVisualPrimaryBrushProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowFocusWhenDisabledProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StyleProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FlowDirectionProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RequestedThemeProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualThemeProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE DeferTree(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * element
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkElementStatics=_uuidof(IFrameworkElementStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElementStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkTemplate
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkTemplate[] = L"Microsoft.UI.Xaml.IFrameworkTemplate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("0084C7C2-DE48-5B0B-8A5A-E4FB76B7F7D1"), exclusiveto, contract] */
            MIDL_INTERFACE("0084C7C2-DE48-5B0B-8A5A-E4FB76B7F7D1")
            IFrameworkTemplate : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkTemplate=_uuidof(IFrameworkTemplate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkTemplate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkTemplateFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkTemplateFactory[] = L"Microsoft.UI.Xaml.IFrameworkTemplateFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("616DD6DB-B064-561D-B162-46CEB45DC562"), exclusiveto, contract] */
            MIDL_INTERFACE("616DD6DB-B064-561D-B162-46CEB45DC562")
            IFrameworkTemplateFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IFrameworkTemplate * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkTemplateFactory=_uuidof(IFrameworkTemplateFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkTemplatePrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkTemplatePrivate[] = L"Microsoft.UI.Xaml.IFrameworkTemplatePrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("3EC693E7-F042-5FDC-9661-5DCC9F03385D"), contract] */
            MIDL_INTERFACE("3EC693E7-F042-5FDC-9661-5DCC9F03385D")
            IFrameworkTemplatePrivate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE EnableTemplateCaching(
                    /* [in] */::boolean isTemplateCachingEnabled
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkTemplatePrivate=_uuidof(IFrameworkTemplatePrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkView
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkView
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkView[] = L"Microsoft.UI.Xaml.IFrameworkView";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E60094C3-45AF-5A8F-9511-1781D7DF1799"), exclusiveto, contract] */
            MIDL_INTERFACE("E60094C3-45AF-5A8F-9511-1781D7DF1799")
            IFrameworkView : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkView=_uuidof(IFrameworkView);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkView;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkViewSource
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkViewSource
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkViewSource[] = L"Microsoft.UI.Xaml.IFrameworkViewSource";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("52B5D975-6FA6-5B66-A248-D17443B2BCA0"), exclusiveto, contract] */
            MIDL_INTERFACE("52B5D975-6FA6-5B66-A248-D17443B2BCA0")
            IFrameworkViewSource : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IFrameworkViewSource=_uuidof(IFrameworkViewSource);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkViewSource;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IGridLengthHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.GridLengthHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IGridLengthHelper[] = L"Microsoft.UI.Xaml.IGridLengthHelper";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("592B4FD5-6564-54E0-87D6-1C41939ED499"), exclusiveto, contract] */
            MIDL_INTERFACE("592B4FD5-6564-54E0-87D6-1C41939ED499")
            IGridLengthHelper : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IGridLengthHelper=_uuidof(IGridLengthHelper);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIGridLengthHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IGridLengthHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.GridLengthHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IGridLengthHelperStatics[] = L"Microsoft.UI.Xaml.IGridLengthHelperStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("CEA8881B-4E64-535D-9FCD-B4828D3979B0"), exclusiveto, contract] */
            MIDL_INTERFACE("CEA8881B-4E64-535D-9FCD-B4828D3979B0")
            IGridLengthHelperStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Auto(
                    /* [retval, out] */Microsoft::UI::Xaml::GridLength * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromPixels(
                    /* [in] */DOUBLE pixels,
                    /* [retval, out] */Microsoft::UI::Xaml::GridLength * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromValueAndType(
                    /* [in] */DOUBLE value,
                    /* [in] */Microsoft::UI::Xaml::GridUnitType type,
                    /* [retval, out] */Microsoft::UI::Xaml::GridLength * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetIsAbsolute(
                    /* [in] */Microsoft::UI::Xaml::GridLength target,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetIsAuto(
                    /* [in] */Microsoft::UI::Xaml::GridLength target,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetIsStar(
                    /* [in] */Microsoft::UI::Xaml::GridLength target,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Equals(
                    /* [in] */Microsoft::UI::Xaml::GridLength target,
                    /* [in] */Microsoft::UI::Xaml::GridLength value,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IGridLengthHelperStatics=_uuidof(IGridLengthHelperStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ILaunchActivatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.LaunchActivatedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ILaunchActivatedEventArgs[] = L"Microsoft.UI.Xaml.ILaunchActivatedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("D505CEA9-1BCB-5B29-A8BE-944E00F06F78"), exclusiveto, contract] */
            MIDL_INTERFACE("D505CEA9-1BCB-5B29-A8BE-944E00F06F78")
            ILaunchActivatedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Arguments(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UWPLaunchActivatedEventArgs(
                    /* [retval, out] */Windows::ApplicationModel::Activation::ILaunchActivatedEventArgs * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ILaunchActivatedEventArgs=_uuidof(ILaunchActivatedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IMediaFailedRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.MediaFailedRoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IMediaFailedRoutedEventArgs[] = L"Microsoft.UI.Xaml.IMediaFailedRoutedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A1DCE737-539B-5E54-99AF-75ECE428BF9B"), exclusiveto, contract] */
            MIDL_INTERFACE("A1DCE737-539B-5E54-99AF-75ECE428BF9B")
            IMediaFailedRoutedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ErrorTrace(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IMediaFailedRoutedEventArgs=_uuidof(IMediaFailedRoutedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IMemoryInfoPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IMemoryInfoPrivate[] = L"Microsoft.UI.Xaml.IMemoryInfoPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("D11FAA49-8D7C-5C62-9D50-68E875A434BB"), contract] */
            MIDL_INTERFACE("D11FAA49-8D7C-5C62-9D50-68E875A434BB")
            IMemoryInfoPrivate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetCountOfDescendantUIElements(
                    /* [retval, out] */UINT64 * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetEstimatedSizeOfDescendantImages(
                    /* [retval, out] */UINT64 * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IMemoryInfoPrivate=_uuidof(IMemoryInfoPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPointHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PointHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPointHelper[] = L"Microsoft.UI.Xaml.IPointHelper";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("06FCC7A4-6099-5F2E-83A5-F3BE0E2C90AA"), exclusiveto, contract] */
            MIDL_INTERFACE("06FCC7A4-6099-5F2E-83A5-F3BE0E2C90AA")
            IPointHelper : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IPointHelper=_uuidof(IPointHelper);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPointHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPointHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PointHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPointHelperStatics[] = L"Microsoft.UI.Xaml.IPointHelperStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("B0B2BD44-600B-51B3-A42C-3FD36C1AB042"), exclusiveto, contract] */
            MIDL_INTERFACE("B0B2BD44-600B-51B3-A42C-3FD36C1AB042")
            IPointHelperStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE FromCoordinates(
                    /* [in] */FLOAT x,
                    /* [in] */FLOAT y,
                    /* [retval, out] */Windows::Foundation::Point * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPointHelperStatics=_uuidof(IPointHelperStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPointHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyMetadata
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyMetadata
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyMetadata[] = L"Microsoft.UI.Xaml.IPropertyMetadata";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("B3644425-9464-5434-B0AE-AFF8D3159FE1"), exclusiveto, contract] */
            MIDL_INTERFACE("B3644425-9464-5434-B0AE-AFF8D3159FE1")
            IPropertyMetadata : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DefaultValue(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CreateDefaultValueCallback(
                    /* [retval, out] */Microsoft::UI::Xaml::ICreateDefaultValueCallback  * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPropertyMetadata=_uuidof(IPropertyMetadata);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyMetadata;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyMetadataFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyMetadata
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyMetadataFactory[] = L"Microsoft.UI.Xaml.IPropertyMetadataFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("9F420906-111A-5465-91EE-BED14B3E7FEC"), exclusiveto, contract] */
            MIDL_INTERFACE("9F420906-111A-5465-91EE-BED14B3E7FEC")
            IPropertyMetadataFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDefaultValue(
                    /* [in] */IInspectable * defaultValue,
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyMetadata * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CreateInstanceWithDefaultValueAndCallback(
                    /* [in] */IInspectable * defaultValue,
                    /* [in] */Microsoft::UI::Xaml::IPropertyChangedCallback  * propertyChangedCallback,
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyMetadata * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPropertyMetadataFactory=_uuidof(IPropertyMetadataFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyMetadataStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyMetadata
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyMetadataStatics[] = L"Microsoft.UI.Xaml.IPropertyMetadataStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("37B8ADD4-7A4A-5CF7-A174-235182CD082E"), exclusiveto, contract] */
            MIDL_INTERFACE("37B8ADD4-7A4A-5CF7-A174-235182CD082E")
            IPropertyMetadataStatics : public IInspectable
            {
            public:
                /* [overload, default_overload] */virtual HRESULT STDMETHODCALLTYPE CreateWithDefaultValue(
                    /* [in] */IInspectable * defaultValue,
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyMetadata * * result
                    ) = 0;
                /* [overload, default_overload] */virtual HRESULT STDMETHODCALLTYPE CreateWithDefaultValueAndCallback(
                    /* [in] */IInspectable * defaultValue,
                    /* [in] */Microsoft::UI::Xaml::IPropertyChangedCallback  * propertyChangedCallback,
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyMetadata * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateWithFactory(
                    /* [in] */Microsoft::UI::Xaml::ICreateDefaultValueCallback  * createDefaultValueCallback,
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyMetadata * * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE CreateWithFactoryAndCallback(
                    /* [in] */Microsoft::UI::Xaml::ICreateDefaultValueCallback  * createDefaultValueCallback,
                    /* [in] */Microsoft::UI::Xaml::IPropertyChangedCallback  * propertyChangedCallback,
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyMetadata * * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPropertyMetadataStatics=_uuidof(IPropertyMetadataStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyPath
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyPath
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyPath[] = L"Microsoft.UI.Xaml.IPropertyPath";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("8B0712F6-9E57-53B0-80B1-966A79F60B96"), exclusiveto, contract] */
            MIDL_INTERFACE("8B0712F6-9E57-53B0-80B1-966A79F60B96")
            IPropertyPath : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Path(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPropertyPath=_uuidof(IPropertyPath);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyPath;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyPathFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyPath
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyPathFactory[] = L"Microsoft.UI.Xaml.IPropertyPathFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("08A8CCAB-7FF8-5CEC-BD3C-72C98804D989"), exclusiveto, contract] */
            MIDL_INTERFACE("08A8CCAB-7FF8-5CEC-BD3C-72C98804D989")
            IPropertyPathFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */HSTRING path,
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyPath * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IPropertyPathFactory=_uuidof(IPropertyPathFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyPathFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRectHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RectHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRectHelper[] = L"Microsoft.UI.Xaml.IRectHelper";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("5FECE92A-A3D2-5BC0-ACA1-E9E1FA86AE9D"), exclusiveto, contract] */
            MIDL_INTERFACE("5FECE92A-A3D2-5BC0-ACA1-E9E1FA86AE9D")
            IRectHelper : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IRectHelper=_uuidof(IRectHelper);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRectHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRectHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RectHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRectHelperStatics[] = L"Microsoft.UI.Xaml.IRectHelperStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A9CF37AD-5430-5086-A39F-74F0D1ED1072"), exclusiveto, contract] */
            MIDL_INTERFACE("A9CF37AD-5430-5086-A39F-74F0D1ED1072")
            IRectHelperStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Empty(
                    /* [retval, out] */Windows::Foundation::Rect * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromCoordinatesAndDimensions(
                    /* [in] */FLOAT x,
                    /* [in] */FLOAT y,
                    /* [in] */FLOAT width,
                    /* [in] */FLOAT height,
                    /* [retval, out] */Windows::Foundation::Rect * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromPoints(
                    /* [in] */Windows::Foundation::Point point1,
                    /* [in] */Windows::Foundation::Point point2,
                    /* [retval, out] */Windows::Foundation::Rect * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromLocationAndSize(
                    /* [in] */Windows::Foundation::Point location,
                    /* [in] */Windows::Foundation::Size size,
                    /* [retval, out] */Windows::Foundation::Rect * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetIsEmpty(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetBottom(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [retval, out] */FLOAT * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetLeft(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [retval, out] */FLOAT * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetRight(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [retval, out] */FLOAT * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetTop(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [retval, out] */FLOAT * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Contains(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [in] */Windows::Foundation::Point point,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Equals(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [in] */Windows::Foundation::Rect value,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Intersect(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [in] */Windows::Foundation::Rect rect,
                    /* [retval, out] */Windows::Foundation::Rect * result
                    ) = 0;
                /* [overload, default_overload] */virtual HRESULT STDMETHODCALLTYPE UnionWithPoint(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [in] */Windows::Foundation::Point point,
                    /* [retval, out] */Windows::Foundation::Rect * result
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE UnionWithRect(
                    /* [in] */Windows::Foundation::Rect target,
                    /* [in] */Windows::Foundation::Rect rect,
                    /* [retval, out] */Windows::Foundation::Rect * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IRectHelperStatics=_uuidof(IRectHelperStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRectHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRectHelperStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRectHelperStaticsPrivate[] = L"Microsoft.UI.Xaml.IRectHelperStaticsPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("08298572-672B-5053-8A13-31110E24314F"), contract] */
            MIDL_INTERFACE("08298572-672B-5053-8A13-31110E24314F")
            IRectHelperStaticsPrivate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE DipsRectToPhysicalRect(
                    /* [in] */Windows::Foundation::Rect dipsRect,
                    /* [retval, out] */Windows::Foundation::Rect * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IRectHelperStaticsPrivate=_uuidof(IRectHelperStaticsPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IResourceDictionary
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ResourceDictionary
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IResourceDictionary[] = L"Microsoft.UI.Xaml.IResourceDictionary";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("1B690975-A710-5783-A6E1-15836F6186C2"), exclusiveto, contract] */
            MIDL_INTERFACE("1B690975-A710-5783-A6E1-15836F6186C2")
            IResourceDictionary : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Source(
                    /* [retval, out] */Windows::Foundation::IUriRuntimeClass * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Source(
                    /* [in] */Windows::Foundation::IUriRuntimeClass * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_MergedDictionaries(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ThemeDictionaries(
                    /* [retval, out] */__FIMap_2_IInspectable_IInspectable * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IResourceDictionary=_uuidof(IResourceDictionary);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIResourceDictionary;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IResourceDictionaryFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ResourceDictionary
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IResourceDictionaryFactory[] = L"Microsoft.UI.Xaml.IResourceDictionaryFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("EA22A48F-AB71-56F6-A392-D82310C8AA7B"), exclusiveto, contract] */
            MIDL_INTERFACE("EA22A48F-AB71-56F6-A392-D82310C8AA7B")
            IResourceDictionaryFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IResourceDictionary * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IResourceDictionaryFactory=_uuidof(IResourceDictionaryFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRoutedEvent
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RoutedEvent
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRoutedEvent[] = L"Microsoft.UI.Xaml.IRoutedEvent";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("B2B432BC-EFCA-575E-9D2A-703F8B9C380F"), exclusiveto, contract] */
            MIDL_INTERFACE("B2B432BC-EFCA-575E-9D2A-703F8B9C380F")
            IRoutedEvent : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IRoutedEvent=_uuidof(IRoutedEvent);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRoutedEvent;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRoutedEventArgs[] = L"Microsoft.UI.Xaml.IRoutedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("0908C407-1C7D-5DE3-9C50-D971C62EC8EC"), exclusiveto, contract] */
            MIDL_INTERFACE("0908C407-1C7D-5DE3-9C50-D971C62EC8EC")
            IRoutedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OriginalSource(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IRoutedEventArgs=_uuidof(IRoutedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRoutedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRoutedEventArgsFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRoutedEventArgsFactory[] = L"Microsoft.UI.Xaml.IRoutedEventArgsFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("914B02C7-076B-5B89-98E7-6C373379E9AF"), exclusiveto, contract] */
            MIDL_INTERFACE("914B02C7-076B-5B89-98E7-6C373379E9AF")
            IRoutedEventArgsFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEventArgs * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IRoutedEventArgsFactory=_uuidof(IRoutedEventArgsFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IScalarTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ScalarTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IScalarTransition[] = L"Microsoft.UI.Xaml.IScalarTransition";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("C2DA2AC8-814C-5889-B2F4-4EBE4B001EE3"), exclusiveto, contract] */
            MIDL_INTERFACE("C2DA2AC8-814C-5889-B2F4-4EBE4B001EE3")
            IScalarTransition : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Duration(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Duration(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IScalarTransition=_uuidof(IScalarTransition);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIScalarTransition;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IScalarTransitionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ScalarTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IScalarTransitionFactory[] = L"Microsoft.UI.Xaml.IScalarTransitionFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A1650CF8-A15B-54FC-B595-C52491318F58"), exclusiveto, contract] */
            MIDL_INTERFACE("A1650CF8-A15B-54FC-B595-C52491318F58")
            IScalarTransitionFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IScalarTransition * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IScalarTransitionFactory=_uuidof(IScalarTransitionFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIScalarTransitionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetter
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Setter
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetter_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetter[] = L"Microsoft.UI.Xaml.ISetter";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("BBD6074D-686F-5AE1-B8DE-5F16AA30B80A"), exclusiveto, contract] */
            MIDL_INTERFACE("BBD6074D-686F-5AE1-B8DE-5F16AA30B80A")
            ISetter : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Property(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Property(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Value(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Value(
                    /* [in] */IInspectable * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Target(
                    /* [retval, out] */Microsoft::UI::Xaml::ITargetPropertyPath * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Target(
                    /* [in] */Microsoft::UI::Xaml::ITargetPropertyPath * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISetter=_uuidof(ISetter);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetter;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetter_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetterBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SetterBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetterBase[] = L"Microsoft.UI.Xaml.ISetterBase";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("5A7C1347-CDA3-55BE-BFEF-5C7582213980"), exclusiveto, contract] */
            MIDL_INTERFACE("5A7C1347-CDA3-55BE-BFEF-5C7582213980")
            ISetterBase : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsSealed(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISetterBase=_uuidof(ISetterBase);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetterBase;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetterBaseCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SetterBaseCollection
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetterBaseCollection[] = L"Microsoft.UI.Xaml.ISetterBaseCollection";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("63BF7C0F-B290-5C0C-9185-3338CD350D7F"), exclusiveto, contract] */
            MIDL_INTERFACE("63BF7C0F-B290-5C0C-9185-3338CD350D7F")
            ISetterBaseCollection : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsSealed(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISetterBaseCollection=_uuidof(ISetterBaseCollection);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetterBaseCollection;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetterBaseFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SetterBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetterBaseFactory[] = L"Microsoft.UI.Xaml.ISetterBaseFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("780A1D2F-C4BE-5707-8A8A-4550DC22583E"), exclusiveto, contract] */
            MIDL_INTERFACE("780A1D2F-C4BE-5707-8A8A-4550DC22583E")
            ISetterBaseFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ISetterBaseFactory=_uuidof(ISetterBaseFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetterBaseFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetterFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Setter
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetterFactory[] = L"Microsoft.UI.Xaml.ISetterFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("13910A06-A327-5407-AE91-B9D2CC3A7AB5"), exclusiveto, contract] */
            MIDL_INTERFACE("13910A06-A327-5407-AE91-B9D2CC3A7AB5")
            ISetterFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * targetProperty,
                    /* [in] */IInspectable * value,
                    /* [retval, out] */Microsoft::UI::Xaml::ISetter * * instance
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISetterFactory=_uuidof(ISetterFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetterFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISizeChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SizeChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISizeChangedEventArgs[] = L"Microsoft.UI.Xaml.ISizeChangedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("FE76324E-6DFB-58B1-9DCD-886CA8F9A2EA"), exclusiveto, contract] */
            MIDL_INTERFACE("FE76324E-6DFB-58B1-9DCD-886CA8F9A2EA")
            ISizeChangedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PreviousSize(
                    /* [retval, out] */Windows::Foundation::Size * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NewSize(
                    /* [retval, out] */Windows::Foundation::Size * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISizeChangedEventArgs=_uuidof(ISizeChangedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISizeChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISizeHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SizeHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISizeHelper[] = L"Microsoft.UI.Xaml.ISizeHelper";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("5DF9EEE1-A2A8-5E55-8668-AFEDC0B36DEB"), exclusiveto, contract] */
            MIDL_INTERFACE("5DF9EEE1-A2A8-5E55-8668-AFEDC0B36DEB")
            ISizeHelper : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ISizeHelper=_uuidof(ISizeHelper);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISizeHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISizeHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SizeHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISizeHelperStatics[] = L"Microsoft.UI.Xaml.ISizeHelperStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("CFF1B27F-84F1-5B14-9459-764AF5714FE5"), exclusiveto, contract] */
            MIDL_INTERFACE("CFF1B27F-84F1-5B14-9459-764AF5714FE5")
            ISizeHelperStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Empty(
                    /* [retval, out] */Windows::Foundation::Size * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromDimensions(
                    /* [in] */FLOAT width,
                    /* [in] */FLOAT height,
                    /* [retval, out] */Windows::Foundation::Size * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetIsEmpty(
                    /* [in] */Windows::Foundation::Size target,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Equals(
                    /* [in] */Windows::Foundation::Size target,
                    /* [in] */Windows::Foundation::Size value,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISizeHelperStatics=_uuidof(ISizeHelperStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISizeHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISourceInfoPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISourceInfoPrivate[] = L"Microsoft.UI.Xaml.ISourceInfoPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("3ACB731C-C37D-5F03-9596-AC62990F520C"), contract] */
            MIDL_INTERFACE("3ACB731C-C37D-5F03-9596-AC62990F520C")
            ISourceInfoPrivate : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Line(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Line(
                    /* [in] */INT32 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Column(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Column(
                    /* [in] */INT32 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ParseUri(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ParseUri(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XbfHash(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XbfHash(
                    /* [in] */HSTRING value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ISourceInfoPrivate=_uuidof(ISourceInfoPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISourceInfoPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTrigger[] = L"Microsoft.UI.Xaml.IStateTrigger";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("7B098126-1DAB-5B58-ACA7-F2B7DE2E1033"), exclusiveto, contract] */
            MIDL_INTERFACE("7B098126-1DAB-5B58-ACA7-F2B7DE2E1033")
            IStateTrigger : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsActive(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsActive(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IStateTrigger=_uuidof(IStateTrigger);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTrigger;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTriggerBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTriggerBase[] = L"Microsoft.UI.Xaml.IStateTriggerBase";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("F07B0F7B-5B94-58AE-8717-22AB093BC131"), exclusiveto, contract] */
            MIDL_INTERFACE("F07B0F7B-5B94-58AE-8717-22AB093BC131")
            IStateTriggerBase : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IStateTriggerBase=_uuidof(IStateTriggerBase);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTriggerBase;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTriggerBaseFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTriggerBaseFactory[] = L"Microsoft.UI.Xaml.IStateTriggerBaseFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E7724D65-FC7E-5C67-BB84-B4C7B020ADC3"), exclusiveto, contract] */
            MIDL_INTERFACE("E7724D65-FC7E-5C67-BB84-B4C7B020ADC3")
            IStateTriggerBaseFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IStateTriggerBase * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IStateTriggerBaseFactory=_uuidof(IStateTriggerBaseFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTriggerBaseProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTriggerBaseProtected[] = L"Microsoft.UI.Xaml.IStateTriggerBaseProtected";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("2F695047-335B-5C00-A0D4-2A8FA54544C6"), exclusiveto, contract] */
            MIDL_INTERFACE("2F695047-335B-5C00-A0D4-2A8FA54544C6")
            IStateTriggerBaseProtected : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE SetActive(
                    /* [in] */::boolean IsActive
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IStateTriggerBaseProtected=_uuidof(IStateTriggerBaseProtected);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTriggerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTriggerStatics[] = L"Microsoft.UI.Xaml.IStateTriggerStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("BD60C019-833B-5432-A41D-89D72410EB47"), exclusiveto, contract] */
            MIDL_INTERFACE("BD60C019-833B-5432-A41D-89D72410EB47")
            IStateTriggerStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsActiveProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IStateTriggerStatics=_uuidof(IStateTriggerStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTriggerStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStyle
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Style
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStyle_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStyle_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStyle[] = L"Microsoft.UI.Xaml.IStyle";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("65E1D164-572F-5B0E-A80F-9C02441FAC49"), exclusiveto, contract] */
            MIDL_INTERFACE("65E1D164-572F-5B0E-A80F-9C02441FAC49")
            IStyle : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsSealed(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Setters(
                    /* [retval, out] */Microsoft::UI::Xaml::ISetterBaseCollection * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TargetType(
                    /* [retval, out] */Windows::UI::Xaml::Interop::TypeName * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TargetType(
                    /* [in] */Windows::UI::Xaml::Interop::TypeName value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BasedOn(
                    /* [retval, out] */Microsoft::UI::Xaml::IStyle * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_BasedOn(
                    /* [in] */Microsoft::UI::Xaml::IStyle * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Seal(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IStyle=_uuidof(IStyle);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStyle;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStyle_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStyleFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Style
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStyleFactory[] = L"Microsoft.UI.Xaml.IStyleFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("C2D924A2-3862-517C-B083-9A9120D7302D"), exclusiveto, contract] */
            MIDL_INTERFACE("C2D924A2-3862-517C-B083-9A9120D7302D")
            IStyleFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */Windows::UI::Xaml::Interop::TypeName targetType,
                    /* [retval, out] */Microsoft::UI::Xaml::IStyle * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IStyleFactory=_uuidof(IStyleFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStyleFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITargetPropertyPath
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TargetPropertyPath
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITargetPropertyPath[] = L"Microsoft.UI.Xaml.ITargetPropertyPath";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("B1442F0E-F66B-531C-979B-193FD344E2A8"), exclusiveto, contract] */
            MIDL_INTERFACE("B1442F0E-F66B-531C-979B-193FD344E2A8")
            ITargetPropertyPath : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Path(
                    /* [retval, out] */Microsoft::UI::Xaml::IPropertyPath * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Path(
                    /* [in] */Microsoft::UI::Xaml::IPropertyPath * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Target(
                    /* [retval, out] */IInspectable * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Target(
                    /* [in] */IInspectable * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ITargetPropertyPath=_uuidof(ITargetPropertyPath);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITargetPropertyPath;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITargetPropertyPathFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TargetPropertyPath
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITargetPropertyPathFactory[] = L"Microsoft.UI.Xaml.ITargetPropertyPathFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("894CB11D-5C16-555B-B661-F41B29FD9B21"), exclusiveto, contract] */
            MIDL_INTERFACE("894CB11D-5C16-555B-B661-F41B29FD9B21")
            ITargetPropertyPathFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */Microsoft::UI::Xaml::IDependencyProperty * targetProperty,
                    /* [retval, out] */Microsoft::UI::Xaml::ITargetPropertyPath * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_ITargetPropertyPathFactory=_uuidof(ITargetPropertyPathFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IThicknessHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ThicknessHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IThicknessHelper[] = L"Microsoft.UI.Xaml.IThicknessHelper";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("5E496347-3C49-55EE-B442-530789B42B6F"), exclusiveto, contract] */
            MIDL_INTERFACE("5E496347-3C49-55EE-B442-530789B42B6F")
            IThicknessHelper : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IThicknessHelper=_uuidof(IThicknessHelper);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIThicknessHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IThicknessHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ThicknessHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IThicknessHelperStatics[] = L"Microsoft.UI.Xaml.IThicknessHelperStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("0E3B81CE-D278-577F-98EA-1B6010F86D7F"), exclusiveto, contract] */
            MIDL_INTERFACE("0E3B81CE-D278-577F-98EA-1B6010F86D7F")
            IThicknessHelperStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE FromLengths(
                    /* [in] */DOUBLE left,
                    /* [in] */DOUBLE top,
                    /* [in] */DOUBLE right,
                    /* [in] */DOUBLE bottom,
                    /* [retval, out] */Microsoft::UI::Xaml::Thickness * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE FromUniformLength(
                    /* [in] */DOUBLE uniformLength,
                    /* [retval, out] */Microsoft::UI::Xaml::Thickness * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IThicknessHelperStatics=_uuidof(IThicknessHelperStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIThicknessHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITriggerAction
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TriggerAction
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITriggerAction[] = L"Microsoft.UI.Xaml.ITriggerAction";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("1FA35464-A690-586C-AEDF-6C88CAC7D14A"), exclusiveto, contract] */
            MIDL_INTERFACE("1FA35464-A690-586C-AEDF-6C88CAC7D14A")
            ITriggerAction : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ITriggerAction=_uuidof(ITriggerAction);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITriggerAction;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITriggerActionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TriggerAction
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITriggerActionFactory[] = L"Microsoft.UI.Xaml.ITriggerActionFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("1E1FAF1A-F614-554A-822A-D98FE46575D1"), exclusiveto, contract] */
            MIDL_INTERFACE("1E1FAF1A-F614-554A-822A-D98FE46575D1")
            ITriggerActionFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ITriggerActionFactory=_uuidof(ITriggerActionFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITriggerActionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITriggerBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITriggerBase[] = L"Microsoft.UI.Xaml.ITriggerBase";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("D37DA89D-0D71-58CF-A901-99A7D3E5E434"), exclusiveto, contract] */
            MIDL_INTERFACE("D37DA89D-0D71-58CF-A901-99A7D3E5E434")
            ITriggerBase : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ITriggerBase=_uuidof(ITriggerBase);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITriggerBase;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITriggerBaseFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITriggerBaseFactory[] = L"Microsoft.UI.Xaml.ITriggerBaseFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("23088EAA-17EC-51B2-B181-5BEDFA8B8FA4"), exclusiveto, contract] */
            MIDL_INTERFACE("23088EAA-17EC-51B2-B181-5BEDFA8B8FA4")
            ITriggerBaseFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_ITriggerBaseFactory=_uuidof(ITriggerBaseFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITriggerBaseFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElement
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElement[] = L"Microsoft.UI.Xaml.IUIElement";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("BA741F05-21DC-5B24-9D8B-B430CA730C5D"), exclusiveto, contract] */
            MIDL_INTERFACE("BA741F05-21DC-5B24-9D8B-B430CA730C5D")
            IUIElement : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DesiredSize(
                    /* [retval, out] */Windows::Foundation::Size * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowDrop(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AllowDrop(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Opacity(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Opacity(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Clip(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::IRectangleGeometry * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Clip(
                    /* [in] */Microsoft::UI::Xaml::Media::IRectangleGeometry * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RenderTransform(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::ITransform * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RenderTransform(
                    /* [in] */Microsoft::UI::Xaml::Media::ITransform * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Projection(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::IProjection * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Projection(
                    /* [in] */Microsoft::UI::Xaml::Media::IProjection * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Transform3D(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::Media3D::ITransform3D * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Transform3D(
                    /* [in] */Microsoft::UI::Xaml::Media::Media3D::ITransform3D * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RenderTransformOrigin(
                    /* [retval, out] */Windows::Foundation::Point * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RenderTransformOrigin(
                    /* [in] */Windows::Foundation::Point value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsHitTestVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsHitTestVisible(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Visibility(
                    /* [retval, out] */Microsoft::UI::Xaml::Visibility * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Visibility(
                    /* [in] */Microsoft::UI::Xaml::Visibility value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RenderSize(
                    /* [retval, out] */Windows::Foundation::Size * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UseLayoutRounding(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_UseLayoutRounding(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Transitions(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Transitions(
                    /* [in] */__FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CacheMode(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::ICacheMode * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CacheMode(
                    /* [in] */Microsoft::UI::Xaml::Media::ICacheMode * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsTapEnabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsTapEnabled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsDoubleTapEnabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsDoubleTapEnabled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanDrag(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CanDrag(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsRightTapEnabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsRightTapEnabled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsHoldingEnabled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsHoldingEnabled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ManipulationMode(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::ManipulationModes * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ManipulationMode(
                    /* [in] */Microsoft::UI::Xaml::Input::ManipulationModes value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerCaptures(
                    /* [retval, out] */__FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ContextFlyout(
                    /* [retval, out] */Microsoft::UI::Xaml::Controls::Primitives::IFlyoutBase * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ContextFlyout(
                    /* [in] */Microsoft::UI::Xaml::Controls::Primitives::IFlyoutBase * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CompositeMode(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::ElementCompositeMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CompositeMode(
                    /* [in] */Microsoft::UI::Xaml::Media::ElementCompositeMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Lights(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanBeScrollAnchor(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CanBeScrollAnchor(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ExitDisplayModeOnAccessKeyInvoked(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ExitDisplayModeOnAccessKeyInvoked(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsAccessKeyScope(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsAccessKeyScope(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AccessKeyScopeOwner(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AccessKeyScopeOwner(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AccessKey(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_AccessKey(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyTipPlacementMode(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::KeyTipPlacementMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_KeyTipPlacementMode(
                    /* [in] */Microsoft::UI::Xaml::Input::KeyTipPlacementMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyTipHorizontalOffset(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_KeyTipHorizontalOffset(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyTipVerticalOffset(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_KeyTipVerticalOffset(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyTipTarget(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_KeyTipTarget(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusKeyboardNavigation(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusKeyboardNavigation(
                    /* [in] */Microsoft::UI::Xaml::Input::XYFocusKeyboardNavigationMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusUpNavigationStrategy(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusUpNavigationStrategy(
                    /* [in] */Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusDownNavigationStrategy(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusDownNavigationStrategy(
                    /* [in] */Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusLeftNavigationStrategy(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusLeftNavigationStrategy(
                    /* [in] */Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusRightNavigationStrategy(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusRightNavigationStrategy(
                    /* [in] */Microsoft::UI::Xaml::Input::XYFocusNavigationStrategy value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyboardAccelerators(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyboardAcceleratorPlacementTarget(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_KeyboardAcceleratorPlacementTarget(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyboardAcceleratorPlacementMode(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_KeyboardAcceleratorPlacementMode(
                    /* [in] */Microsoft::UI::Xaml::Input::KeyboardAcceleratorPlacementMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HighContrastAdjustment(
                    /* [retval, out] */Microsoft::UI::Xaml::ElementHighContrastAdjustment * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_HighContrastAdjustment(
                    /* [in] */Microsoft::UI::Xaml::ElementHighContrastAdjustment value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TabFocusNavigation(
                    /* [retval, out] */Microsoft::UI::Xaml::Input::KeyboardNavigationMode * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TabFocusNavigation(
                    /* [in] */Microsoft::UI::Xaml::Input::KeyboardNavigationMode value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OpacityTransition(
                    /* [retval, out] */Microsoft::UI::Xaml::IScalarTransition * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OpacityTransition(
                    /* [in] */Microsoft::UI::Xaml::IScalarTransition * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Translation(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Translation(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TranslationTransition(
                    /* [retval, out] */Microsoft::UI::Xaml::IVector3Transition * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TranslationTransition(
                    /* [in] */Microsoft::UI::Xaml::IVector3Transition * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Rotation(
                    /* [retval, out] */FLOAT * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Rotation(
                    /* [in] */FLOAT value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationTransition(
                    /* [retval, out] */Microsoft::UI::Xaml::IScalarTransition * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationTransition(
                    /* [in] */Microsoft::UI::Xaml::IScalarTransition * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Scale(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Scale(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ScaleTransition(
                    /* [retval, out] */Microsoft::UI::Xaml::IVector3Transition * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_ScaleTransition(
                    /* [in] */Microsoft::UI::Xaml::IVector3Transition * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransformMatrix(
                    /* [retval, out] */Windows::Foundation::Numerics::Matrix4x4 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransformMatrix(
                    /* [in] */Windows::Foundation::Numerics::Matrix4x4 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CenterPoint(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_CenterPoint(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RotationAxis(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RotationAxis(
                    /* [in] */Windows::Foundation::Numerics::Vector3 value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualOffset(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector3 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ActualSize(
                    /* [retval, out] */Windows::Foundation::Numerics::Vector2 * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XamlRoot(
                    /* [retval, out] */Microsoft::UI::Xaml::IXamlRoot * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XamlRoot(
                    /* [in] */Microsoft::UI::Xaml::IXamlRoot * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Shadow(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::IShadow * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Shadow(
                    /* [in] */Microsoft::UI::Xaml::Media::IShadow * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RasterizationScale(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_RasterizationScale(
                    /* [in] */DOUBLE value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusState(
                    /* [retval, out] */Microsoft::UI::Xaml::FocusState * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UseSystemFocusVisuals(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_UseSystemFocusVisuals(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusLeft(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusLeft(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusRight(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusRight(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusUp(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusUp(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusDown(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyObject * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_XYFocusDown(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsTabStop(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_IsTabStop(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TabIndex(
                    /* [retval, out] */INT32 * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TabIndex(
                    /* [in] */INT32 value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_KeyUp(
                    /* [in] */Microsoft::UI::Xaml::Input::IKeyEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_KeyUp(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_KeyDown(
                    /* [in] */Microsoft::UI::Xaml::Input::IKeyEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_KeyDown(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_GotFocus(
                    /* [in] */Microsoft::UI::Xaml::IRoutedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_GotFocus(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_LostFocus(
                    /* [in] */Microsoft::UI::Xaml::IRoutedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_LostFocus(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_DragStarting(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_DragStarting(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_DropCompleted(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_DropCompleted(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_CharacterReceived(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_CharacterReceived(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_DragEnter(
                    /* [in] */Microsoft::UI::Xaml::IDragEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_DragEnter(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_DragLeave(
                    /* [in] */Microsoft::UI::Xaml::IDragEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_DragLeave(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_DragOver(
                    /* [in] */Microsoft::UI::Xaml::IDragEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_DragOver(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Drop(
                    /* [in] */Microsoft::UI::Xaml::IDragEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Drop(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PointerPressed(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointerEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PointerPressed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PointerMoved(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointerEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PointerMoved(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PointerReleased(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointerEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PointerReleased(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PointerEntered(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointerEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PointerEntered(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PointerExited(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointerEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PointerExited(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PointerCaptureLost(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointerEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PointerCaptureLost(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PointerCanceled(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointerEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PointerCanceled(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PointerWheelChanged(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointerEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PointerWheelChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Tapped(
                    /* [in] */Microsoft::UI::Xaml::Input::ITappedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Tapped(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_DoubleTapped(
                    /* [in] */Microsoft::UI::Xaml::Input::IDoubleTappedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_DoubleTapped(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Holding(
                    /* [in] */Microsoft::UI::Xaml::Input::IHoldingEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Holding(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ContextRequested(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ContextRequested(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ContextCanceled(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ContextCanceled(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_RightTapped(
                    /* [in] */Microsoft::UI::Xaml::Input::IRightTappedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_RightTapped(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ManipulationStarting(
                    /* [in] */Microsoft::UI::Xaml::Input::IManipulationStartingEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ManipulationStarting(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ManipulationInertiaStarting(
                    /* [in] */Microsoft::UI::Xaml::Input::IManipulationInertiaStartingEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ManipulationInertiaStarting(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ManipulationStarted(
                    /* [in] */Microsoft::UI::Xaml::Input::IManipulationStartedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ManipulationStarted(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ManipulationDelta(
                    /* [in] */Microsoft::UI::Xaml::Input::IManipulationDeltaEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ManipulationDelta(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ManipulationCompleted(
                    /* [in] */Microsoft::UI::Xaml::Input::IManipulationCompletedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ManipulationCompleted(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_AccessKeyDisplayRequested(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_AccessKeyDisplayRequested(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_AccessKeyDisplayDismissed(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_AccessKeyDisplayDismissed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_AccessKeyInvoked(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_AccessKeyInvoked(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_ProcessKeyboardAccelerators(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_ProcessKeyboardAccelerators(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_GettingFocus(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_GettingFocus(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_LosingFocus(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_LosingFocus(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_NoFocusCandidateFound(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_NoFocusCandidateFound(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PreviewKeyDown(
                    /* [in] */Microsoft::UI::Xaml::Input::IKeyEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PreviewKeyDown(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_PreviewKeyUp(
                    /* [in] */Microsoft::UI::Xaml::Input::IKeyEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_PreviewKeyUp(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_BringIntoViewRequested(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_BringIntoViewRequested(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Measure(
                    /* [in] */Windows::Foundation::Size availableSize
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Arrange(
                    /* [in] */Windows::Foundation::Rect finalRect
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE CapturePointer(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointer * value,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ReleasePointerCapture(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointer * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ReleasePointerCaptures(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE AddHandler(
                    /* [in] */Microsoft::UI::Xaml::IRoutedEvent * routedEvent,
                    /* [in] */IInspectable * handler,
                    /* [in] */::boolean handledEventsToo
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RemoveHandler(
                    /* [in] */Microsoft::UI::Xaml::IRoutedEvent * routedEvent,
                    /* [in] */IInspectable * handler
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TransformToVisual(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * visual,
                    /* [retval, out] */Microsoft::UI::Xaml::Media::IGeneralTransform * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InvalidateMeasure(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE InvalidateArrange(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE UpdateLayout(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE CancelDirectManipulations(
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StartDragAsync(
                    /* [in] */Windows::UI::Input::IPointerPoint * pointerPoint,
                    /* [retval, out] */__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * * operation
                    ) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE StartBringIntoView(void) = 0;
                /* [overload] */virtual HRESULT STDMETHODCALLTYPE StartBringIntoViewWithOptions(
                    /* [in] */Microsoft::UI::Xaml::IBringIntoViewOptions * options
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryInvokeKeyboardAccelerator(
                    /* [in] */Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StartAnimation(
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimationBase * animation
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE StopAnimation(
                    /* [in] */Microsoft::UI::Composition::ICompositionAnimationBase * animation
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IUIElement=_uuidof(IUIElement);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElement;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementFactory[] = L"Microsoft.UI.Xaml.IUIElementFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("14D1D309-ADD0-5CCB-B946-77488CD70F87"), exclusiveto, contract] */
            MIDL_INTERFACE("14D1D309-ADD0-5CCB-B946-77488CD70F87")
            IUIElementFactory : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IUIElementFactory=_uuidof(IUIElementFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementHostingPreviewStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementHostingPreviewStaticsPrivate[] = L"Microsoft.UI.Xaml.IUIElementHostingPreviewStaticsPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("FA6A542F-03AB-5F1B-8AC0-E52AE01B9F79"), contract] */
            MIDL_INTERFACE("FA6A542F-03AB-5F1B-8AC0-E52AE01B9F79")
            IUIElementHostingPreviewStaticsPrivate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE SetComponentSite(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * element,
                    /* [in] */IInspectable * componentSite
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetAutomationProperty(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * element,
                    /* [in] */Microsoft::UI::Xaml::Automation::IAutomationProperty * property,
                    /* [in] */Microsoft::UI::Xaml::Automation::IComponentPropertyValue * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IUIElementHostingPreviewStaticsPrivate=_uuidof(IUIElementHostingPreviewStaticsPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementOverrides[] = L"Microsoft.UI.Xaml.IUIElementOverrides";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("9034F41E-AB7B-59E7-8168-50DE6B689DDE"), exclusiveto, contract] */
            MIDL_INTERFACE("9034F41E-AB7B-59E7-8168-50DE6B689DDE")
            IUIElementOverrides : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE OnCreateAutomationPeer(
                    /* [retval, out] */Microsoft::UI::Xaml::Automation::Peers::IAutomationPeer * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnDisconnectVisualChildren(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE FindSubElementsForTouchTargeting(
                    /* [in] */Windows::Foundation::Point point,
                    /* [in] */Windows::Foundation::Rect boundingRect,
                    /* [retval, out] */__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetChildrenInTabFocusOrder(
                    /* [retval, out] */__FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnKeyboardAcceleratorInvoked(
                    /* [in] */Microsoft::UI::Xaml::Input::IKeyboardAcceleratorInvokedEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnProcessKeyboardAccelerators(
                    /* [in] */Microsoft::UI::Xaml::Input::IProcessKeyboardAcceleratorEventArgs * args
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE OnBringIntoViewRequested(
                    /* [in] */Microsoft::UI::Xaml::IBringIntoViewRequestedEventArgs * e
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE PopulatePropertyInfoOverride(
                    /* [in] */HSTRING propertyName,
                    /* [in] */Microsoft::UI::Composition::IAnimationPropertyInfo * animationPropertyInfo
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IUIElementOverrides=_uuidof(IUIElementOverrides);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementOverrides;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementStatics[] = L"Microsoft.UI.Xaml.IUIElementStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("D2921D87-3584-5E22-8A3A-C2C78DAB4F6E"), exclusiveto, contract] */
            MIDL_INTERFACE("D2921D87-3584-5E22-8A3A-C2C78DAB4F6E")
            IUIElementStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyDownEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyUpEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerEnteredEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerPressedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerMovedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerReleasedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerExitedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerCaptureLostEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerCanceledEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerWheelChangedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TappedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DoubleTappedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HoldingEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RightTappedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ManipulationStartingEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ManipulationInertiaStartingEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ManipulationStartedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ManipulationDeltaEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ManipulationCompletedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DragEnterEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DragLeaveEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DragOverEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DropEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_GettingFocusEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LosingFocusEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NoFocusCandidateFoundEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PreviewKeyDownEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CharacterReceivedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PreviewKeyUpEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_BringIntoViewRequestedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ContextRequestedEvent(
                    /* [retval, out] */Microsoft::UI::Xaml::IRoutedEvent * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AllowDropProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OpacityProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ClipProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RenderTransformProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ProjectionProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Transform3DProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RenderTransformOriginProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsHitTestVisibleProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_VisibilityProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UseLayoutRoundingProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransitionsProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CacheModeProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsTapEnabledProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsDoubleTapEnabledProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanDragProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsRightTapEnabledProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsHoldingEnabledProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ManipulationModeProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_PointerCapturesProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ContextFlyoutProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CompositeModeProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_LightsProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CanBeScrollAnchorProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ExitDisplayModeOnAccessKeyInvokedProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsAccessKeyScopeProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AccessKeyScopeOwnerProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_AccessKeyProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyTipPlacementModeProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyTipHorizontalOffsetProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyTipVerticalOffsetProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyTipTargetProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusKeyboardNavigationProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusUpNavigationStrategyProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusDownNavigationStrategyProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusLeftNavigationStrategyProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusRightNavigationStrategyProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyboardAcceleratorPlacementTargetProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_KeyboardAcceleratorPlacementModeProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_HighContrastAdjustmentProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TabFocusNavigationProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_ShadowProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_FocusStateProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_UseSystemFocusVisualsProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusLeftProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusRightProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusUpProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_XYFocusDownProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsTabStopProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TabIndexProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE TryStartDirectManipulation(
                    /* [in] */Microsoft::UI::Xaml::Input::IPointer * value,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RegisterAsScrollPort(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * element
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IUIElementStatics=_uuidof(IUIElementStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementStaticsPrivate[] = L"Microsoft.UI.Xaml.IUIElementStaticsPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("B35B8888-C508-52DC-AF8F-8A3C38ADBB86"), contract] */
            MIDL_INTERFACE("B35B8888-C508-52DC-AF8F-8A3C38ADBB86")
            IUIElementStaticsPrivate : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE InternalGetIsEnabled(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * element,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE InternalPutIsEnabled(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * element,
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IUIElementStaticsPrivate=_uuidof(IUIElementStaticsPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementWeakCollectionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElementWeakCollection
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementWeakCollectionFactory[] = L"Microsoft.UI.Xaml.IUIElementWeakCollectionFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("B4D69F09-D494-5BC8-AE68-B6307D845049"), exclusiveto, contract] */
            MIDL_INTERFACE("B4D69F09-D494-5BC8-AE68-B6307D845049")
            IUIElementWeakCollectionFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CUIElement * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IUIElementWeakCollectionFactory=_uuidof(IUIElementWeakCollectionFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUnhandledExceptionEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UnhandledExceptionEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUnhandledExceptionEventArgs[] = L"Microsoft.UI.Xaml.IUnhandledExceptionEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("59EAEBA9-8F9C-5BE7-9B3B-820960FAA220"), exclusiveto, contract] */
            MIDL_INTERFACE("59EAEBA9-8F9C-5BE7-9B3B-820960FAA220")
            IUnhandledExceptionEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Exception(
                    /* [retval, out] */HRESULT * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Message(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IUnhandledExceptionEventArgs=_uuidof(IUnhandledExceptionEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVector3Transition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Vector3Transition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVector3Transition[] = L"Microsoft.UI.Xaml.IVector3Transition";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("0C408BB9-F9A2-55D7-8AED-143D36D603F2"), exclusiveto, contract] */
            MIDL_INTERFACE("0C408BB9-F9A2-55D7-8AED-143D36D603F2")
            IVector3Transition : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Duration(
                    /* [retval, out] */Windows::Foundation::TimeSpan * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Duration(
                    /* [in] */Windows::Foundation::TimeSpan value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Components(
                    /* [retval, out] */Microsoft::UI::Xaml::Vector3TransitionComponents * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Components(
                    /* [in] */Microsoft::UI::Xaml::Vector3TransitionComponents value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVector3Transition=_uuidof(IVector3Transition);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVector3Transition;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IVector3TransitionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Vector3Transition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVector3TransitionFactory[] = L"Microsoft.UI.Xaml.IVector3TransitionFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A3A084FC-B965-534B-900F-78E288129232"), exclusiveto, contract] */
            MIDL_INTERFACE("A3A084FC-B965-534B-900F-78E288129232")
            IVector3TransitionFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IVector3Transition * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVector3TransitionFactory=_uuidof(IVector3TransitionFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVector3TransitionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualState
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualState[] = L"Microsoft.UI.Xaml.IVisualState";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("4BB32AE8-0E28-5521-A7F5-66B661372994"), exclusiveto, contract] */
            MIDL_INTERFACE("4BB32AE8-0E28-5521-A7F5-66B661372994")
            IVisualState : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Name(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Storyboard(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::Animation::IStoryboard * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Storyboard(
                    /* [in] */Microsoft::UI::Xaml::Media::Animation::IStoryboard * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Setters(
                    /* [retval, out] */Microsoft::UI::Xaml::ISetterBaseCollection * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_StateTriggers(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualState=_uuidof(IVisualState);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualState;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateChangedEventArgs[] = L"Microsoft.UI.Xaml.IVisualStateChangedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("11DE9510-A195-577B-88C8-06391618868C"), exclusiveto, contract] */
            MIDL_INTERFACE("11DE9510-A195-577B-88C8-06391618868C")
            IVisualStateChangedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_OldState(
                    /* [retval, out] */Microsoft::UI::Xaml::IVisualState * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_OldState(
                    /* [in] */Microsoft::UI::Xaml::IVisualState * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_NewState(
                    /* [retval, out] */Microsoft::UI::Xaml::IVisualState * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_NewState(
                    /* [in] */Microsoft::UI::Xaml::IVisualState * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Control(
                    /* [retval, out] */Microsoft::UI::Xaml::Controls::IControl * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Control(
                    /* [in] */Microsoft::UI::Xaml::Controls::IControl * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualStateChangedEventArgs=_uuidof(IVisualStateChangedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateGroup
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateGroup[] = L"Microsoft.UI.Xaml.IVisualStateGroup";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("8DFD691B-710C-5D6D-B71A-7A7F5ED54AC7"), exclusiveto, contract] */
            MIDL_INTERFACE("8DFD691B-710C-5D6D-B71A-7A7F5ED54AC7")
            IVisualStateGroup : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Name(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Transitions(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_States(
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CVisualState * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CurrentState(
                    /* [retval, out] */Microsoft::UI::Xaml::IVisualState * * value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_CurrentStateChanged(
                    /* [in] */Microsoft::UI::Xaml::IVisualStateChangedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_CurrentStateChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_CurrentStateChanging(
                    /* [in] */Microsoft::UI::Xaml::IVisualStateChangedEventHandler  * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_CurrentStateChanging(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualStateGroup=_uuidof(IVisualStateGroup);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateGroup;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManager
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManager[] = L"Microsoft.UI.Xaml.IVisualStateManager";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("342C8D32-AD61-5925-93D1-0C704DF2A7D1"), exclusiveto, contract] */
            MIDL_INTERFACE("342C8D32-AD61-5925-93D1-0C704DF2A7D1")
            IVisualStateManager : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualStateManager=_uuidof(IVisualStateManager);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManager;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManagerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManagerFactory[] = L"Microsoft.UI.Xaml.IVisualStateManagerFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("713DAF82-92B3-58F2-8FC1-B0D9A2CAD03C"), exclusiveto, contract] */
            MIDL_INTERFACE("713DAF82-92B3-58F2-8FC1-B0D9A2CAD03C")
            IVisualStateManagerFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IVisualStateManager * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualStateManagerFactory=_uuidof(IVisualStateManagerFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManagerOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManagerOverrides[] = L"Microsoft.UI.Xaml.IVisualStateManagerOverrides";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("E3F8E9C9-9432-514C-923E-142CD8C82730"), exclusiveto, contract] */
            MIDL_INTERFACE("E3F8E9C9-9432-514C-923E-142CD8C82730")
            IVisualStateManagerOverrides : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GoToStateCore(
                    /* [in] */Microsoft::UI::Xaml::Controls::IControl * control,
                    /* [in] */Microsoft::UI::Xaml::IFrameworkElement * templateRoot,
                    /* [in] */HSTRING stateName,
                    /* [in] */Microsoft::UI::Xaml::IVisualStateGroup * group,
                    /* [in] */Microsoft::UI::Xaml::IVisualState * state,
                    /* [in] */::boolean useTransitions,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualStateManagerOverrides=_uuidof(IVisualStateManagerOverrides);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManagerProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManagerProtected[] = L"Microsoft.UI.Xaml.IVisualStateManagerProtected";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("0F008013-787F-5599-A5AD-0A10B988ED24"), exclusiveto, contract] */
            MIDL_INTERFACE("0F008013-787F-5599-A5AD-0A10B988ED24")
            IVisualStateManagerProtected : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE RaiseCurrentStateChanging(
                    /* [in] */Microsoft::UI::Xaml::IVisualStateGroup * stateGroup,
                    /* [in] */Microsoft::UI::Xaml::IVisualState * oldState,
                    /* [in] */Microsoft::UI::Xaml::IVisualState * newState,
                    /* [in] */Microsoft::UI::Xaml::Controls::IControl * control
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE RaiseCurrentStateChanged(
                    /* [in] */Microsoft::UI::Xaml::IVisualStateGroup * stateGroup,
                    /* [in] */Microsoft::UI::Xaml::IVisualState * oldState,
                    /* [in] */Microsoft::UI::Xaml::IVisualState * newState,
                    /* [in] */Microsoft::UI::Xaml::Controls::IControl * control
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualStateManagerProtected=_uuidof(IVisualStateManagerProtected);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManagerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManagerStatics[] = L"Microsoft.UI.Xaml.IVisualStateManagerStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("A4D5147D-88C3-57ED-AD83-245DF5F6B50D"), exclusiveto, contract] */
            MIDL_INTERFACE("A4D5147D-88C3-57ED-AD83-245DF5F6B50D")
            IVisualStateManagerStatics : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE GetVisualStateGroups(
                    /* [in] */Microsoft::UI::Xaml::IFrameworkElement * obj,
                    /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * * result
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CustomVisualStateManagerProperty(
                    /* [retval, out] */Microsoft::UI::Xaml::IDependencyProperty * * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetCustomVisualStateManager(
                    /* [in] */Microsoft::UI::Xaml::IFrameworkElement * obj,
                    /* [retval, out] */Microsoft::UI::Xaml::IVisualStateManager * * result
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetCustomVisualStateManager(
                    /* [in] */Microsoft::UI::Xaml::IFrameworkElement * obj,
                    /* [in] */Microsoft::UI::Xaml::IVisualStateManager * value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GoToState(
                    /* [in] */Microsoft::UI::Xaml::Controls::IControl * control,
                    /* [in] */HSTRING stateName,
                    /* [in] */::boolean useTransitions,
                    /* [retval, out] */::boolean * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualStateManagerStatics=_uuidof(IVisualStateManagerStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualTransition[] = L"Microsoft.UI.Xaml.IVisualTransition";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("DD21AF54-2CE1-59DE-9FD1-2B45F6BF6581"), exclusiveto, contract] */
            MIDL_INTERFACE("DD21AF54-2CE1-59DE-9FD1-2B45F6BF6581")
            IVisualTransition : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_GeneratedDuration(
                    /* [retval, out] */Microsoft::UI::Xaml::Duration * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_GeneratedDuration(
                    /* [in] */Microsoft::UI::Xaml::Duration value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_GeneratedEasingFunction(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::Animation::IEasingFunctionBase * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_GeneratedEasingFunction(
                    /* [in] */Microsoft::UI::Xaml::Media::Animation::IEasingFunctionBase * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_To(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_To(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_From(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_From(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Storyboard(
                    /* [retval, out] */Microsoft::UI::Xaml::Media::Animation::IStoryboard * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Storyboard(
                    /* [in] */Microsoft::UI::Xaml::Media::Animation::IStoryboard * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualTransition=_uuidof(IVisualTransition);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualTransition;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualTransitionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualTransitionFactory[] = L"Microsoft.UI.Xaml.IVisualTransitionFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("F3E74C0D-0B5B-5920-A309-08CB6BF2A739"), exclusiveto, contract] */
            MIDL_INTERFACE("F3E74C0D-0B5B-5920-A309-08CB6BF2A739")
            IVisualTransitionFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IVisualTransition * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IVisualTransitionFactory=_uuidof(IVisualTransitionFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualTransitionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Window
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindow[] = L"Microsoft.UI.Xaml.IWindow";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("8DE74F65-EA02-5380-BA58-28B3FC36BAE9"), exclusiveto, contract] */
            MIDL_INTERFACE("8DE74F65-EA02-5380-BA58-28B3FC36BAE9")
            IWindow : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Bounds(
                    /* [retval, out] */Windows::Foundation::Rect * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Visible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Content(
                    /* [retval, out] */Microsoft::UI::Xaml::IUIElement * * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Content(
                    /* [in] */Microsoft::UI::Xaml::IUIElement * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_CoreWindow(
                    /* [retval, out] */Windows::UI::Core::ICoreWindow * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Compositor(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositor * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Dispatcher(
                    /* [retval, out] */Windows::UI::Core::ICoreDispatcher * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_DispatcherQueue(
                    /* [retval, out] */Microsoft::System::IDispatcherQueue * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Title(
                    /* [retval, out] */HSTRING * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Title(
                    /* [in] */HSTRING value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Activated(
                    /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Activated(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Closed(
                    /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Closed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_SizeChanged(
                    /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_SizeChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_VisibilityChanged(
                    /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_VisibilityChanged(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Activate(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Close(void) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindow=_uuidof(IWindow);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindow;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindow_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowActivatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowActivatedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowActivatedEventArgs[] = L"Microsoft.UI.Xaml.IWindowActivatedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("C723A5EA-82C4-5DD6-861B-70EF573B88D6"), exclusiveto, contract] */
            MIDL_INTERFACE("C723A5EA-82C4-5DD6-861B-70EF573B88D6")
            IWindowActivatedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_WindowActivationState(
                    /* [retval, out] */Microsoft::UI::Xaml::WindowActivationState * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindowActivatedEventArgs=_uuidof(IWindowActivatedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowCreatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowCreatedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowCreatedEventArgs[] = L"Microsoft.UI.Xaml.IWindowCreatedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("C407E71B-FE7F-50E8-B41C-BE6DF3113DD8"), exclusiveto, contract] */
            MIDL_INTERFACE("C407E71B-FE7F-50E8-B41C-BE6DF3113DD8")
            IWindowCreatedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Window(
                    /* [retval, out] */Microsoft::UI::Xaml::IWindow * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindowCreatedEventArgs=_uuidof(IWindowCreatedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowEventArgs[] = L"Microsoft.UI.Xaml.IWindowEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("1140827C-FE0A-5268-BC2B-F4492C2CCB49"), exclusiveto, contract] */
            MIDL_INTERFACE("1140827C-FE0A-5268-BC2B-F4492C2CCB49")
            IWindowEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindowEventArgs=_uuidof(IWindowEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Window
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowFactory[] = L"Microsoft.UI.Xaml.IWindowFactory";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("F0441536-AFEF-5222-918F-324A9B2DEC75"), exclusiveto, contract] */
            MIDL_INTERFACE("F0441536-AFEF-5222-918F-324A9B2DEC75")
            IWindowFactory : public IInspectable
            {
            public:
                virtual HRESULT STDMETHODCALLTYPE CreateInstance(
                    /* [in] */IInspectable * baseInterface,
                    /* [out] */IInspectable * * innerInterface,
                    /* [retval, out] */Microsoft::UI::Xaml::IWindow * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindowFactory=_uuidof(IWindowFactory);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowPrivate[] = L"Microsoft.UI.Xaml.IWindowPrivate";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("F5DEF8F6-95C2-55CB-B1A4-551B9DA34220"), contract] */
            MIDL_INTERFACE("F5DEF8F6-95C2-55CB-B1A4-551B9DA34220")
            IWindowPrivate : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_TransparentBackground(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_TransparentBackground(
                    /* [in] */::boolean value
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE Show(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE Hide(void) = 0;
                virtual HRESULT STDMETHODCALLTYPE MoveWindow(
                    /* [in] */INT32 x,
                    /* [in] */INT32 y,
                    /* [in] */INT32 width,
                    /* [in] */INT32 height
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetAtlasSizeHint(
                    /* [in] */UINT32 width,
                    /* [in] */UINT32 height
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE ReleaseGraphicsDeviceOnSuspend(
                    /* [in] */::boolean enable
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE SetAtlasRequestCallback(
                    /* [in] */Microsoft::UI::Xaml::IAtlasRequestCallback * callback
                    ) = 0;
                virtual HRESULT STDMETHODCALLTYPE GetWindowContentBoundsForElement(
                    /* [in] */Microsoft::UI::Xaml::IDependencyObject * element,
                    /* [retval, out] */Windows::Foundation::Rect * result
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindowPrivate=_uuidof(IWindowPrivate);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowSizeChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowSizeChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowSizeChangedEventArgs[] = L"Microsoft.UI.Xaml.IWindowSizeChangedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("542F6F2C-4B64-5C72-A7A5-3A7E0664B8FF"), exclusiveto, contract] */
            MIDL_INTERFACE("542F6F2C-4B64-5C72-A7A5-3A7E0664B8FF")
            IWindowSizeChangedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Size(
                    /* [retval, out] */Windows::Foundation::Size * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindowSizeChangedEventArgs=_uuidof(IWindowSizeChangedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Window
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowStatics[] = L"Microsoft.UI.Xaml.IWindowStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("8CC985E3-A41A-5DF4-B531-D3A1788D86C5"), exclusiveto, contract] */
            MIDL_INTERFACE("8CC985E3-A41A-5DF4-B531-D3A1788D86C5")
            IWindowStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Current(
                    /* [retval, out] */Microsoft::UI::Xaml::IWindow * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindowStatics=_uuidof(IWindowStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowVisibilityChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowVisibilityChangedEventArgs[] = L"Microsoft.UI.Xaml.IWindowVisibilityChangedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("7BB24A6D-070C-5CB6-8E9C-547905BE8265"), exclusiveto, contract] */
            MIDL_INTERFACE("7BB24A6D-070C-5CB6-8E9C-547905BE8265")
            IWindowVisibilityChangedEventArgs : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Handled(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propput] */virtual HRESULT STDMETHODCALLTYPE put_Handled(
                    /* [in] */::boolean value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Visible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IWindowVisibilityChangedEventArgs=_uuidof(IWindowVisibilityChangedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IXamlRoot
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.XamlRoot
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IXamlRoot[] = L"Microsoft.UI.Xaml.IXamlRoot";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("41125F0A-70B7-5696-AF98-5730882E360B"), exclusiveto, contract] */
            MIDL_INTERFACE("41125F0A-70B7-5696-AF98-5730882E360B")
            IXamlRoot : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Content(
                    /* [retval, out] */Microsoft::UI::Xaml::IUIElement * * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Size(
                    /* [retval, out] */Windows::Foundation::Size * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_RasterizationScale(
                    /* [retval, out] */DOUBLE * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_IsHostVisible(
                    /* [retval, out] */::boolean * value
                    ) = 0;
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get_Compositor(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositor * * value
                    ) = 0;
                /* [eventadd] */virtual HRESULT STDMETHODCALLTYPE add_Changed(
                    /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs * handler,
                    /* [retval, out] */EventRegistrationToken * token
                    ) = 0;
                /* [eventremove] */virtual HRESULT STDMETHODCALLTYPE remove_Changed(
                    /* [in] */EventRegistrationToken token
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IXamlRoot=_uuidof(IXamlRoot);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIXamlRoot;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IXamlRootChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.XamlRootChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IXamlRootChangedEventArgs[] = L"Microsoft.UI.Xaml.IXamlRootChangedEventArgs";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("61D2C719-F8A1-515A-902C-CFA498BA7A7F"), exclusiveto, contract] */
            MIDL_INTERFACE("61D2C719-F8A1-515A-902C-CFA498BA7A7F")
            IXamlRootChangedEventArgs : public IInspectable
            {
            public:
                
            };

            extern MIDL_CONST_ID IID & IID_IXamlRootChangedEventArgs=_uuidof(IXamlRootChangedEventArgs);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IXamlRootStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.XamlRoot
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIXamlRootStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIXamlRootStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IXamlRootStatics[] = L"Microsoft.UI.Xaml.IXamlRootStatics";

namespace Microsoft {
    namespace UI {
        namespace Xaml {
            /* [object, uuid("2BD69A78-5675-5D62-960A-BF44C2DD5F61"), exclusiveto, contract] */
            MIDL_INTERFACE("2BD69A78-5675-5D62-960A-BF44C2DD5F61")
            IXamlRootStatics : public IInspectable
            {
            public:
                /* [propget] */virtual HRESULT STDMETHODCALLTYPE get__Internal_Use_Only_Compositor(
                    /* [retval, out] */Microsoft::UI::Composition::ICompositor * * value
                    ) = 0;
                
            };

            extern MIDL_CONST_ID IID & IID_IXamlRootStatics=_uuidof(IXamlRootStatics);
            
        } /* Xaml */
    } /* UI */
} /* Microsoft */

EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIXamlRootStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIXamlRootStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.AdaptiveTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IAdaptiveTriggerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IAdaptiveTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_AdaptiveTrigger_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_AdaptiveTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_AdaptiveTrigger[] = L"Microsoft.UI.Xaml.AdaptiveTrigger";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.Application
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IApplicationStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IApplication ** Default Interface **
 *    Microsoft.UI.Xaml.IApplicationOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Application_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Application_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Application[] = L"Microsoft.UI.Xaml.Application";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ApplicationInitializationCallbackParams
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IApplicationInitializationCallbackParams ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ApplicationInitializationCallbackParams[] = L"Microsoft.UI.Xaml.ApplicationInitializationCallbackParams";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.BindingFailedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IBindingFailedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_BindingFailedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_BindingFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_BindingFailedEventArgs[] = L"Microsoft.UI.Xaml.BindingFailedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.BringIntoViewOptions
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IBringIntoViewOptions ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_BringIntoViewOptions_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_BringIntoViewOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_BringIntoViewOptions[] = L"Microsoft.UI.Xaml.BringIntoViewOptions";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IBringIntoViewRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs[] = L"Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.BrushTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IBrushTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_BrushTransition_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_BrushTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_BrushTransition[] = L"Microsoft.UI.Xaml.BrushTransition";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Class Microsoft.UI.Xaml.ColorPaletteResources
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IColorPaletteResources ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ColorPaletteResources_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ColorPaletteResources_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ColorPaletteResources[] = L"Microsoft.UI.Xaml.ColorPaletteResources";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.CornerRadiusHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.ICornerRadiusHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ICornerRadiusHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_CornerRadiusHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_CornerRadiusHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_CornerRadiusHelper[] = L"Microsoft.UI.Xaml.CornerRadiusHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DataContextChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDataContextChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DataContextChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DataContextChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DataContextChangedEventArgs[] = L"Microsoft.UI.Xaml.DataContextChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DataTemplate
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IDataTemplateStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDataTemplate ** Default Interface **
 *    Microsoft.UI.Xaml.IElementFactory
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DataTemplate_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DataTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DataTemplate[] = L"Microsoft.UI.Xaml.DataTemplate";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DataTemplateKey
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDataTemplateKey ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DataTemplateKey_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DataTemplateKey_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DataTemplateKey[] = L"Microsoft.UI.Xaml.DataTemplateKey";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DebugSettings
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDebugSettings ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DebugSettings_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DebugSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DebugSettings[] = L"Microsoft.UI.Xaml.DebugSettings";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DependencyObject
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDependencyObject ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DependencyObject_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DependencyObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DependencyObject[] = L"Microsoft.UI.Xaml.DependencyObject";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DependencyObjectCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IObservableVector_1_Microsoft.UI.Xaml.DependencyObject ** Default Interface **
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.DependencyObject
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.DependencyObject
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DependencyObjectCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DependencyObjectCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DependencyObjectCollection[] = L"Microsoft.UI.Xaml.DependencyObjectCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DependencyProperty
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IDependencyPropertyStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDependencyProperty ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DependencyProperty_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DependencyProperty_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DependencyProperty[] = L"Microsoft.UI.Xaml.DependencyProperty";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDependencyPropertyChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DependencyPropertyChangedEventArgs[] = L"Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DispatcherTimer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDispatcherTimer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DispatcherTimer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DispatcherTimer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DispatcherTimer[] = L"Microsoft.UI.Xaml.DispatcherTimer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragEventArgs[] = L"Microsoft.UI.Xaml.DragEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragOperationDeferral
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragOperationDeferral ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragOperationDeferral_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragOperationDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragOperationDeferral[] = L"Microsoft.UI.Xaml.DragOperationDeferral";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragStartingEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragStartingEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragStartingEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragStartingEventArgs[] = L"Microsoft.UI.Xaml.DragStartingEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragUI
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragUI ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragUI_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragUI[] = L"Microsoft.UI.Xaml.DragUI";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragUIOverride
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragUIOverride ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragUIOverride_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragUIOverride_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragUIOverride[] = L"Microsoft.UI.Xaml.DragUIOverride";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DropCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDropCompletedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DropCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DropCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DropCompletedEventArgs[] = L"Microsoft.UI.Xaml.DropCompletedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DurationHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IDurationHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDurationHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DurationHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DurationHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DurationHelper[] = L"Microsoft.UI.Xaml.DurationHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DxamlCoreTestHooks
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.PrivateApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IDxamlCoreTestHooksStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.PrivateApiContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDxamlCoreTestHooks ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DxamlCoreTestHooks_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DxamlCoreTestHooks_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DxamlCoreTestHooks[] = L"Microsoft.UI.Xaml.DxamlCoreTestHooks";
#endif
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IEffectiveViewportChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs[] = L"Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ElementFactoryGetArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IElementFactoryGetArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ElementFactoryGetArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ElementFactoryGetArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ElementFactoryGetArgs[] = L"Microsoft.UI.Xaml.ElementFactoryGetArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ElementFactoryRecycleArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IElementFactoryRecycleArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ElementFactoryRecycleArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ElementFactoryRecycleArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ElementFactoryRecycleArgs[] = L"Microsoft.UI.Xaml.ElementFactoryRecycleArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ElementSoundPlayer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IElementSoundPlayerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IElementSoundPlayer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ElementSoundPlayer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ElementSoundPlayer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ElementSoundPlayer[] = L"Microsoft.UI.Xaml.ElementSoundPlayer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.EventTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IEventTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_EventTrigger_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_EventTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_EventTrigger[] = L"Microsoft.UI.Xaml.EventTrigger";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ExceptionRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IExceptionRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ExceptionRoutedEventArgs[] = L"Microsoft.UI.Xaml.ExceptionRoutedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.FrameworkElement
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IFrameworkElementStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IFrameworkElement ** Default Interface **
 *    Microsoft.UI.Xaml.IFrameworkElementProtected
 *    Microsoft.UI.Xaml.IFrameworkElementOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkElement_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_FrameworkElement[] = L"Microsoft.UI.Xaml.FrameworkElement";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.FrameworkTemplate
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IFrameworkTemplate ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkTemplate_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_FrameworkTemplate[] = L"Microsoft.UI.Xaml.FrameworkTemplate";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.FrameworkView
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IFrameworkView ** Default Interface **
 *    Windows.ApplicationModel.Core.IFrameworkView
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkView_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_FrameworkView[] = L"Microsoft.UI.Xaml.FrameworkView";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.FrameworkViewSource
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IFrameworkViewSource ** Default Interface **
 *    Windows.ApplicationModel.Core.IFrameworkViewSource
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkViewSource_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkViewSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_FrameworkViewSource[] = L"Microsoft.UI.Xaml.FrameworkViewSource";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.GridLengthHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IGridLengthHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IGridLengthHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_GridLengthHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_GridLengthHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_GridLengthHelper[] = L"Microsoft.UI.Xaml.GridLengthHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.LaunchActivatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ILaunchActivatedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_LaunchActivatedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_LaunchActivatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_LaunchActivatedEventArgs[] = L"Microsoft.UI.Xaml.LaunchActivatedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.MediaFailedRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IMediaFailedRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_MediaFailedRoutedEventArgs[] = L"Microsoft.UI.Xaml.MediaFailedRoutedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.PointHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IPointHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IPointHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_PointHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_PointHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_PointHelper[] = L"Microsoft.UI.Xaml.PointHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.PropertyMetadata
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IPropertyMetadataStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IPropertyMetadata ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_PropertyMetadata_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_PropertyMetadata_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_PropertyMetadata[] = L"Microsoft.UI.Xaml.PropertyMetadata";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.PropertyPath
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.IPropertyPathFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IPropertyPath ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_PropertyPath_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_PropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_PropertyPath[] = L"Microsoft.UI.Xaml.PropertyPath";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.RectHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IRectHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IRectHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_RectHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_RectHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_RectHelper[] = L"Microsoft.UI.Xaml.RectHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ResourceDictionary
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IResourceDictionary ** Default Interface **
 *    Windows.Foundation.Collections.IMap_2_IInspectable,IInspectable
 *    Windows.Foundation.Collections.IIterable_1___FIKeyValuePair_2_IInspectable_IInspectable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ResourceDictionary_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ResourceDictionary_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ResourceDictionary[] = L"Microsoft.UI.Xaml.ResourceDictionary";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.RoutedEvent
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IRoutedEvent ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_RoutedEvent_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_RoutedEvent_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_RoutedEvent[] = L"Microsoft.UI.Xaml.RoutedEvent";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.RoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_RoutedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_RoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_RoutedEventArgs[] = L"Microsoft.UI.Xaml.RoutedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ScalarTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IScalarTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ScalarTransition_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ScalarTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ScalarTransition[] = L"Microsoft.UI.Xaml.ScalarTransition";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Class Microsoft.UI.Xaml.Setter
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via the Microsoft.UI.Xaml.ISetterFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISetter ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Setter_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Setter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Setter[] = L"Microsoft.UI.Xaml.Setter";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.SetterBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISetterBase ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_SetterBase_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_SetterBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_SetterBase[] = L"Microsoft.UI.Xaml.SetterBase";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.SetterBaseCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISetterBaseCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.SetterBase
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.SetterBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_SetterBaseCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_SetterBaseCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_SetterBaseCollection[] = L"Microsoft.UI.Xaml.SetterBaseCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.SizeChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISizeChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_SizeChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_SizeChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_SizeChangedEventArgs[] = L"Microsoft.UI.Xaml.SizeChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.SizeHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.ISizeHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISizeHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_SizeHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_SizeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_SizeHelper[] = L"Microsoft.UI.Xaml.SizeHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.StateTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IStateTriggerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IStateTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_StateTrigger_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_StateTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_StateTrigger[] = L"Microsoft.UI.Xaml.StateTrigger";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.StateTriggerBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IStateTriggerBase ** Default Interface **
 *    Microsoft.UI.Xaml.IStateTriggerBaseProtected
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_StateTriggerBase_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_StateTriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_StateTriggerBase[] = L"Microsoft.UI.Xaml.StateTriggerBase";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.Style
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via the Microsoft.UI.Xaml.IStyleFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IStyle ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Style_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Style_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Style[] = L"Microsoft.UI.Xaml.Style";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TargetPropertyPath
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via the Microsoft.UI.Xaml.ITargetPropertyPathFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ITargetPropertyPath ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TargetPropertyPath_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TargetPropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TargetPropertyPath[] = L"Microsoft.UI.Xaml.TargetPropertyPath";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ThicknessHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IThicknessHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IThicknessHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ThicknessHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ThicknessHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ThicknessHelper[] = L"Microsoft.UI.Xaml.ThicknessHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TriggerAction
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ITriggerAction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TriggerAction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TriggerAction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TriggerAction[] = L"Microsoft.UI.Xaml.TriggerAction";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TriggerActionCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.TriggerAction ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.TriggerAction
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TriggerActionCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TriggerActionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TriggerActionCollection[] = L"Microsoft.UI.Xaml.TriggerActionCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TriggerBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ITriggerBase ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TriggerBase_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TriggerBase[] = L"Microsoft.UI.Xaml.TriggerBase";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TriggerCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.TriggerBase ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.TriggerBase
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TriggerCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TriggerCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TriggerCollection[] = L"Microsoft.UI.Xaml.TriggerCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.UIElement
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IUIElementStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IUIElement ** Default Interface **
 *    Microsoft.UI.Xaml.IUIElementOverrides
 *    Microsoft.UI.Composition.IAnimationObject
 *    Microsoft.UI.Composition.IVisualElement
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_UIElement_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_UIElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_UIElement[] = L"Microsoft.UI.Xaml.UIElement";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.UIElementWeakCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.UIElement ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.UIElement
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_UIElementWeakCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_UIElementWeakCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_UIElementWeakCollection[] = L"Microsoft.UI.Xaml.UIElementWeakCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.UnhandledExceptionEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IUnhandledExceptionEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_UnhandledExceptionEventArgs[] = L"Microsoft.UI.Xaml.UnhandledExceptionEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.Vector3Transition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVector3Transition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Vector3Transition_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Vector3Transition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Vector3Transition[] = L"Microsoft.UI.Xaml.Vector3Transition";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Class Microsoft.UI.Xaml.VisualState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualState ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualState_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualState[] = L"Microsoft.UI.Xaml.VisualState";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.VisualStateChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualStateChangedEventArgs[] = L"Microsoft.UI.Xaml.VisualStateChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.VisualStateGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualStateGroup ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateGroup_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualStateGroup[] = L"Microsoft.UI.Xaml.VisualStateGroup";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.VisualStateManager
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IVisualStateManagerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualStateManager ** Default Interface **
 *    Microsoft.UI.Xaml.IVisualStateManagerProtected
 *    Microsoft.UI.Xaml.IVisualStateManagerOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateManager_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualStateManager[] = L"Microsoft.UI.Xaml.VisualStateManager";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.VisualTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualTransition_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualTransition[] = L"Microsoft.UI.Xaml.VisualTransition";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.Window
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IWindowStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Window_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Window_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Window[] = L"Microsoft.UI.Xaml.Window";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowActivatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowActivatedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowActivatedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowActivatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowActivatedEventArgs[] = L"Microsoft.UI.Xaml.WindowActivatedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowCreatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowCreatedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowCreatedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowCreatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowCreatedEventArgs[] = L"Microsoft.UI.Xaml.WindowCreatedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowEventArgs[] = L"Microsoft.UI.Xaml.WindowEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowSizeChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowSizeChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowSizeChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowSizeChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowSizeChangedEventArgs[] = L"Microsoft.UI.Xaml.WindowSizeChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowVisibilityChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs[] = L"Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.XamlRoot
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IXamlRootStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IXamlRoot ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_XamlRoot_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_XamlRoot_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_XamlRoot[] = L"Microsoft.UI.Xaml.XamlRoot";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.XamlRootChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IXamlRootChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_XamlRootChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_XamlRootChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_XamlRootChangedEventArgs[] = L"Microsoft.UI.Xaml.XamlRootChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000




#else // !defined(__cplusplus)
/* Forward Declarations */
#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback;

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback;

#endif // ____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback;

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDragEventHandler __x_Microsoft_CUI_CXaml_CIDragEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CIDragEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback;

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIRoutedEventHandler __x_Microsoft_CUI_CXaml_CIRoutedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISuspendingEventHandler __x_Microsoft_CUI_CXaml_CISuspendingEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger;

#endif // ____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplication_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplication_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIApplication __x_Microsoft_CUI_CXaml_CIApplication;

#endif // ____x_Microsoft_CUI_CXaml_CIApplication_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIApplicationFactory __x_Microsoft_CUI_CXaml_CIApplicationFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams;

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIApplicationOverrides __x_Microsoft_CUI_CXaml_CIApplicationOverrides;

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationOverrides_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIApplicationStatics __x_Microsoft_CUI_CXaml_CIApplicationStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIApplicationStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback;

#endif // ____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions;

#endif // ____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBrushTransition_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIBrushTransition __x_Microsoft_CUI_CXaml_CIBrushTransition;

#endif // ____x_Microsoft_CUI_CXaml_CIBrushTransition_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIColorPaletteResources __x_Microsoft_CUI_CXaml_CIColorPaletteResources;

#endif // ____x_Microsoft_CUI_CXaml_CIColorPaletteResources_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CICornerRadiusHelper __x_Microsoft_CUI_CXaml_CICornerRadiusHelper;

#endif // ____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics;

#endif // ____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDataTemplate __x_Microsoft_CUI_CXaml_CIDataTemplate;

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDataTemplateExtension __x_Microsoft_CUI_CXaml_CIDataTemplateExtension;

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDataTemplateFactory __x_Microsoft_CUI_CXaml_CIDataTemplateFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDataTemplateKey __x_Microsoft_CUI_CXaml_CIDataTemplateKey;

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateKey_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDataTemplateStatics __x_Microsoft_CUI_CXaml_CIDataTemplateStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDebugSettings_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDebugSettings __x_Microsoft_CUI_CXaml_CIDebugSettings;

#endif // ____x_Microsoft_CUI_CXaml_CIDebugSettings_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDependencyObject __x_Microsoft_CUI_CXaml_CIDependencyObject;

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyObject_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDependencyProperty __x_Microsoft_CUI_CXaml_CIDependencyProperty;

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyProperty_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDispatcherTimer __x_Microsoft_CUI_CXaml_CIDispatcherTimer;

#endif // ____x_Microsoft_CUI_CXaml_CIDispatcherTimer_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDragEventArgs __x_Microsoft_CUI_CXaml_CIDragEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIDragEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDragOperationDeferral __x_Microsoft_CUI_CXaml_CIDragOperationDeferral;

#endif // ____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragUI_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragUI_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDragUI __x_Microsoft_CUI_CXaml_CIDragUI;

#endif // ____x_Microsoft_CUI_CXaml_CIDragUI_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDragUIOverride __x_Microsoft_CUI_CXaml_CIDragUIOverride;

#endif // ____x_Microsoft_CUI_CXaml_CIDragUIOverride_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDurationHelper_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDurationHelper __x_Microsoft_CUI_CXaml_CIDurationHelper;

#endif // ____x_Microsoft_CUI_CXaml_CIDurationHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDurationHelperStatics __x_Microsoft_CUI_CXaml_CIDurationHelperStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks;

#endif // ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIElementFactory __x_Microsoft_CUI_CXaml_CIElementFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIElementSoundPlayer __x_Microsoft_CUI_CXaml_CIElementSoundPlayer;

#endif // ____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIEventTrigger_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIEventTrigger __x_Microsoft_CUI_CXaml_CIEventTrigger;

#endif // ____x_Microsoft_CUI_CXaml_CIEventTrigger_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkElement __x_Microsoft_CUI_CXaml_CIFrameworkElement;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElement_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkTemplate __x_Microsoft_CUI_CXaml_CIFrameworkTemplate;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkView_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkView __x_Microsoft_CUI_CXaml_CIFrameworkView;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkView_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIFrameworkViewSource __x_Microsoft_CUI_CXaml_CIFrameworkViewSource;

#endif // ____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIGridLengthHelper __x_Microsoft_CUI_CXaml_CIGridLengthHelper;

#endif // ____x_Microsoft_CUI_CXaml_CIGridLengthHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPointHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPointHelper_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIPointHelper __x_Microsoft_CUI_CXaml_CIPointHelper;

#endif // ____x_Microsoft_CUI_CXaml_CIPointHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIPointHelperStatics __x_Microsoft_CUI_CXaml_CIPointHelperStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIPointHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIPropertyMetadata __x_Microsoft_CUI_CXaml_CIPropertyMetadata;

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyMetadata_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyPath_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIPropertyPath __x_Microsoft_CUI_CXaml_CIPropertyPath;

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyPath_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIPropertyPathFactory __x_Microsoft_CUI_CXaml_CIPropertyPathFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRectHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRectHelper_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIRectHelper __x_Microsoft_CUI_CXaml_CIRectHelper;

#endif // ____x_Microsoft_CUI_CXaml_CIRectHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIRectHelperStatics __x_Microsoft_CUI_CXaml_CIRectHelperStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIRectHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIResourceDictionary __x_Microsoft_CUI_CXaml_CIResourceDictionary;

#endif // ____x_Microsoft_CUI_CXaml_CIResourceDictionary_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIRoutedEvent __x_Microsoft_CUI_CXaml_CIRoutedEvent;

#endif // ____x_Microsoft_CUI_CXaml_CIRoutedEvent_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIRoutedEventArgs __x_Microsoft_CUI_CXaml_CIRoutedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIScalarTransition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIScalarTransition_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIScalarTransition __x_Microsoft_CUI_CXaml_CIScalarTransition;

#endif // ____x_Microsoft_CUI_CXaml_CIScalarTransition_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetter_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetter_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISetter __x_Microsoft_CUI_CXaml_CISetter;

#endif // ____x_Microsoft_CUI_CXaml_CISetter_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetterBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetterBase_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISetterBase __x_Microsoft_CUI_CXaml_CISetterBase;

#endif // ____x_Microsoft_CUI_CXaml_CISetterBase_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISetterBaseCollection __x_Microsoft_CUI_CXaml_CISetterBaseCollection;

#endif // ____x_Microsoft_CUI_CXaml_CISetterBaseCollection_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISetterBaseFactory __x_Microsoft_CUI_CXaml_CISetterBaseFactory;

#endif // ____x_Microsoft_CUI_CXaml_CISetterBaseFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISetterFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISetterFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISetterFactory __x_Microsoft_CUI_CXaml_CISetterFactory;

#endif // ____x_Microsoft_CUI_CXaml_CISetterFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISizeHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISizeHelper_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISizeHelper __x_Microsoft_CUI_CXaml_CISizeHelper;

#endif // ____x_Microsoft_CUI_CXaml_CISizeHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISizeHelperStatics __x_Microsoft_CUI_CXaml_CISizeHelperStatics;

#endif // ____x_Microsoft_CUI_CXaml_CISizeHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CISourceInfoPrivate __x_Microsoft_CUI_CXaml_CISourceInfoPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTrigger_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIStateTrigger __x_Microsoft_CUI_CXaml_CIStateTrigger;

#endif // ____x_Microsoft_CUI_CXaml_CIStateTrigger_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIStateTriggerBase __x_Microsoft_CUI_CXaml_CIStateTriggerBase;

#endif // ____x_Microsoft_CUI_CXaml_CIStateTriggerBase_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected;

#endif // ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIStateTriggerStatics __x_Microsoft_CUI_CXaml_CIStateTriggerStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStyle_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStyle_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIStyle __x_Microsoft_CUI_CXaml_CIStyle;

#endif // ____x_Microsoft_CUI_CXaml_CIStyle_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIStyleFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIStyleFactory __x_Microsoft_CUI_CXaml_CIStyleFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIStyleFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CITargetPropertyPath __x_Microsoft_CUI_CXaml_CITargetPropertyPath;

#endif // ____x_Microsoft_CUI_CXaml_CITargetPropertyPath_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory;

#endif // ____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIThicknessHelper __x_Microsoft_CUI_CXaml_CIThicknessHelper;

#endif // ____x_Microsoft_CUI_CXaml_CIThicknessHelper_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITriggerAction_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITriggerAction_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CITriggerAction __x_Microsoft_CUI_CXaml_CITriggerAction;

#endif // ____x_Microsoft_CUI_CXaml_CITriggerAction_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CITriggerActionFactory __x_Microsoft_CUI_CXaml_CITriggerActionFactory;

#endif // ____x_Microsoft_CUI_CXaml_CITriggerActionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITriggerBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITriggerBase_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CITriggerBase __x_Microsoft_CUI_CXaml_CITriggerBase;

#endif // ____x_Microsoft_CUI_CXaml_CITriggerBase_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CITriggerBaseFactory __x_Microsoft_CUI_CXaml_CITriggerBaseFactory;

#endif // ____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElement_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUIElement __x_Microsoft_CUI_CXaml_CIUIElement;

#endif // ____x_Microsoft_CUI_CXaml_CIUIElement_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUIElementFactory __x_Microsoft_CUI_CXaml_CIUIElementFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUIElementOverrides __x_Microsoft_CUI_CXaml_CIUIElementOverrides;

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementOverrides_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUIElementStatics __x_Microsoft_CUI_CXaml_CIUIElementStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVector3Transition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVector3Transition_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVector3Transition __x_Microsoft_CUI_CXaml_CIVector3Transition;

#endif // ____x_Microsoft_CUI_CXaml_CIVector3Transition_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualState_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualState_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualState __x_Microsoft_CUI_CXaml_CIVisualState;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualState_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualStateGroup __x_Microsoft_CUI_CXaml_CIVisualStateGroup;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateGroup_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualStateManager __x_Microsoft_CUI_CXaml_CIVisualStateManager;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManager_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualTransition_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualTransition __x_Microsoft_CUI_CXaml_CIVisualTransition;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualTransition_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindow_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindow __x_Microsoft_CUI_CXaml_CIWindow;

#endif // ____x_Microsoft_CUI_CXaml_CIWindow_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindowEventArgs __x_Microsoft_CUI_CXaml_CIWindowEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIWindowEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowFactory_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowFactory_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindowFactory __x_Microsoft_CUI_CXaml_CIWindowFactory;

#endif // ____x_Microsoft_CUI_CXaml_CIWindowFactory_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowPrivate_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowPrivate_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindowPrivate __x_Microsoft_CUI_CXaml_CIWindowPrivate;

#endif // ____x_Microsoft_CUI_CXaml_CIWindowPrivate_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindowStatics __x_Microsoft_CUI_CXaml_CIWindowStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIWindowStatics_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIXamlRoot __x_Microsoft_CUI_CXaml_CIXamlRoot;

#endif // ____x_Microsoft_CUI_CXaml_CIXamlRoot_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_FWD_DEFINED__

#ifndef ____x_Microsoft_CUI_CXaml_CIXamlRootStatics_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CIXamlRootStatics_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CIXamlRootStatics __x_Microsoft_CUI_CXaml_CIXamlRootStatics;

#endif // ____x_Microsoft_CUI_CXaml_CIXamlRootStatics_FWD_DEFINED__

// Parameterized interface forward declarations (C)

// Collection interface definitions

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIDependencyObject * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIDependencyObject * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CDependencyObject **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if !defined(____FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_IInspectable_IInspectable __FIKeyValuePair_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_IInspectable_IInspectable;

typedef struct __FIKeyValuePair_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIKeyValuePair_2_IInspectable_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIKeyValuePair_2_IInspectable_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIKeyValuePair_2_IInspectable_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIKeyValuePair_2_IInspectable_IInspectable * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIKeyValuePair_2_IInspectable_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIKeyValuePair_2_IInspectable_IInspectable * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )(__RPC__in __FIKeyValuePair_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__out IInspectable * *key);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIKeyValuePair_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__deref_out_opt IInspectable * *value);
    END_INTERFACE
} __FIKeyValuePair_2_IInspectable_IInspectableVtbl;

interface __FIKeyValuePair_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIKeyValuePair_2_IInspectable_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIKeyValuePair_2_IInspectable_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIKeyValuePair_2_IInspectable_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIKeyValuePair_2_IInspectable_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIKeyValuePair_2_IInspectable_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIKeyValuePair_2_IInspectable_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIKeyValuePair_2_IInspectable_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIKeyValuePair_2_IInspectable_IInspectable_get_Key(This,key)	\
    ( (This)->lpVtbl -> get_Key(This,key) ) 

#define __FIKeyValuePair_2_IInspectable_IInspectable_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__



#if !defined(____FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable;

typedef struct __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__out __FIKeyValuePair_2_IInspectable_IInspectable * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __FIKeyValuePair_2_IInspectable_IInspectable * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl;

interface __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__



#if !defined(____FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable;

typedef  struct __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1___FIKeyValuePair_2_IInspectable_IInspectable **first);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl;

interface __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1___FIKeyValuePair_2_IInspectable_IInspectable_INTERFACE_DEFINED__




#if !defined(____FIMapView_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIMapView_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMapView_2_IInspectable_IInspectable __FIMapView_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_IInspectable_IInspectable;

typedef struct __FIMapView_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This,/* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This,
        /* [in] */ __RPC__in IInspectable * key,
        /* [retval][out] */ __RPC__deref_out_opt IInspectable * *value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This, /* [in] */ __RPC__in IInspectable * key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *Split )(__RPC__in __FIMapView_2_IInspectable_IInspectable * This,/* [out] */ __RPC__deref_out_opt __FIMapView_2_IInspectable_IInspectable **firstPartition,
        /* [out] */ __RPC__deref_out_opt __FIMapView_2_IInspectable_IInspectable **secondPartition);
    END_INTERFACE
} __FIMapView_2_IInspectable_IInspectableVtbl;

interface __FIMapView_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIMapView_2_IInspectable_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMapView_2_IInspectable_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIMapView_2_IInspectable_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIMapView_2_IInspectable_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIMapView_2_IInspectable_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIMapView_2_IInspectable_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIMapView_2_IInspectable_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIMapView_2_IInspectable_IInspectable_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 
#define __FIMapView_2_IInspectable_IInspectable_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 
#define __FIMapView_2_IInspectable_IInspectable_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 
#define __FIMapView_2_IInspectable_IInspectable_Split(This,firstPartition,secondPartition)	\
    ( (This)->lpVtbl -> Split(This,firstPartition,secondPartition) ) 
#endif /* COBJMACROS */


#endif // ____FIMapView_2_IInspectable_IInspectable_INTERFACE_DEFINED__




#if !defined(____FIMap_2_IInspectable_IInspectable_INTERFACE_DEFINED__)
#define ____FIMap_2_IInspectable_IInspectable_INTERFACE_DEFINED__

typedef interface __FIMap_2_IInspectable_IInspectable __FIMap_2_IInspectable_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_IInspectable_IInspectable;

typedef struct __FIMap_2_IInspectable_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMap_2_IInspectable_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMap_2_IInspectable_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMap_2_IInspectable_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMap_2_IInspectable_IInspectable * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMap_2_IInspectable_IInspectable * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMap_2_IInspectable_IInspectable * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMap_2_IInspectable_IInspectable * This,
        /* [in] */ IInspectable * key,
        /* [retval][out] */ __RPC__deref_out_opt IInspectable * **value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMap_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMap_2_IInspectable_IInspectable * This, /* [in] */ IInspectable * key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIMap_2_IInspectable_IInspectable * This, /* [retval][out] */ __RPC__deref_out_opt __FIMapView_2_IInspectable_IInspectable **view);
    HRESULT ( STDMETHODCALLTYPE *Insert )(__RPC__in __FIMap_2_IInspectable_IInspectable * This,
        /* [in] */ IInspectable * key,
        /* [in] */ __RPC__in_opt IInspectable * *value,
        /* [retval][out] */ __RPC__out boolean *replaced);
    HRESULT ( STDMETHODCALLTYPE *Remove )(__RPC__in __FIMap_2_IInspectable_IInspectable * This,/* [in] */ IInspectable * key);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIMap_2_IInspectable_IInspectable * This);
    END_INTERFACE
} __FIMap_2_IInspectable_IInspectableVtbl;

interface __FIMap_2_IInspectable_IInspectable
{
    CONST_VTBL struct __FIMap_2_IInspectable_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMap_2_IInspectable_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIMap_2_IInspectable_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIMap_2_IInspectable_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIMap_2_IInspectable_IInspectable_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIMap_2_IInspectable_IInspectable_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIMap_2_IInspectable_IInspectable_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIMap_2_IInspectable_IInspectable_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 

#define __FIMap_2_IInspectable_IInspectable_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIMap_2_IInspectable_IInspectable_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 

#define __FIMap_2_IInspectable_IInspectable_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIMap_2_IInspectable_IInspectable_Insert(This,key,value,replaced)	\
    ( (This)->lpVtbl -> Insert(This,key,value,replaced) ) 

#define __FIMap_2_IInspectable_IInspectable_Remove(This,key)	\
    ( (This)->lpVtbl -> Remove(This,key) ) 

#define __FIMap_2_IInspectable_IInspectable_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 
#endif /* COBJMACROS */



#endif // ____FIMap_2_IInspectable_IInspectable_INTERFACE_DEFINED__



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIResourceDictionary * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIResourceDictionary * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CResourceDictionary **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CSetterBase;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CSetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CISetterBase * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CISetterBase * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CSetterBaseVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CSetterBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CSetterBase;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CSetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CSetterBase **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CSetterBaseVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CSetterBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIStateTriggerBase * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIStateTriggerBase * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CStateTriggerBase **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CTriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CITriggerAction * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CITriggerAction * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CTriggerActionVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CTriggerActionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CTriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CTriggerAction **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CTriggerActionVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CTriggerActionVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CITriggerBase * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CITriggerBase * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CTriggerBase **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CUIElement __FIIterator_1_Microsoft__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CUIElement;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIUIElement * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIUIElement * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CUIElementVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CUIElementVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CUIElement_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CUIElement __FIIterable_1_Microsoft__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CUIElement;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CUIElement * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CUIElement * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CUIElement * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CUIElement * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CUIElement * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CUIElement * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CUIElement **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CUIElementVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CUIElementVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CUIElement_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CVisualState __FIIterator_1_Microsoft__CUI__CXaml__CVisualState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CVisualState;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIVisualState * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualState * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CVisualState
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualState_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CVisualState __FIIterable_1_Microsoft__CUI__CXaml__CVisualState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CVisualState;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualState * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualState * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualState * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualState * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualState * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualState * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CVisualState **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CVisualState
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualState_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIVisualStateGroup * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualStateGroup * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CVisualStateGroup **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIVisualTransition * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualTransition * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CVisualTransition **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__)
#define ____FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

typedef interface __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

typedef struct __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
            /* [out] */ __RPC__out ULONG *iidCount,
            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Key )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__out HSTRING *key);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIDataTemplate * *value);
    END_INTERFACE
} __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl;

interface __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate
{
    CONST_VTBL struct __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_get_Key(This,key)	\
    ( (This)->lpVtbl -> get_Key(This,key) ) 

#define __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

typedef struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__out __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl;

interface __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate
{
    CONST_VTBL struct __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

typedef  struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate **first);

    END_INTERFACE
} __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl;

interface __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate
{
    CONST_VTBL struct __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1___FIKeyValuePair_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__)
#define ____FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

typedef interface __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

typedef struct __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,/* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ __RPC__in HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIDataTemplate * *value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [in] */ __RPC__in HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *Split )(__RPC__in __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,/* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate **firstPartition,
        /* [out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate **secondPartition);
    END_INTERFACE
} __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl;

interface __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate
{
    CONST_VTBL struct __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 
#define __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Split(This,firstPartition,secondPartition)	\
    ( (This)->lpVtbl -> Split(This,firstPartition,secondPartition) ) 
#endif /* COBJMACROS */


#endif // ____FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__)
#define ____FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

typedef interface __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate;

typedef struct __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *Lookup )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ HSTRING key,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIDataTemplate * **value);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__out unsigned int *size);
    HRESULT ( STDMETHODCALLTYPE *HasKey )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [in] */ HSTRING key, /* [retval][out] */ __RPC__out boolean *found);
    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This, /* [retval][out] */ __RPC__deref_out_opt __FIMapView_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate **view);
    HRESULT ( STDMETHODCALLTYPE *Insert )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,
        /* [in] */ HSTRING key,
        /* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIDataTemplate * *value,
        /* [retval][out] */ __RPC__out boolean *replaced);
    HRESULT ( STDMETHODCALLTYPE *Remove )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This,/* [in] */ HSTRING key);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate * This);
    END_INTERFACE
} __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl;

interface __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate
{
    CONST_VTBL struct __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Lookup(This,key,value)	\
    ( (This)->lpVtbl -> Lookup(This,key,value) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_HasKey(This,key,found)	\
    ( (This)->lpVtbl -> HasKey(This,key,found) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Insert(This,key,value,replaced)	\
    ( (This)->lpVtbl -> Insert(This,key,value,replaced) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Remove(This,key)	\
    ( (This)->lpVtbl -> Remove(This,key) ) 

#define __FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 
#endif /* COBJMACROS */



#endif // ____FIMap_2_HSTRING_Microsoft__CUI__CXaml__CDataTemplate_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIDependencyObject * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CIDependencyObject * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIDependencyObject * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CDependencyObject;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIDependencyObject * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIDependencyObject * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CDependencyObject **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIDependencyObject * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CIDependencyObject * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject;

typedef interface __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject;

typedef struct __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in_opt __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject *sender,
        /* [in] */ __RPC__in_opt __x_ABI_CWindows_CFoundation_CCollections_CIVectorChangedEventArgs *e);
    END_INTERFACE
} __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl;

interface __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */


#endif // ____FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__)
#define ____FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

typedef interface __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject;

typedef struct __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *add_VectorChanged )(__RPC__in __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * This,
        /* [in] */ __RPC__in_opt __FVectorChangedEventHandler_1_Microsoft__CUI__CXaml__CDependencyObject *handler,
        /* [retval][out] */ __RPC__out EventRegistrationToken *token);

    HRESULT ( STDMETHODCALLTYPE *remove_VectorChanged )(__RPC__in __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * This, /* [in] */ EventRegistrationToken token);
    END_INTERFACE
} __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl;

interface __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject
{
    CONST_VTBL struct __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObjectVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_add_VectorChanged(This,handler,token)	\
    ( (This)->lpVtbl -> add_VectorChanged(This,handler,token) ) 
#define __FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_remove_VectorChanged(This,token)	\
    ( (This)->lpVtbl -> remove_VectorChanged(This,token) ) 

#endif /* COBJMACROS */


#endif // ____FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIResourceDictionary * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CIResourceDictionary * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIResourceDictionary * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CISetterBase * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CISetterBase * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CISetterBase * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBaseVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIStateTriggerBase * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CIStateTriggerBase * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIStateTriggerBase * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CITriggerAction * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CITriggerAction * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CITriggerAction * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerActionVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerActionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CITriggerBase * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CITriggerBase * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CITriggerBase * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CUIElement;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIUIElement * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CIUIElement * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIUIElement * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CUIElementVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CUIElementVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CVisualState;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIVisualState * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CIVisualState * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualState * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIVisualStateGroup * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CIVisualStateGroup * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualStateGroup * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CIVisualTransition * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CIVisualTransition * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualTransition * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIResourceDictionary * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIResourceDictionary * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CResourceDictionary **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIResourceDictionary * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CIResourceDictionary * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionaryVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CSetterBase __FIVector_1_Microsoft__CUI__CXaml__CSetterBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CSetterBase;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CSetterBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CISetterBase * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CISetterBase * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CSetterBase **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CISetterBase * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CSetterBase * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CISetterBase * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CSetterBaseVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CSetterBase
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CSetterBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CSetterBase_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CSetterBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIStateTriggerBase * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIStateTriggerBase * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CStateTriggerBase **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIStateTriggerBase * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CIStateTriggerBase * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CTriggerAction;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CTriggerActionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CITriggerAction * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CITriggerAction * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerAction **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CITriggerAction * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CITriggerAction * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CTriggerActionVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CTriggerActionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CTriggerAction_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CTriggerBase;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CITriggerBase * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CITriggerBase * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CTriggerBase **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CITriggerBase * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CITriggerBase * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CTriggerBaseVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CTriggerBase_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CUIElement __FIVector_1_Microsoft__CUI__CXaml__CUIElement;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CUIElement;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CUIElementVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIUIElement * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIUIElement * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CUIElement **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIUIElement * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CUIElement * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CIUIElement * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CUIElementVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CUIElement
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CUIElementVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CUIElement_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CUIElement_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CVisualState __FIVector_1_Microsoft__CUI__CXaml__CVisualState;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CVisualState;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CVisualStateVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIVisualState * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIVisualState * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CVisualState **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualState * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualState * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CIVisualState * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CVisualStateVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CVisualState
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CVisualStateVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualState_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CVisualState_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIVisualStateGroup * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIVisualStateGroup * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CVisualStateGroup **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualStateGroup * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CIVisualStateGroup * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroupVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CVisualTransition;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIVisualTransition * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CIVisualTransition * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CVisualTransition **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CIVisualTransition * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CIVisualTransition * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CVisualTransitionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CVisualTransition_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs;

typedef struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs * This,/* [in] */ __RPC__in_opt IInspectable * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgsVtbl;

interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs;

typedef struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs * This,/* [in] */ __RPC__in_opt IInspectable * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIWindowEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgsVtbl;

interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs;

typedef struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs * This,/* [in] */ __RPC__in_opt IInspectable * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgsVtbl;

interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs;

typedef struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs * This,/* [in] */ __RPC__in_opt IInspectable * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgsVtbl;

interface __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIFrameworkElement * sender,/* [in] */ __RPC__in_opt IInspectable * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectableVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIFrameworkElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIFrameworkElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIRoutedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000



#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIXamlRoot * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if !defined(____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__)
#define ____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__

typedef interface __FIEventHandler_1_IInspectable __FIEventHandler_1_IInspectable;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIEventHandler_1_IInspectable;

typedef struct __FIEventHandler_1_IInspectableVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIEventHandler_1_IInspectable * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIEventHandler_1_IInspectable * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIEventHandler_1_IInspectable * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIEventHandler_1_IInspectable * This,/* [in] */ __RPC__in_opt IInspectable *sender,/* [in] */ __RPC__in_opt IInspectable * *e);
    END_INTERFACE
} __FIEventHandler_1_IInspectableVtbl;

interface __FIEventHandler_1_IInspectable
{
    CONST_VTBL struct __FIEventHandler_1_IInspectableVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIEventHandler_1_IInspectable_QueryInterface(This,riid,ppvObject)	\
        ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIEventHandler_1_IInspectable_AddRef(This)	\
        ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIEventHandler_1_IInspectable_Release(This)	\
        ( (This)->lpVtbl -> Release(This) ) 

#define __FIEventHandler_1_IInspectable_Invoke(This,sender,e)	\
        ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */


#endif // ____FIEventHandler_1_IInspectable_INTERFACE_DEFINED__


struct __x_ABI_CWindows_CFoundation_CRect;

#if !defined(____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CFoundation__CRect __FIReference_1_Windows__CFoundation__CRect;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CFoundation__CRect;

typedef struct __FIReference_1_Windows__CFoundation__CRectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CFoundation__CRect * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This );

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This, 
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CFoundation__CRect * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CFoundation__CRect * This, /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CFoundation_CRect *value);
    END_INTERFACE
} __FIReference_1_Windows__CFoundation__CRectVtbl;

interface __FIReference_1_Windows__CFoundation__CRect
{
    CONST_VTBL struct __FIReference_1_Windows__CFoundation__CRectVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIReference_1_Windows__CFoundation__CRect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIReference_1_Windows__CFoundation__CRect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIReference_1_Windows__CFoundation__CRect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIReference_1_Windows__CFoundation__CRect_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIReference_1_Windows__CFoundation__CRect_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIReference_1_Windows__CFoundation__CRect_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIReference_1_Windows__CFoundation__CRect_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIReference_1_Windows__CFoundation__CRect_INTERFACE_DEFINED__


struct __x_ABI_CWindows_CUI_CColor;

#if !defined(____FIReference_1_Windows__CUI__CColor_INTERFACE_DEFINED__)
#define ____FIReference_1_Windows__CUI__CColor_INTERFACE_DEFINED__

typedef interface __FIReference_1_Windows__CUI__CColor __FIReference_1_Windows__CUI__CColor;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIReference_1_Windows__CUI__CColor;

typedef struct __FIReference_1_Windows__CUI__CColorVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIReference_1_Windows__CUI__CColor * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIReference_1_Windows__CUI__CColor * This );
    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIReference_1_Windows__CUI__CColor * This );

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIReference_1_Windows__CUI__CColor * This, 
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( __RPC__in __FIReference_1_Windows__CUI__CColor * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( __RPC__in __FIReference_1_Windows__CUI__CColor * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Value )(__RPC__in __FIReference_1_Windows__CUI__CColor * This, /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CUI_CColor *value);
    END_INTERFACE
} __FIReference_1_Windows__CUI__CColorVtbl;

interface __FIReference_1_Windows__CUI__CColor
{
    CONST_VTBL struct __FIReference_1_Windows__CUI__CColorVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIReference_1_Windows__CUI__CColor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIReference_1_Windows__CUI__CColor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIReference_1_Windows__CUI__CColor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIReference_1_Windows__CUI__CColor_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIReference_1_Windows__CUI__CColor_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIReference_1_Windows__CUI__CColor_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIReference_1_Windows__CUI__CColor_get_Value(This,value)	\
    ( (This)->lpVtbl -> get_Value(This,value) ) 
#endif /* COBJMACROS */


#endif // ____FIReference_1_Windows__CUI__CColor_INTERFACE_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CITransition * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransitionVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIPointer __x_Microsoft_CUI_CXaml_CInput_CIPointer;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIPointer_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CInput_CIPointer * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CInput_CIPointer * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CInput__CPointer **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CInput_CIPointer * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CInput_CIPointer * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CInput_CIPointer * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointerVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIXamlLight_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CMedia__CXamlLight **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CMedia__CXamlLight **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CMedia_CIXamlLight * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLightVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__)
#define ____FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator;

typedef struct __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl;

interface __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator
{
    CONST_VTBL struct __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__)
#define ____FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator;

typedef  struct __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator **first);

    END_INTERFACE
} __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl;

interface __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator
{
    CONST_VTBL struct __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__)
#define ____FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

typedef interface __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator;

typedef struct __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);

    ULONG ( STDMETHODCALLTYPE *Release )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )( __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
                                            /* [out] */ __RPC__out ULONG *iidCount,
                                            /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
            /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )( 
        __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
            /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )( 
                                         __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
                                         /* [in] */ unsigned int index,
                                         /* [retval][out] */ __RPC__out __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * *item);

        /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
            __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
            /* [retval][out] */ __RPC__out unsigned int *size);

        HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
            /* [in] */ __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * item,
            /* [out] */ __RPC__out unsigned int *index,
            /* [retval][out] */ __RPC__out boolean *found);

        HRESULT ( STDMETHODCALLTYPE *GetMany )( 
                                               __RPC__in __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
            /* [in] */ unsigned int startIndex,
            /* [in] */ unsigned int capacity,
            /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * *items,
            /* [retval][out] */ __RPC__out unsigned int *actual);

        END_INTERFACE
} __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl;

interface __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator
{
    CONST_VTBL struct __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#endif /* COBJMACROS */



#endif // ____FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__)
#define ____FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

typedef interface __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator;

typedef struct __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
            /* [in] */ __RPC__in REFIID riid,
            /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *GetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ unsigned int index,
        /* [retval][out] */ __RPC__deref_out_opt __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * *item);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Size )( 
        __RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [retval][out] */ __RPC__out unsigned int *size);

    HRESULT ( STDMETHODCALLTYPE *GetView )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [retval][out] */ __RPC__deref_out_opt __FIVectorView_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator **view);

    HRESULT ( STDMETHODCALLTYPE *IndexOf )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * item,
        /* [out] */ __RPC__out unsigned int *index,
        /* [retval][out] */ __RPC__out boolean *found);

    HRESULT ( STDMETHODCALLTYPE *SetAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * item);

    HRESULT ( STDMETHODCALLTYPE *InsertAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ unsigned int index,
        /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * item);

    HRESULT ( STDMETHODCALLTYPE *RemoveAt )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [in] */ unsigned int index);
    HRESULT ( STDMETHODCALLTYPE *Append )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This, /* [in] */ __RPC__in __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * item);
    HRESULT ( STDMETHODCALLTYPE *RemoveAtEnd )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);
    HRESULT ( STDMETHODCALLTYPE *Clear )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ unsigned int startIndex,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    HRESULT ( STDMETHODCALLTYPE *ReplaceAll )(__RPC__in __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * This,
        /* [in] */ unsigned int count,
        /* [size_is][in] */ __RPC__in_ecount_full(count) __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAccelerator * *value);

    END_INTERFACE
} __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl;

interface __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator
{
    CONST_VTBL struct __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAcceleratorVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetAt(This,index,item)	\
    ( (This)->lpVtbl -> GetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_get_Size(This,size)	\
    ( (This)->lpVtbl -> get_Size(This,size) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetView(This,view)	\
    ( (This)->lpVtbl -> GetView(This,view) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_IndexOf(This,item,index,found)	\
    ( (This)->lpVtbl -> IndexOf(This,item,index,found) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_SetAt(This,index,item)	\
    ( (This)->lpVtbl -> SetAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_InsertAt(This,index,item)	\
    ( (This)->lpVtbl -> InsertAt(This,index,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_Append(This,item)	\
    ( (This)->lpVtbl -> Append(This,item) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_RemoveAtEnd(This)	\
    ( (This)->lpVtbl -> RemoveAtEnd(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_GetMany(This,startIndex,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,startIndex,capacity,items,actual) ) 

#define __FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_ReplaceAll(This,count,value)	\
    ( (This)->lpVtbl -> ReplaceAll(This,count,value) ) 

#endif /* COBJMACROS */



#endif // ____FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs __x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CICharacterReceivedRoutedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs __x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CIContextRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayRequestedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyDisplayDismissedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CIAccessKeyInvokedEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs __x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs __x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CIGettingFocusEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs __x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CILosingFocusEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs __x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs_FWD_DEFINED__


#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_INTERFACE_DEFINED__)
#define ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_INTERFACE_DEFINED__

typedef interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs;

typedef struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs * This,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CIUIElement * sender,/* [in] */ __RPC__in_opt __x_Microsoft_CUI_CXaml_CInput_CINoFocusCandidateFoundEventArgs * e);
    END_INTERFACE
} __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgsVtbl;

interface __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs
{
    CONST_VTBL struct __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_Invoke(This,sender,e)	\
    ( (This)->lpVtbl -> Invoke(This,sender,e) ) 
#endif /* COBJMACROS */



#endif // ____FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs_INTERFACE_DEFINED__

#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation;
#if !defined(____FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__)
#define ____FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__

typedef interface __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

// Forward declare the async operation.
typedef interface __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

typedef struct __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This);

    HRESULT ( STDMETHODCALLTYPE *Invoke )(__RPC__in __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This,/* [in] */ __RPC__in_opt __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation *asyncInfo, /* [in] */ AsyncStatus status);
    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl;

interface __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation
{
    CONST_VTBL struct __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_Invoke(This,asyncInfo,status)	\
    ( (This)->lpVtbl -> Invoke(This,asyncInfo,status) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__



#if !defined(____FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__)
#define ____FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__

typedef interface __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation;

typedef struct __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);
    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propput] */ HRESULT ( STDMETHODCALLTYPE *put_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This, /* [in] */ __RPC__in_opt __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation *handler);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Completed )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This, /* [retval][out] */ __RPC__deref_out_opt __FIAsyncOperationCompletedHandler_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation **handler);
    HRESULT ( STDMETHODCALLTYPE *GetResults )(__RPC__in __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * This, /* [retval][out] */ __RPC__out enum __x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation *results);
    END_INTERFACE
} __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl;

interface __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation
{
    CONST_VTBL struct __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 

#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_put_Completed(This,handler)	\
    ( (This)->lpVtbl -> put_Completed(This,handler) ) 
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_get_Completed(This,handler)	\
    ( (This)->lpVtbl -> get_Completed(This,handler) ) 
#define __FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_GetResults(This,results)	\
    ( (This)->lpVtbl -> GetResults(This,results) ) 
#endif /* COBJMACROS */


#endif // ____FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation_INTERFACE_DEFINED__


struct __x_ABI_CWindows_CFoundation_CPoint;

#if !defined(____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterator_1_Windows__CFoundation__CPoint __FIIterator_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1_Windows__CFoundation__CPoint;

typedef struct __FIIterator_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This, /* [retval][out] */ __RPC__out struct __x_ABI_CWindows_CFoundation_CPoint *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1_Windows__CFoundation__CPoint * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) struct __x_ABI_CWindows_CFoundation_CPoint *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1_Windows__CFoundation__CPointVtbl;

interface __FIIterator_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterator_1_Windows__CFoundation__CPointVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1_Windows__CFoundation__CPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1_Windows__CFoundation__CPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1_Windows__CFoundation__CPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1_Windows__CFoundation__CPoint_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1_Windows__CFoundation__CPoint_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1_Windows__CFoundation__CPoint_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1_Windows__CFoundation__CPoint_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CFoundation__CPoint_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1_Windows__CFoundation__CPoint_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__



#if !defined(____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterable_1_Windows__CFoundation__CPoint __FIIterable_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1_Windows__CFoundation__CPoint;

typedef  struct __FIIterable_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1_Windows__CFoundation__CPoint * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1_Windows__CFoundation__CPoint * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1_Windows__CFoundation__CPoint * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1_Windows__CFoundation__CPoint * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1_Windows__CFoundation__CPoint * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1_Windows__CFoundation__CPoint * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1_Windows__CFoundation__CPoint * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1_Windows__CFoundation__CPoint **first);

    END_INTERFACE
} __FIIterable_1_Windows__CFoundation__CPointVtbl;

interface __FIIterable_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterable_1_Windows__CFoundation__CPointVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1_Windows__CFoundation__CPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1_Windows__CFoundation__CPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1_Windows__CFoundation__CPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1_Windows__CFoundation__CPoint_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1_Windows__CFoundation__CPoint_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1_Windows__CFoundation__CPoint_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__



#if !defined(____FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint;

typedef struct __FIIterator_1___FIIterable_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);
    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This);
    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This);
    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This,
        /* [out] */ __RPC__out ULONG *iidCount,
        /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);
    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_Current )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This, /* [retval][out] */ __RPC__out __FIIterable_1_Windows__CFoundation__CPoint * *current);
    /* [propget] */ HRESULT ( STDMETHODCALLTYPE *get_HasCurrent )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *MoveNext )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This, /* [retval][out] */ __RPC__out boolean *hasCurrent);
    HRESULT ( STDMETHODCALLTYPE *GetMany )(__RPC__in __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint * This,
        /* [in] */ unsigned int capacity,
        /* [size_is][length_is][out] */ __RPC__out_ecount_part(capacity, *actual) __FIIterable_1_Windows__CFoundation__CPoint * *items,
        /* [retval][out] */ __RPC__out unsigned int *actual);

    END_INTERFACE
} __FIIterator_1___FIIterable_1_Windows__CFoundation__CPointVtbl;

interface __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterator_1___FIIterable_1_Windows__CFoundation__CPointVtbl *lpVtbl;
};



#ifdef COBJMACROS


#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_get_Current(This,current)	\
    ( (This)->lpVtbl -> get_Current(This,current) ) 

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_get_HasCurrent(This,hasCurrent)	\
    ( (This)->lpVtbl -> get_HasCurrent(This,hasCurrent) ) 

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_MoveNext(This,hasCurrent)	\
    ( (This)->lpVtbl -> MoveNext(This,hasCurrent) ) 

#define __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_GetMany(This,capacity,items,actual)	\
    ( (This)->lpVtbl -> GetMany(This,capacity,items,actual) ) 

#endif /* COBJMACROS */


#endif // ____FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__



#if !defined(____FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__)
#define ____FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__

typedef interface __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint;

//  Declare the parameterized interface IID.
EXTERN_C const IID IID___FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint;

typedef  struct __FIIterable_1___FIIterable_1_Windows__CFoundation__CPointVtbl
{
    BEGIN_INTERFACE

    HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
        __RPC__in __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * This,
        /* [in] */ __RPC__in REFIID riid,
        /* [annotation][iid_is][out] */ 
        _COM_Outptr_  void **ppvObject);

    ULONG ( STDMETHODCALLTYPE *AddRef )(__RPC__in __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * This);

    ULONG ( STDMETHODCALLTYPE *Release )(__RPC__in __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * This);

    HRESULT ( STDMETHODCALLTYPE *GetIids )(__RPC__in __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * This,
                                           /* [out] */ __RPC__out ULONG *iidCount,
                                           /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids);

    HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(__RPC__in __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * This, /* [out] */ __RPC__deref_out_opt HSTRING *className);

    HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(__RPC__in __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * This, /* [out] */ __RPC__out TrustLevel *trustLevel);

    HRESULT ( STDMETHODCALLTYPE *First )(__RPC__in __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * This, /* [retval][out] */ __RPC__deref_out_opt __FIIterator_1___FIIterable_1_Windows__CFoundation__CPoint **first);

    END_INTERFACE
} __FIIterable_1___FIIterable_1_Windows__CFoundation__CPointVtbl;

interface __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint
{
    CONST_VTBL struct __FIIterable_1___FIIterable_1_Windows__CFoundation__CPointVtbl *lpVtbl;
};

#ifdef COBJMACROS

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_GetIids(This,iidCount,iids)	\
    ( (This)->lpVtbl -> GetIids(This,iidCount,iids) ) 

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_GetRuntimeClassName(This,className)	\
    ( (This)->lpVtbl -> GetRuntimeClassName(This,className) ) 

#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_GetTrustLevel(This,trustLevel)	\
    ( (This)->lpVtbl -> GetTrustLevel(This,trustLevel) ) 


#define __FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_First(This,first)	\
    ( (This)->lpVtbl -> First(This,first) ) 

#endif /* COBJMACROS */


#endif // ____FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint_INTERFACE_DEFINED__



#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo __x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo;

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositor __x_Microsoft_CUI_CComposition_CICompositor;

#endif // ____x_Microsoft_CUI_CComposition_CICompositor_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIAnimationObject __x_Microsoft_CUI_CComposition_CIAnimationObject;

#endif // ____x_Microsoft_CUI_CComposition_CIAnimationObject_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CICompositionAnimationBase __x_Microsoft_CUI_CComposition_CICompositionAnimationBase;

#endif // ____x_Microsoft_CUI_CComposition_CICompositionAnimationBase_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__
#define ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CComposition_CIVisualElement __x_Microsoft_CUI_CComposition_CIVisualElement;

#endif // ____x_Microsoft_CUI_CComposition_CIVisualElement_FWD_DEFINED__





#ifndef ____x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty __x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty;

#endif // ____x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue __x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue;

#endif // ____x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue_FWD_DEFINED__






#ifndef ____x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer __x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer;

#endif // ____x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer_FWD_DEFINED__







#ifndef ____x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs __x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CControls_CIControl __x_Microsoft_CUI_CXaml_CControls_CIControl;

#endif // ____x_Microsoft_CUI_CXaml_CControls_CIControl_FWD_DEFINED__







typedef enum __x_Microsoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation __x_Microsoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation;

#ifndef ____x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase __x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase;

#endif // ____x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase_FWD_DEFINED__







#ifndef ____x_Microsoft_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CData_CIBindingBase __x_Microsoft_CUI_CXaml_CData_CIBindingBase;

#endif // ____x_Microsoft_CUI_CXaml_CData_CIBindingBase_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CData_CIBindingExpression __x_Microsoft_CUI_CXaml_CData_CIBindingExpression;

#endif // ____x_Microsoft_CUI_CXaml_CData_CIBindingExpression_FWD_DEFINED__






#ifndef ____x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland __x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland;

#endif // ____x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland_FWD_DEFINED__











#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler __x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler_FWD_DEFINED__



#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler __x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler __x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler_FWD_DEFINED__



typedef enum __x_Microsoft_CUI_CXaml_CInput_CKeyTipPlacementMode __x_Microsoft_CUI_CXaml_CInput_CKeyTipPlacementMode;


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs __x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs_FWD_DEFINED__



typedef enum __x_Microsoft_CUI_CXaml_CInput_CKeyboardAcceleratorPlacementMode __x_Microsoft_CUI_CXaml_CInput_CKeyboardAcceleratorPlacementMode;


typedef enum __x_Microsoft_CUI_CXaml_CInput_CKeyboardNavigationMode __x_Microsoft_CUI_CXaml_CInput_CKeyboardNavigationMode;


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler __x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler __x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler __x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler_FWD_DEFINED__



typedef enum __x_Microsoft_CUI_CXaml_CInput_CManipulationModes __x_Microsoft_CUI_CXaml_CInput_CManipulationModes;

#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler __x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler __x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler_FWD_DEFINED__




#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler __x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler_FWD_DEFINED__



#ifndef ____x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler __x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler __x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler;

#endif // ____x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler_FWD_DEFINED__



typedef enum __x_Microsoft_CUI_CXaml_CInput_CXYFocusKeyboardNavigationMode __x_Microsoft_CUI_CXaml_CInput_CXYFocusKeyboardNavigationMode;


typedef enum __x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy __x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy;





#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard __x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard_FWD_DEFINED__








#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CIBrush __x_Microsoft_CUI_CXaml_CMedia_CIBrush;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIBrush_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CICacheMode __x_Microsoft_CUI_CXaml_CMedia_CICacheMode;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CICacheMode_FWD_DEFINED__



typedef enum __x_Microsoft_CUI_CXaml_CMedia_CElementCompositeMode __x_Microsoft_CUI_CXaml_CMedia_CElementCompositeMode;

#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform __x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform_FWD_DEFINED__






#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage __x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage_FWD_DEFINED__







#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D __x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D_FWD_DEFINED__







#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CIProjection __x_Microsoft_CUI_CXaml_CMedia_CIProjection;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIProjection_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry __x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CIShadow __x_Microsoft_CUI_CXaml_CMedia_CIShadow;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CIShadow_FWD_DEFINED__


#ifndef ____x_Microsoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
#define ____x_Microsoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__
typedef interface __x_Microsoft_CUI_CXaml_CMedia_CITransform __x_Microsoft_CUI_CXaml_CMedia_CITransform;

#endif // ____x_Microsoft_CUI_CXaml_CMedia_CITransform_FWD_DEFINED__










typedef enum __x_Microsoft_CUI_CXaml_CApplicationHighContrastAdjustment __x_Microsoft_CUI_CXaml_CApplicationHighContrastAdjustment;


typedef enum __x_Microsoft_CUI_CXaml_CApplicationRequiresPointerMode __x_Microsoft_CUI_CXaml_CApplicationRequiresPointerMode;


typedef enum __x_Microsoft_CUI_CXaml_CApplicationTheme __x_Microsoft_CUI_CXaml_CApplicationTheme;


typedef enum __x_Microsoft_CUI_CXaml_CAutomationTextAttributesEnum __x_Microsoft_CUI_CXaml_CAutomationTextAttributesEnum;


typedef enum __x_Microsoft_CUI_CXaml_CDurationType __x_Microsoft_CUI_CXaml_CDurationType;


typedef enum __x_Microsoft_CUI_CXaml_CElementHighContrastAdjustment __x_Microsoft_CUI_CXaml_CElementHighContrastAdjustment;


typedef enum __x_Microsoft_CUI_CXaml_CElementSoundKind __x_Microsoft_CUI_CXaml_CElementSoundKind;


typedef enum __x_Microsoft_CUI_CXaml_CElementSoundMode __x_Microsoft_CUI_CXaml_CElementSoundMode;


typedef enum __x_Microsoft_CUI_CXaml_CElementSoundPlayerState __x_Microsoft_CUI_CXaml_CElementSoundPlayerState;


typedef enum __x_Microsoft_CUI_CXaml_CElementSpatialAudioMode __x_Microsoft_CUI_CXaml_CElementSpatialAudioMode;


typedef enum __x_Microsoft_CUI_CXaml_CElementTheme __x_Microsoft_CUI_CXaml_CElementTheme;


typedef enum __x_Microsoft_CUI_CXaml_CFlowDirection __x_Microsoft_CUI_CXaml_CFlowDirection;


typedef enum __x_Microsoft_CUI_CXaml_CFocusState __x_Microsoft_CUI_CXaml_CFocusState;


typedef enum __x_Microsoft_CUI_CXaml_CFocusVisualKind __x_Microsoft_CUI_CXaml_CFocusVisualKind;


typedef enum __x_Microsoft_CUI_CXaml_CFontCapitals __x_Microsoft_CUI_CXaml_CFontCapitals;


typedef enum __x_Microsoft_CUI_CXaml_CFontEastAsianLanguage __x_Microsoft_CUI_CXaml_CFontEastAsianLanguage;


typedef enum __x_Microsoft_CUI_CXaml_CFontEastAsianWidths __x_Microsoft_CUI_CXaml_CFontEastAsianWidths;


typedef enum __x_Microsoft_CUI_CXaml_CFontFraction __x_Microsoft_CUI_CXaml_CFontFraction;


typedef enum __x_Microsoft_CUI_CXaml_CFontNumeralAlignment __x_Microsoft_CUI_CXaml_CFontNumeralAlignment;


typedef enum __x_Microsoft_CUI_CXaml_CFontNumeralStyle __x_Microsoft_CUI_CXaml_CFontNumeralStyle;


typedef enum __x_Microsoft_CUI_CXaml_CFontVariants __x_Microsoft_CUI_CXaml_CFontVariants;


typedef enum __x_Microsoft_CUI_CXaml_CGridUnitType __x_Microsoft_CUI_CXaml_CGridUnitType;


typedef enum __x_Microsoft_CUI_CXaml_CHorizontalAlignment __x_Microsoft_CUI_CXaml_CHorizontalAlignment;


typedef enum __x_Microsoft_CUI_CXaml_CLineStackingStrategy __x_Microsoft_CUI_CXaml_CLineStackingStrategy;


typedef enum __x_Microsoft_CUI_CXaml_COpticalMarginAlignment __x_Microsoft_CUI_CXaml_COpticalMarginAlignment;


typedef enum __x_Microsoft_CUI_CXaml_CTextAlignment __x_Microsoft_CUI_CXaml_CTextAlignment;


typedef enum __x_Microsoft_CUI_CXaml_CTextLineBounds __x_Microsoft_CUI_CXaml_CTextLineBounds;


typedef enum __x_Microsoft_CUI_CXaml_CTextReadingOrder __x_Microsoft_CUI_CXaml_CTextReadingOrder;


typedef enum __x_Microsoft_CUI_CXaml_CTextTrimming __x_Microsoft_CUI_CXaml_CTextTrimming;


typedef enum __x_Microsoft_CUI_CXaml_CTextWrapping __x_Microsoft_CUI_CXaml_CTextWrapping;


typedef enum __x_Microsoft_CUI_CXaml_CTransitionParent __x_Microsoft_CUI_CXaml_CTransitionParent;


typedef enum __x_Microsoft_CUI_CXaml_CTransitionTrigger __x_Microsoft_CUI_CXaml_CTransitionTrigger;


typedef enum __x_Microsoft_CUI_CXaml_CVector3TransitionComponents __x_Microsoft_CUI_CXaml_CVector3TransitionComponents;


typedef enum __x_Microsoft_CUI_CXaml_CVerticalAlignment __x_Microsoft_CUI_CXaml_CVerticalAlignment;


typedef enum __x_Microsoft_CUI_CXaml_CVisibility __x_Microsoft_CUI_CXaml_CVisibility;


typedef enum __x_Microsoft_CUI_CXaml_CWindowActivationState __x_Microsoft_CUI_CXaml_CWindowActivationState;


typedef struct __x_Microsoft_CUI_CXaml_CCornerRadius __x_Microsoft_CUI_CXaml_CCornerRadius;


typedef struct __x_Microsoft_CUI_CXaml_CDuration __x_Microsoft_CUI_CXaml_CDuration;


typedef struct __x_Microsoft_CUI_CXaml_CGridLength __x_Microsoft_CUI_CXaml_CGridLength;


typedef struct __x_Microsoft_CUI_CXaml_CThickness __x_Microsoft_CUI_CXaml_CThickness;


























































































































































































































































/*
 *
 * Struct Microsoft.UI.Xaml.ApplicationHighContrastAdjustment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, flags, contract] */
enum __x_Microsoft_CUI_CXaml_CApplicationHighContrastAdjustment
{
    Microsoft_UI_Xaml_ApplicationHighContrastAdjustment_None = 0,
    Microsoft_UI_Xaml_ApplicationHighContrastAdjustment_Auto = 0xffffffff,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ApplicationRequiresPointerMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CApplicationRequiresPointerMode
{
    Microsoft_UI_Xaml_ApplicationRequiresPointerMode_Auto = 0,
    Microsoft_UI_Xaml_ApplicationRequiresPointerMode_WhenRequested = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ApplicationTheme
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CApplicationTheme
{
    Microsoft_UI_Xaml_ApplicationTheme_Light = 0,
    Microsoft_UI_Xaml_ApplicationTheme_Dark = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.AutomationTextAttributesEnum
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CAutomationTextAttributesEnum
{
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_AnimationStyleAttribute = 40000,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_BackgroundColorAttribute = 40001,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_BulletStyleAttribute = 40002,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_CapStyleAttribute = 40003,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_CultureAttribute = 40004,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_FontNameAttribute = 40005,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_FontSizeAttribute = 40006,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_FontWeightAttribute = 40007,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_ForegroundColorAttribute = 40008,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_HorizontalTextAlignmentAttribute = 40009,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IndentationFirstLineAttribute = 40010,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IndentationLeadingAttribute = 40011,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IndentationTrailingAttribute = 40012,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IsHiddenAttribute = 40013,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IsItalicAttribute = 40014,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IsReadOnlyAttribute = 40015,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IsSubscriptAttribute = 40016,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IsSuperscriptAttribute = 40017,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_MarginBottomAttribute = 40018,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_MarginLeadingAttribute = 40019,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_MarginTopAttribute = 40020,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_MarginTrailingAttribute = 40021,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_OutlineStylesAttribute = 40022,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_OverlineColorAttribute = 40023,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_OverlineStyleAttribute = 40024,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_StrikethroughColorAttribute = 40025,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_StrikethroughStyleAttribute = 40026,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_TabsAttribute = 40027,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_TextFlowDirectionsAttribute = 40028,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_UnderlineColorAttribute = 40029,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_UnderlineStyleAttribute = 40030,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_AnnotationTypesAttribute = 40031,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_AnnotationObjectsAttribute = 40032,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_StyleNameAttribute = 40033,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_StyleIdAttribute = 40034,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_LinkAttribute = 40035,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_IsActiveAttribute = 40036,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_SelectionActiveEndAttribute = 40037,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_CaretPositionAttribute = 40038,
    Microsoft_UI_Xaml_AutomationTextAttributesEnum_CaretBidiModeAttribute = 40039,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.DurationType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CDurationType
{
    Microsoft_UI_Xaml_DurationType_Automatic = 0,
    Microsoft_UI_Xaml_DurationType_TimeSpan = 1,
    Microsoft_UI_Xaml_DurationType_Forever = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementHighContrastAdjustment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, flags, contract] */
enum __x_Microsoft_CUI_CXaml_CElementHighContrastAdjustment
{
    Microsoft_UI_Xaml_ElementHighContrastAdjustment_None = 0,
    Microsoft_UI_Xaml_ElementHighContrastAdjustment_Application = 0x80000000,
    Microsoft_UI_Xaml_ElementHighContrastAdjustment_Auto = 0xffffffff,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementSoundKind
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CElementSoundKind
{
    Microsoft_UI_Xaml_ElementSoundKind_Focus = 0,
    Microsoft_UI_Xaml_ElementSoundKind_Invoke = 1,
    Microsoft_UI_Xaml_ElementSoundKind_Show = 2,
    Microsoft_UI_Xaml_ElementSoundKind_Hide = 3,
    Microsoft_UI_Xaml_ElementSoundKind_MovePrevious = 4,
    Microsoft_UI_Xaml_ElementSoundKind_MoveNext = 5,
    Microsoft_UI_Xaml_ElementSoundKind_GoBack = 6,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementSoundMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CElementSoundMode
{
    Microsoft_UI_Xaml_ElementSoundMode_Default = 0,
    Microsoft_UI_Xaml_ElementSoundMode_FocusOnly = 1,
    Microsoft_UI_Xaml_ElementSoundMode_Off = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementSoundPlayerState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CElementSoundPlayerState
{
    Microsoft_UI_Xaml_ElementSoundPlayerState_Auto = 0,
    Microsoft_UI_Xaml_ElementSoundPlayerState_Off = 1,
    Microsoft_UI_Xaml_ElementSoundPlayerState_On = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementSpatialAudioMode
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CElementSpatialAudioMode
{
    Microsoft_UI_Xaml_ElementSpatialAudioMode_Auto = 0,
    Microsoft_UI_Xaml_ElementSpatialAudioMode_Off = 1,
    Microsoft_UI_Xaml_ElementSpatialAudioMode_On = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.ElementTheme
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CElementTheme
{
    Microsoft_UI_Xaml_ElementTheme_Default = 0,
    Microsoft_UI_Xaml_ElementTheme_Light = 1,
    Microsoft_UI_Xaml_ElementTheme_Dark = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FlowDirection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFlowDirection
{
    Microsoft_UI_Xaml_FlowDirection_LeftToRight = 0,
    Microsoft_UI_Xaml_FlowDirection_RightToLeft = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FocusState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFocusState
{
    Microsoft_UI_Xaml_FocusState_Unfocused = 0,
    Microsoft_UI_Xaml_FocusState_Pointer = 1,
    Microsoft_UI_Xaml_FocusState_Keyboard = 2,
    Microsoft_UI_Xaml_FocusState_Programmatic = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FocusVisualKind
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFocusVisualKind
{
    Microsoft_UI_Xaml_FocusVisualKind_DottedLine = 0,
    Microsoft_UI_Xaml_FocusVisualKind_HighVisibility = 1,
    Microsoft_UI_Xaml_FocusVisualKind_Reveal = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontCapitals
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFontCapitals
{
    Microsoft_UI_Xaml_FontCapitals_Normal = 0,
    Microsoft_UI_Xaml_FontCapitals_AllSmallCaps = 1,
    Microsoft_UI_Xaml_FontCapitals_SmallCaps = 2,
    Microsoft_UI_Xaml_FontCapitals_AllPetiteCaps = 3,
    Microsoft_UI_Xaml_FontCapitals_PetiteCaps = 4,
    Microsoft_UI_Xaml_FontCapitals_Unicase = 5,
    Microsoft_UI_Xaml_FontCapitals_Titling = 6,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontEastAsianLanguage
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFontEastAsianLanguage
{
    Microsoft_UI_Xaml_FontEastAsianLanguage_Normal = 0,
    Microsoft_UI_Xaml_FontEastAsianLanguage_HojoKanji = 1,
    Microsoft_UI_Xaml_FontEastAsianLanguage_Jis04 = 2,
    Microsoft_UI_Xaml_FontEastAsianLanguage_Jis78 = 3,
    Microsoft_UI_Xaml_FontEastAsianLanguage_Jis83 = 4,
    Microsoft_UI_Xaml_FontEastAsianLanguage_Jis90 = 5,
    Microsoft_UI_Xaml_FontEastAsianLanguage_NlcKanji = 6,
    Microsoft_UI_Xaml_FontEastAsianLanguage_Simplified = 7,
    Microsoft_UI_Xaml_FontEastAsianLanguage_Traditional = 8,
    Microsoft_UI_Xaml_FontEastAsianLanguage_TraditionalNames = 9,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontEastAsianWidths
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFontEastAsianWidths
{
    Microsoft_UI_Xaml_FontEastAsianWidths_Normal = 0,
    Microsoft_UI_Xaml_FontEastAsianWidths_Full = 1,
    Microsoft_UI_Xaml_FontEastAsianWidths_Half = 2,
    Microsoft_UI_Xaml_FontEastAsianWidths_Proportional = 3,
    Microsoft_UI_Xaml_FontEastAsianWidths_Quarter = 4,
    Microsoft_UI_Xaml_FontEastAsianWidths_Third = 5,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontFraction
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFontFraction
{
    Microsoft_UI_Xaml_FontFraction_Normal = 0,
    Microsoft_UI_Xaml_FontFraction_Stacked = 1,
    Microsoft_UI_Xaml_FontFraction_Slashed = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontNumeralAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFontNumeralAlignment
{
    Microsoft_UI_Xaml_FontNumeralAlignment_Normal = 0,
    Microsoft_UI_Xaml_FontNumeralAlignment_Proportional = 1,
    Microsoft_UI_Xaml_FontNumeralAlignment_Tabular = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontNumeralStyle
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFontNumeralStyle
{
    Microsoft_UI_Xaml_FontNumeralStyle_Normal = 0,
    Microsoft_UI_Xaml_FontNumeralStyle_Lining = 1,
    Microsoft_UI_Xaml_FontNumeralStyle_OldStyle = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.FontVariants
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CFontVariants
{
    Microsoft_UI_Xaml_FontVariants_Normal = 0,
    Microsoft_UI_Xaml_FontVariants_Superscript = 1,
    Microsoft_UI_Xaml_FontVariants_Subscript = 2,
    Microsoft_UI_Xaml_FontVariants_Ordinal = 3,
    Microsoft_UI_Xaml_FontVariants_Inferior = 4,
    Microsoft_UI_Xaml_FontVariants_Ruby = 5,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.GridUnitType
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CGridUnitType
{
    Microsoft_UI_Xaml_GridUnitType_Auto = 0,
    Microsoft_UI_Xaml_GridUnitType_Pixel = 1,
    Microsoft_UI_Xaml_GridUnitType_Star = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.HorizontalAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CHorizontalAlignment
{
    Microsoft_UI_Xaml_HorizontalAlignment_Left = 0,
    Microsoft_UI_Xaml_HorizontalAlignment_Center = 1,
    Microsoft_UI_Xaml_HorizontalAlignment_Right = 2,
    Microsoft_UI_Xaml_HorizontalAlignment_Stretch = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.LineStackingStrategy
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CLineStackingStrategy
{
    Microsoft_UI_Xaml_LineStackingStrategy_MaxHeight = 0,
    Microsoft_UI_Xaml_LineStackingStrategy_BlockLineHeight = 1,
    Microsoft_UI_Xaml_LineStackingStrategy_BaselineToBaseline = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.OpticalMarginAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_COpticalMarginAlignment
{
    Microsoft_UI_Xaml_OpticalMarginAlignment_None = 0,
    Microsoft_UI_Xaml_OpticalMarginAlignment_TrimSideBearings = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CTextAlignment
{
    Microsoft_UI_Xaml_TextAlignment_Center = 0,
    Microsoft_UI_Xaml_TextAlignment_Left = 1,
    Microsoft_UI_Xaml_TextAlignment_Start = 1,
    Microsoft_UI_Xaml_TextAlignment_Right = 2,
    Microsoft_UI_Xaml_TextAlignment_End = 2,
    Microsoft_UI_Xaml_TextAlignment_Justify = 3,
    Microsoft_UI_Xaml_TextAlignment_DetectFromContent = 4,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextLineBounds
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CTextLineBounds
{
    Microsoft_UI_Xaml_TextLineBounds_Full = 0,
    Microsoft_UI_Xaml_TextLineBounds_TrimToCapHeight = 1,
    Microsoft_UI_Xaml_TextLineBounds_TrimToBaseline = 2,
    Microsoft_UI_Xaml_TextLineBounds_Tight = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextReadingOrder
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CTextReadingOrder
{
    Microsoft_UI_Xaml_TextReadingOrder_Default = 0,
    Microsoft_UI_Xaml_TextReadingOrder_UseFlowDirection = 0,
    Microsoft_UI_Xaml_TextReadingOrder_DetectFromContent = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextTrimming
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CTextTrimming
{
    Microsoft_UI_Xaml_TextTrimming_None = 0,
    Microsoft_UI_Xaml_TextTrimming_CharacterEllipsis = 1,
    Microsoft_UI_Xaml_TextTrimming_WordEllipsis = 2,
    Microsoft_UI_Xaml_TextTrimming_Clip = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TextWrapping
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CTextWrapping
{
    Microsoft_UI_Xaml_TextWrapping_NoWrap = 1,
    Microsoft_UI_Xaml_TextWrapping_Wrap = 2,
    Microsoft_UI_Xaml_TextWrapping_WrapWholeWords = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TransitionParent
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CTransitionParent
{
    Microsoft_UI_Xaml_TransitionParent_ParentToRoot = 0,
    Microsoft_UI_Xaml_TransitionParent_ParentToCommonParent = 1,
    Microsoft_UI_Xaml_TransitionParent_ParentToGrandParent = 2,
};
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.TransitionTrigger
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CTransitionTrigger
{
    Microsoft_UI_Xaml_TransitionTrigger_Load = 0,
    Microsoft_UI_Xaml_TransitionTrigger_Layout = 1,
    Microsoft_UI_Xaml_TransitionTrigger_Unload = 2,
    Microsoft_UI_Xaml_TransitionTrigger_Reparent = 3,
};
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.Vector3TransitionComponents
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
/* [v1_enum, flags, contract] */
enum __x_Microsoft_CUI_CXaml_CVector3TransitionComponents
{
    Microsoft_UI_Xaml_Vector3TransitionComponents_X = 0x1,
    Microsoft_UI_Xaml_Vector3TransitionComponents_Y = 0x2,
    Microsoft_UI_Xaml_Vector3TransitionComponents_Z = 0x4,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Struct Microsoft.UI.Xaml.VerticalAlignment
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CVerticalAlignment
{
    Microsoft_UI_Xaml_VerticalAlignment_Top = 0,
    Microsoft_UI_Xaml_VerticalAlignment_Center = 1,
    Microsoft_UI_Xaml_VerticalAlignment_Bottom = 2,
    Microsoft_UI_Xaml_VerticalAlignment_Stretch = 3,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.Visibility
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CVisibility
{
    Microsoft_UI_Xaml_Visibility_Visible = 0,
    Microsoft_UI_Xaml_Visibility_Collapsed = 1,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.WindowActivationState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */

#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
/* [v1_enum, contract] */
enum __x_Microsoft_CUI_CXaml_CWindowActivationState
{
    Microsoft_UI_Xaml_WindowActivationState_CodeActivated = 0,
    Microsoft_UI_Xaml_WindowActivationState_Deactivated = 1,
    Microsoft_UI_Xaml_WindowActivationState_PointerActivated = 2,
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.CornerRadius
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/* [contract] */
struct __x_Microsoft_CUI_CXaml_CCornerRadius
{
    DOUBLE TopLeft;
    DOUBLE TopRight;
    DOUBLE BottomRight;
    DOUBLE BottomLeft;
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.Duration
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/* [contract] */
struct __x_Microsoft_CUI_CXaml_CDuration
{
    __x_ABI_CWindows_CFoundation_CTimeSpan TimeSpan;
    __x_Microsoft_CUI_CXaml_CDurationType Type;
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.GridLength
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/* [contract] */
struct __x_Microsoft_CUI_CXaml_CGridLength
{
    DOUBLE Value;
    __x_Microsoft_CUI_CXaml_CGridUnitType GridUnitType;
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Struct Microsoft.UI.Xaml.Thickness
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

/* [contract] */
struct __x_Microsoft_CUI_CXaml_CThickness
{
    DOUBLE Left;
    DOUBLE Top;
    DOUBLE Right;
    DOUBLE Bottom;
};
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.ApplicationInitializationCallback
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__
/* [object, uuid("D8EEF1C9-1234-56F1-9963-45DD9C80A661"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams * p
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackVtbl;

interface __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_Invoke(This,p) \
    ( (This)->lpVtbl->Invoke(This,p) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.BindingFailedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__
/* [object, uuid("A3160AB0-A8A9-5F38-AF17-5CD91A2B33F5"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.CreateDefaultValueCallback
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__
/* [object, uuid("7F808C05-2AC4-5AD9-AC8A-26890333D81E"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallbackVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback * This,
        /* [retval, out] */IInspectable * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallbackVtbl;

interface __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallbackVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_Invoke(This,result) \
    ( (This)->lpVtbl->Invoke(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.DependencyPropertyChangedCallback
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__
/* [object, uuid("F055BB21-219B-5B0C-805D-BCAEDAE15458"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl;

interface __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallbackVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_Invoke(This,sender,dp) \
    ( (This)->lpVtbl->Invoke(This,sender,dp) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.DependencyPropertyChangedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__
/* [object, uuid("4BE8DC75-373D-5F4E-A0B4-54B9EEAFB4A9"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.DragEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__
/* [object, uuid("277AFC83-CB67-56C8-B601-1B9C0F1C3D32"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDragEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIDragEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDragEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDragEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CIDragEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDragEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDragEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDragEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDragEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDragEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.EnteredBackgroundEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__
/* [object, uuid("F9A5148D-8F72-553F-B479-21B68610899D"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CIEnteredBackgroundEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.ExceptionRoutedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__
/* [object, uuid("45FBB85D-54F9-5A2A-8A38-00A3B7761F96"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.LeavingBackgroundEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__
/* [object, uuid("3D723B94-FBCF-5C0D-B6EF-5062E68BF9F8"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CILeavingBackgroundEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.PropertyChangedCallback
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__
/* [object, uuid("5FD9243A-2422-53C9-8D6F-F1BA1A0BBA9A"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIPropertyChangedCallbackVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * d,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIPropertyChangedCallbackVtbl;

interface __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIPropertyChangedCallbackVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_Invoke(This,d,e) \
    ( (This)->lpVtbl->Invoke(This,d,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyChangedCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyChangedCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.RoutedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__
/* [object, uuid("DAE23D85-69CA-5BDF-805B-6161A3A215CC"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIRoutedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIRoutedEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CIRoutedEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIRoutedEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CIRoutedEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIRoutedEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIRoutedEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRoutedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.SizeChangedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__
/* [object, uuid("8D7B1A58-14C6-51C9-892C-9FCCE368E77D"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISizeChangedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISizeChangedEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISizeChangedEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISizeChangedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISizeChangedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.SuspendingEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__
/* [object, uuid("E4BEEC79-95FD-5841-ACEB-01A8A1FB73D0"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISuspendingEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISuspendingEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISuspendingEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISuspendingEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CISuspendingEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CISuspendingEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISuspendingEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CISuspendingEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISuspendingEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISuspendingEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISuspendingEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISuspendingEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISuspendingEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISuspendingEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISuspendingEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.UnhandledExceptionEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__
/* [object, uuid("3427C1B6-5ECA-5631-84B8-5BAE732FB67F"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Delegate Microsoft.UI.Xaml.VisualStateChangedEventHandler
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__
/* [object, uuid("CDBBD854-0539-5BFF-B448-33193D2F41B8"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject);

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler * This);

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler * This);
HRESULT ( STDMETHODCALLTYPE *Invoke )(
        __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler * This,
        /* [in] */IInspectable * sender,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * e
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandlerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_Invoke(This,sender,e) \
    ( (This)->lpVtbl->Invoke(This,sender,e) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IAdaptiveTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.AdaptiveTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IAdaptiveTrigger[] = L"Microsoft.UI.Xaml.IAdaptiveTrigger";
/* [object, uuid("B2B18AE8-48D9-5A1D-A555-6685DDD4DA80"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinWindowWidth )(
        __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MinWindowWidth )(
        __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinWindowHeight )(
        __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MinWindowHeight )(
        __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * This,
        /* [in] */DOUBLE value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerVtbl;

interface __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_get_MinWindowWidth(This,value) \
    ( (This)->lpVtbl->get_MinWindowWidth(This,value) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_put_MinWindowWidth(This,value) \
    ( (This)->lpVtbl->put_MinWindowWidth(This,value) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_get_MinWindowHeight(This,value) \
    ( (This)->lpVtbl->get_MinWindowHeight(This,value) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_put_MinWindowHeight(This,value) \
    ( (This)->lpVtbl->put_MinWindowHeight(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIAdaptiveTrigger;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTrigger_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IAdaptiveTriggerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.AdaptiveTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IAdaptiveTriggerFactory[] = L"Microsoft.UI.Xaml.IAdaptiveTriggerFactory";
/* [object, uuid("9C9560BB-4099-5175-9250-45A15E753DA8"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIAdaptiveTrigger * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IAdaptiveTriggerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.AdaptiveTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IAdaptiveTriggerStatics[] = L"Microsoft.UI.Xaml.IAdaptiveTriggerStatics";
/* [object, uuid("E7A3547F-C077-5F20-AAB1-D16C30D9D37F"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinWindowWidthProperty )(
        __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinWindowHeightProperty )(
        __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_get_MinWindowWidthProperty(This,value) \
    ( (This)->lpVtbl->get_MinWindowWidthProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_get_MinWindowHeightProperty(This,value) \
    ( (This)->lpVtbl->get_MinWindowHeightProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIAdaptiveTriggerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplication
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Application
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplication_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplication_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplication[] = L"Microsoft.UI.Xaml.IApplication";
/* [object, uuid("9BC9D617-B5F8-5AD8-80C1-93D8B82425F9"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIApplicationVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplication * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplication * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplication * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplication * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplication * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplication * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Resources )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIResourceDictionary * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Resources )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIResourceDictionary * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DebugSettings )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDebugSettings * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RequestedTheme )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CApplicationTheme * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RequestedTheme )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CApplicationTheme value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualKind )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CFocusVisualKind * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FocusVisualKind )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CFocusVisualKind value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RequiresPointerMode )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CApplicationRequiresPointerMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RequiresPointerMode )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CApplicationRequiresPointerMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HighContrastAdjustment )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CApplicationHighContrastAdjustment * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_HighContrastAdjustment )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CApplicationHighContrastAdjustment value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_UnhandledException )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_UnhandledException )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Suspending )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CISuspendingEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Suspending )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Resuming )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__FIEventHandler_1_IInspectable * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Resuming )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_LeavingBackground )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CILeavingBackgroundEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_LeavingBackground )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_EnteredBackground )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIEnteredBackgroundEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_EnteredBackground )(
        __x_Microsoft_CUI_CXaml_CIApplication * This,
        /* [in] */EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Exit )(
        __x_Microsoft_CUI_CXaml_CIApplication * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIApplicationVtbl;

interface __x_Microsoft_CUI_CXaml_CIApplication
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIApplicationVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIApplication_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIApplication_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIApplication_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIApplication_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIApplication_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIApplication_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIApplication_get_Resources(This,value) \
    ( (This)->lpVtbl->get_Resources(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_put_Resources(This,value) \
    ( (This)->lpVtbl->put_Resources(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_get_DebugSettings(This,value) \
    ( (This)->lpVtbl->get_DebugSettings(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_get_RequestedTheme(This,value) \
    ( (This)->lpVtbl->get_RequestedTheme(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_put_RequestedTheme(This,value) \
    ( (This)->lpVtbl->put_RequestedTheme(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_get_FocusVisualKind(This,value) \
    ( (This)->lpVtbl->get_FocusVisualKind(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_put_FocusVisualKind(This,value) \
    ( (This)->lpVtbl->put_FocusVisualKind(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_get_RequiresPointerMode(This,value) \
    ( (This)->lpVtbl->get_RequiresPointerMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_put_RequiresPointerMode(This,value) \
    ( (This)->lpVtbl->put_RequiresPointerMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_get_HighContrastAdjustment(This,value) \
    ( (This)->lpVtbl->get_HighContrastAdjustment(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_put_HighContrastAdjustment(This,value) \
    ( (This)->lpVtbl->put_HighContrastAdjustment(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplication_add_UnhandledException(This,handler,token) \
    ( (This)->lpVtbl->add_UnhandledException(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_remove_UnhandledException(This,token) \
    ( (This)->lpVtbl->remove_UnhandledException(This,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_add_Suspending(This,handler,token) \
    ( (This)->lpVtbl->add_Suspending(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_remove_Suspending(This,token) \
    ( (This)->lpVtbl->remove_Suspending(This,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_add_Resuming(This,handler,token) \
    ( (This)->lpVtbl->add_Resuming(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_remove_Resuming(This,token) \
    ( (This)->lpVtbl->remove_Resuming(This,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_add_LeavingBackground(This,handler,token) \
    ( (This)->lpVtbl->add_LeavingBackground(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_remove_LeavingBackground(This,token) \
    ( (This)->lpVtbl->remove_LeavingBackground(This,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_add_EnteredBackground(This,handler,token) \
    ( (This)->lpVtbl->add_EnteredBackground(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_remove_EnteredBackground(This,token) \
    ( (This)->lpVtbl->remove_EnteredBackground(This,token) )

#define __x_Microsoft_CUI_CXaml_CIApplication_Exit(This) \
    ( (This)->lpVtbl->Exit(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplication;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplication_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplicationFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Application
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplicationFactory[] = L"Microsoft.UI.Xaml.IApplicationFactory";
/* [object, uuid("9FD96657-5294-5A65-A1DB-4FEA143597DA"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIApplicationFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIApplicationFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIApplication * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIApplicationFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIApplicationFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIApplicationFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIApplicationFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIApplicationFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIApplicationFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIApplicationFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIApplicationFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplicationInitializationCallbackParams
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ApplicationInitializationCallbackParams
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplicationInitializationCallbackParams[] = L"Microsoft.UI.Xaml.IApplicationInitializationCallbackParams";
/* [object, uuid("1B1906EA-5B7B-5876-81AB-7C2281AC3D20"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl;

interface __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParamsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationInitializationCallbackParams_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplicationOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Application
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplicationOverrides[] = L"Microsoft.UI.Xaml.IApplicationOverrides";
/* [object, uuid("3785B209-37BB-5B49-B3C6-6974DCDC4787"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIApplicationOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnActivated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CActivation_CIActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnLaunched )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnFileActivated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CActivation_CIFileActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnSearchActivated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CActivation_CISearchActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnShareTargetActivated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CActivation_CIShareTargetActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnFileOpenPickerActivated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CActivation_CIFileOpenPickerActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnFileSavePickerActivated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CActivation_CIFileSavePickerActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnCachedFileUpdaterActivated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CActivation_CICachedFileUpdaterActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnBackgroundActivated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CActivation_CIBackgroundActivatedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnWindowCreated )(
        __x_Microsoft_CUI_CXaml_CIApplicationOverrides * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs * args
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIApplicationOverridesVtbl;

interface __x_Microsoft_CUI_CXaml_CIApplicationOverrides
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIApplicationOverridesVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnActivated(This,args) \
    ( (This)->lpVtbl->OnActivated(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnLaunched(This,args) \
    ( (This)->lpVtbl->OnLaunched(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnFileActivated(This,args) \
    ( (This)->lpVtbl->OnFileActivated(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnSearchActivated(This,args) \
    ( (This)->lpVtbl->OnSearchActivated(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnShareTargetActivated(This,args) \
    ( (This)->lpVtbl->OnShareTargetActivated(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnFileOpenPickerActivated(This,args) \
    ( (This)->lpVtbl->OnFileOpenPickerActivated(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnFileSavePickerActivated(This,args) \
    ( (This)->lpVtbl->OnFileSavePickerActivated(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnCachedFileUpdaterActivated(This,args) \
    ( (This)->lpVtbl->OnCachedFileUpdaterActivated(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnBackgroundActivated(This,args) \
    ( (This)->lpVtbl->OnBackgroundActivated(This,args) )

#define __x_Microsoft_CUI_CXaml_CIApplicationOverrides_OnWindowCreated(This,args) \
    ( (This)->lpVtbl->OnWindowCreated(This,args) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationOverrides;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IApplicationStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Application
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IApplicationStatics[] = L"Microsoft.UI.Xaml.IApplicationStatics";
/* [object, uuid("4E0D09F5-4358-512C-A987-503B52848E95"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIApplicationStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIApplicationStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Current )(
        __x_Microsoft_CUI_CXaml_CIApplicationStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIApplication * * value
        );
    HRESULT ( STDMETHODCALLTYPE *Start )(
        __x_Microsoft_CUI_CXaml_CIApplicationStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback  * callback
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *LoadComponent )(
        __x_Microsoft_CUI_CXaml_CIApplicationStatics * This,
        /* [in] */IInspectable * component,
        /* [in] */__x_ABI_CWindows_CFoundation_CIUriRuntimeClass * resourceLocator
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *LoadComponentWithResourceLocation )(
        __x_Microsoft_CUI_CXaml_CIApplicationStatics * This,
        /* [in] */IInspectable * component,
        /* [in] */__x_ABI_CWindows_CFoundation_CIUriRuntimeClass * resourceLocator,
        /* [in] */__x_Microsoft_CUI_CXaml_CControls_CPrimitives_CComponentResourceLocation componentResourceLocation
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIApplicationStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIApplicationStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIApplicationStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_get_Current(This,value) \
    ( (This)->lpVtbl->get_Current(This,value) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_Start(This,callback) \
    ( (This)->lpVtbl->Start(This,callback) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_LoadComponent(This,component,resourceLocator) \
    ( (This)->lpVtbl->LoadComponent(This,component,resourceLocator) )

#define __x_Microsoft_CUI_CXaml_CIApplicationStatics_LoadComponentWithResourceLocation(This,component,resourceLocator,componentResourceLocation) \
    ( (This)->lpVtbl->LoadComponentWithResourceLocation(This,component,resourceLocator,componentResourceLocation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIApplicationStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIApplicationStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IAtlasRequestCallback
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IAtlasRequestCallback[] = L"Microsoft.UI.Xaml.IAtlasRequestCallback";
/* [object, uuid("15645012-8F3F-5090-B584-DF078FCC509A"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIAtlasRequestCallbackVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *AtlasRequest )(
        __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback * This,
        /* [in] */UINT32 width,
        /* [in] */UINT32 height,
        /* [in] */__x_ABI_CWindows_CGraphics_CDirectX_CDirectXPixelFormat pixelFormat,
        /* [retval, out] */boolean * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIAtlasRequestCallbackVtbl;

interface __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIAtlasRequestCallbackVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_AtlasRequest(This,width,height,pixelFormat,result) \
    ( (This)->lpVtbl->AtlasRequest(This,width,height,pixelFormat,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIAtlasRequestCallback;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIAtlasRequestCallback_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IBindingFailedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BindingFailedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBindingFailedEventArgs[] = L"Microsoft.UI.Xaml.IBindingFailedEventArgs";
/* [object, uuid("A7BF50F3-DBC0-5B44-BE74-56E8F80FD716"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Message )(
        __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs * This,
        /* [retval, out] */HSTRING * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_get_Message(This,value) \
    ( (This)->lpVtbl->get_Message(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBindingFailedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IBringIntoViewOptions
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BringIntoViewOptions
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBringIntoViewOptions[] = L"Microsoft.UI.Xaml.IBringIntoViewOptions";
/* [object, uuid("EEB4A447-EB9E-5003-A479-B9E3A886B708"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIBringIntoViewOptionsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AnimationDesired )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AnimationDesired )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TargetRect )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [retval, out] */__FIReference_1_Windows__CFoundation__CRect * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TargetRect )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [in] */__FIReference_1_Windows__CFoundation__CRect * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignmentRatio )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignmentRatio )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignmentRatio )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignmentRatio )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_HorizontalOffset )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_VerticalOffset )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * This,
        /* [in] */DOUBLE value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIBringIntoViewOptionsVtbl;

interface __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIBringIntoViewOptionsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_get_AnimationDesired(This,value) \
    ( (This)->lpVtbl->get_AnimationDesired(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_put_AnimationDesired(This,value) \
    ( (This)->lpVtbl->put_AnimationDesired(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_get_TargetRect(This,value) \
    ( (This)->lpVtbl->get_TargetRect(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_put_TargetRect(This,value) \
    ( (This)->lpVtbl->put_TargetRect(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_get_HorizontalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->get_HorizontalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_put_HorizontalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->put_HorizontalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_get_VerticalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->get_VerticalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_put_VerticalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->put_VerticalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_get_HorizontalOffset(This,value) \
    ( (This)->lpVtbl->get_HorizontalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_put_HorizontalOffset(This,value) \
    ( (This)->lpVtbl->put_HorizontalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_get_VerticalOffset(This,value) \
    ( (This)->lpVtbl->get_VerticalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_put_VerticalOffset(This,value) \
    ( (This)->lpVtbl->put_VerticalOffset(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBringIntoViewOptions;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBringIntoViewOptions_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IBringIntoViewRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBringIntoViewRequestedEventArgs[] = L"Microsoft.UI.Xaml.IBringIntoViewRequestedEventArgs";
/* [object, uuid("807DE8F9-B1DC-5A63-8101-5EE966841A27"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TargetElement )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIUIElement * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TargetElement )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AnimationDesired )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AnimationDesired )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TargetRect )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TargetRect )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignmentRatio )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignmentRatio )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HorizontalOffset )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_HorizontalOffset )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VerticalOffset )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_VerticalOffset )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_TargetElement(This,value) \
    ( (This)->lpVtbl->get_TargetElement(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_TargetElement(This,value) \
    ( (This)->lpVtbl->put_TargetElement(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_AnimationDesired(This,value) \
    ( (This)->lpVtbl->get_AnimationDesired(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_AnimationDesired(This,value) \
    ( (This)->lpVtbl->put_AnimationDesired(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_TargetRect(This,value) \
    ( (This)->lpVtbl->get_TargetRect(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_TargetRect(This,value) \
    ( (This)->lpVtbl->put_TargetRect(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_HorizontalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->get_HorizontalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_VerticalAlignmentRatio(This,value) \
    ( (This)->lpVtbl->get_VerticalAlignmentRatio(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_HorizontalOffset(This,value) \
    ( (This)->lpVtbl->get_HorizontalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_HorizontalOffset(This,value) \
    ( (This)->lpVtbl->put_HorizontalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_VerticalOffset(This,value) \
    ( (This)->lpVtbl->get_VerticalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_VerticalOffset(This,value) \
    ( (This)->lpVtbl->put_VerticalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IBrushTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BrushTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBrushTransition[] = L"Microsoft.UI.Xaml.IBrushTransition";
/* [object, uuid("A996A7BA-4567-5963-A112-76E3C0000204"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIBrushTransitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransition * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransition * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransition * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransition * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransition * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransition * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Duration )(
        __x_Microsoft_CUI_CXaml_CIBrushTransition * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Duration )(
        __x_Microsoft_CUI_CXaml_CIBrushTransition * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIBrushTransitionVtbl;

interface __x_Microsoft_CUI_CXaml_CIBrushTransition
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIBrushTransitionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIBrushTransition_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransition_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransition_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransition_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransition_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransition_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransition_get_Duration(This,value) \
    ( (This)->lpVtbl->get_Duration(This,value) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransition_put_Duration(This,value) \
    ( (This)->lpVtbl->put_Duration(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBrushTransition;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBrushTransition_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IBrushTransitionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.BrushTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IBrushTransitionFactory[] = L"Microsoft.UI.Xaml.IBrushTransitionFactory";
/* [object, uuid("13735998-C3B6-5C24-B40A-7B166A6FFC2C"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIBrushTransitionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIBrushTransition * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIBrushTransitionFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIBrushTransitionFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIBrushTransitionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIBrushTransitionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IColorPaletteResources
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ColorPaletteResources
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IColorPaletteResources[] = L"Microsoft.UI.Xaml.IColorPaletteResources";
/* [object, uuid("1903A03C-1750-54FE-A434-14B227CBE701"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AltHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AltHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AltLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AltLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AltMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AltMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AltMediumHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AltMediumHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AltMediumLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AltMediumLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BaseHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BaseHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BaseLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BaseLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BaseMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BaseMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BaseMediumHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BaseMediumHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BaseMediumLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BaseMediumLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeAltLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeAltLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeBlackHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeBlackHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeBlackLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeBlackLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeBlackMediumLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeBlackMediumLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeBlackMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeBlackMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeDisabledHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeDisabledHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeDisabledLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeDisabledLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeHigh )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeMediumLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeMediumLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeWhite )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeWhite )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ChromeGray )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ChromeGray )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ListLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ListLow )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ListMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ListMedium )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ErrorText )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ErrorText )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Accent )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [retval, out] */__FIReference_1_Windows__CUI__CColor * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Accent )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResources * This,
        /* [in] */__FIReference_1_Windows__CUI__CColor * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesVtbl;

interface __x_Microsoft_CUI_CXaml_CIColorPaletteResources
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_AltHigh(This,value) \
    ( (This)->lpVtbl->get_AltHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_AltHigh(This,value) \
    ( (This)->lpVtbl->put_AltHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_AltLow(This,value) \
    ( (This)->lpVtbl->get_AltLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_AltLow(This,value) \
    ( (This)->lpVtbl->put_AltLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_AltMedium(This,value) \
    ( (This)->lpVtbl->get_AltMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_AltMedium(This,value) \
    ( (This)->lpVtbl->put_AltMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_AltMediumHigh(This,value) \
    ( (This)->lpVtbl->get_AltMediumHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_AltMediumHigh(This,value) \
    ( (This)->lpVtbl->put_AltMediumHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_AltMediumLow(This,value) \
    ( (This)->lpVtbl->get_AltMediumLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_AltMediumLow(This,value) \
    ( (This)->lpVtbl->put_AltMediumLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_BaseHigh(This,value) \
    ( (This)->lpVtbl->get_BaseHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_BaseHigh(This,value) \
    ( (This)->lpVtbl->put_BaseHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_BaseLow(This,value) \
    ( (This)->lpVtbl->get_BaseLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_BaseLow(This,value) \
    ( (This)->lpVtbl->put_BaseLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_BaseMedium(This,value) \
    ( (This)->lpVtbl->get_BaseMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_BaseMedium(This,value) \
    ( (This)->lpVtbl->put_BaseMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_BaseMediumHigh(This,value) \
    ( (This)->lpVtbl->get_BaseMediumHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_BaseMediumHigh(This,value) \
    ( (This)->lpVtbl->put_BaseMediumHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_BaseMediumLow(This,value) \
    ( (This)->lpVtbl->get_BaseMediumLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_BaseMediumLow(This,value) \
    ( (This)->lpVtbl->put_BaseMediumLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeAltLow(This,value) \
    ( (This)->lpVtbl->get_ChromeAltLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeAltLow(This,value) \
    ( (This)->lpVtbl->put_ChromeAltLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeBlackHigh(This,value) \
    ( (This)->lpVtbl->get_ChromeBlackHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeBlackHigh(This,value) \
    ( (This)->lpVtbl->put_ChromeBlackHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeBlackLow(This,value) \
    ( (This)->lpVtbl->get_ChromeBlackLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeBlackLow(This,value) \
    ( (This)->lpVtbl->put_ChromeBlackLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeBlackMediumLow(This,value) \
    ( (This)->lpVtbl->get_ChromeBlackMediumLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeBlackMediumLow(This,value) \
    ( (This)->lpVtbl->put_ChromeBlackMediumLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeBlackMedium(This,value) \
    ( (This)->lpVtbl->get_ChromeBlackMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeBlackMedium(This,value) \
    ( (This)->lpVtbl->put_ChromeBlackMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeDisabledHigh(This,value) \
    ( (This)->lpVtbl->get_ChromeDisabledHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeDisabledHigh(This,value) \
    ( (This)->lpVtbl->put_ChromeDisabledHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeDisabledLow(This,value) \
    ( (This)->lpVtbl->get_ChromeDisabledLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeDisabledLow(This,value) \
    ( (This)->lpVtbl->put_ChromeDisabledLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeHigh(This,value) \
    ( (This)->lpVtbl->get_ChromeHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeHigh(This,value) \
    ( (This)->lpVtbl->put_ChromeHigh(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeLow(This,value) \
    ( (This)->lpVtbl->get_ChromeLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeLow(This,value) \
    ( (This)->lpVtbl->put_ChromeLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeMedium(This,value) \
    ( (This)->lpVtbl->get_ChromeMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeMedium(This,value) \
    ( (This)->lpVtbl->put_ChromeMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeMediumLow(This,value) \
    ( (This)->lpVtbl->get_ChromeMediumLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeMediumLow(This,value) \
    ( (This)->lpVtbl->put_ChromeMediumLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeWhite(This,value) \
    ( (This)->lpVtbl->get_ChromeWhite(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeWhite(This,value) \
    ( (This)->lpVtbl->put_ChromeWhite(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ChromeGray(This,value) \
    ( (This)->lpVtbl->get_ChromeGray(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ChromeGray(This,value) \
    ( (This)->lpVtbl->put_ChromeGray(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ListLow(This,value) \
    ( (This)->lpVtbl->get_ListLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ListLow(This,value) \
    ( (This)->lpVtbl->put_ListLow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ListMedium(This,value) \
    ( (This)->lpVtbl->get_ListMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ListMedium(This,value) \
    ( (This)->lpVtbl->put_ListMedium(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_ErrorText(This,value) \
    ( (This)->lpVtbl->get_ErrorText(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_ErrorText(This,value) \
    ( (This)->lpVtbl->put_ErrorText(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_get_Accent(This,value) \
    ( (This)->lpVtbl->get_Accent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResources_put_Accent(This,value) \
    ( (This)->lpVtbl->put_Accent(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIColorPaletteResources;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIColorPaletteResources_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IColorPaletteResourcesFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ColorPaletteResources
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IColorPaletteResourcesFactory[] = L"Microsoft.UI.Xaml.IColorPaletteResourcesFactory";
/* [object, uuid("32FDE185-8544-59C0-9E0A-E6E0BAD9EDCF"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIColorPaletteResources * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIColorPaletteResourcesFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ICornerRadiusHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.CornerRadiusHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ICornerRadiusHelper[] = L"Microsoft.UI.Xaml.ICornerRadiusHelper";
/* [object, uuid("DFCC382D-CFA8-5614-A35A-4091D1A81C9E"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CICornerRadiusHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelper * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelper * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelper * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelper * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelper * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelper * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CICornerRadiusHelperVtbl;

interface __x_Microsoft_CUI_CXaml_CICornerRadiusHelper
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CICornerRadiusHelperVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelper_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelper_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelper_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelper_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelper_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelper_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CICornerRadiusHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CICornerRadiusHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ICornerRadiusHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.CornerRadiusHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ICornerRadiusHelperStatics[] = L"Microsoft.UI.Xaml.ICornerRadiusHelperStatics";
/* [object, uuid("77352882-894B-5DED-B54C-A86105E4E068"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *FromRadii )(
        __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics * This,
        /* [in] */DOUBLE topLeft,
        /* [in] */DOUBLE topRight,
        /* [in] */DOUBLE bottomRight,
        /* [in] */DOUBLE bottomLeft,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CCornerRadius * result
        );
    HRESULT ( STDMETHODCALLTYPE *FromUniformRadius )(
        __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics * This,
        /* [in] */DOUBLE uniformRadius,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CCornerRadius * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_FromRadii(This,topLeft,topRight,bottomRight,bottomLeft,result) \
    ( (This)->lpVtbl->FromRadii(This,topLeft,topRight,bottomRight,bottomLeft,result) )

#define __x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_FromUniformRadius(This,uniformRadius,result) \
    ( (This)->lpVtbl->FromUniformRadius(This,uniformRadius,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CICornerRadiusHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataContextChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataContextChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataContextChangedEventArgs[] = L"Microsoft.UI.Xaml.IDataContextChangedEventArgs";
/* [object, uuid("A1BE80F4-CF83-5022-B113-9233F1D4FAFA"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NewValue )(
        __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_get_NewValue(This,value) \
    ( (This)->lpVtbl->get_NewValue(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataContextChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplate
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplate[] = L"Microsoft.UI.Xaml.IDataTemplate";
/* [object, uuid("08FA70FA-EE75-5E92-A101-F52D0E1E9FAB"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDataTemplateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *LoadContent )(
        __x_Microsoft_CUI_CXaml_CIDataTemplate * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDataTemplateVtbl;

interface __x_Microsoft_CUI_CXaml_CIDataTemplate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDataTemplateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDataTemplate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplate_LoadContent(This,result) \
    ( (This)->lpVtbl->LoadContent(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateExtension
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateExtension[] = L"Microsoft.UI.Xaml.IDataTemplateExtension";
/* [object, uuid("351E63C4-8FA3-5CC3-B073-7F84BAA6485D"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDataTemplateExtensionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *ResetTemplate )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This
        );
    HRESULT ( STDMETHODCALLTYPE *ProcessBinding )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This,
        /* [in] */UINT32 phase,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *ProcessBindings )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateExtension * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CControls_CIContainerContentChangingEventArgs * arg,
        /* [retval, out] */INT32 * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDataTemplateExtensionVtbl;

interface __x_Microsoft_CUI_CXaml_CIDataTemplateExtension
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDataTemplateExtensionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_ResetTemplate(This) \
    ( (This)->lpVtbl->ResetTemplate(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_ProcessBinding(This,phase,result) \
    ( (This)->lpVtbl->ProcessBinding(This,phase,result) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateExtension_ProcessBindings(This,arg,result) \
    ( (This)->lpVtbl->ProcessBindings(This,arg,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateExtension;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateExtension_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateFactory[] = L"Microsoft.UI.Xaml.IDataTemplateFactory";
/* [object, uuid("D8E8249D-305B-5CA5-ACF8-3E1BEFFD0219"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDataTemplateFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDataTemplate * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDataTemplateFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIDataTemplateFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDataTemplateFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDataTemplateFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateKey
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplateKey
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateKey[] = L"Microsoft.UI.Xaml.IDataTemplateKey";
/* [object, uuid("6E704A95-4B2F-5BA8-ADA5-1261C832BAED"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDataTemplateKeyVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKey * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKey * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKey * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKey * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKey * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKey * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DataType )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateKey * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DataType )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateKey * This,
        /* [in] */IInspectable * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDataTemplateKeyVtbl;

interface __x_Microsoft_CUI_CXaml_CIDataTemplateKey
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDataTemplateKeyVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey_get_DataType(This,value) \
    ( (This)->lpVtbl->get_DataType(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKey_put_DataType(This,value) \
    ( (This)->lpVtbl->put_DataType(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateKey;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateKey_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateKeyFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplateKey
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateKeyFactory[] = L"Microsoft.UI.Xaml.IDataTemplateKeyFactory";
/* [object, uuid("13B2F604-EEBC-5DAA-8A5B-460C4FABDEB7"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDataTemplateKey * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithType )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory * This,
        /* [in] */IInspectable * dataType,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDataTemplateKey * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_CreateInstanceWithType(This,dataType,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithType(This,dataType,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateKeyFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDataTemplateStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DataTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDataTemplateStatics[] = L"Microsoft.UI.Xaml.IDataTemplateStatics";
/* [object, uuid("CF6ADA69-4BF1-5F2D-8BDB-09EA1A26F975"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDataTemplateStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ExtensionInstanceProperty )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetExtensionInstance )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIFrameworkElement * element,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDataTemplateExtension * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetExtensionInstance )(
        __x_Microsoft_CUI_CXaml_CIDataTemplateStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIFrameworkElement * element,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDataTemplateExtension * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDataTemplateStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDataTemplateStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDataTemplateStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_get_ExtensionInstanceProperty(This,value) \
    ( (This)->lpVtbl->get_ExtensionInstanceProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_GetExtensionInstance(This,element,result) \
    ( (This)->lpVtbl->GetExtensionInstance(This,element,result) )

#define __x_Microsoft_CUI_CXaml_CIDataTemplateStatics_SetExtensionInstance(This,element,value) \
    ( (This)->lpVtbl->SetExtensionInstance(This,element,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDataTemplateStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDataTemplateStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDebugSettings
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DebugSettings
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDebugSettings[] = L"Microsoft.UI.Xaml.IDebugSettings";
/* [object, uuid("4004943B-2509-5476-BBA2-3FE05ECF615D"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDebugSettingsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDebugSettings * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDebugSettings * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_EnableFrameRateCounter )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_EnableFrameRateCounter )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsBindingTracingEnabled )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsBindingTracingEnabled )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsTextPerformanceVisualizationEnabled )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsTextPerformanceVisualizationEnabled )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FailFastOnErrors )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FailFastOnErrors )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [in] */boolean value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_BindingFailed )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIBindingFailedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_BindingFailed )(
        __x_Microsoft_CUI_CXaml_CIDebugSettings * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDebugSettingsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDebugSettings
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDebugSettingsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDebugSettings_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_get_EnableFrameRateCounter(This,value) \
    ( (This)->lpVtbl->get_EnableFrameRateCounter(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_put_EnableFrameRateCounter(This,value) \
    ( (This)->lpVtbl->put_EnableFrameRateCounter(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_get_IsBindingTracingEnabled(This,value) \
    ( (This)->lpVtbl->get_IsBindingTracingEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_put_IsBindingTracingEnabled(This,value) \
    ( (This)->lpVtbl->put_IsBindingTracingEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_get_IsTextPerformanceVisualizationEnabled(This,value) \
    ( (This)->lpVtbl->get_IsTextPerformanceVisualizationEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_put_IsTextPerformanceVisualizationEnabled(This,value) \
    ( (This)->lpVtbl->put_IsTextPerformanceVisualizationEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_get_FailFastOnErrors(This,value) \
    ( (This)->lpVtbl->get_FailFastOnErrors(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_put_FailFastOnErrors(This,value) \
    ( (This)->lpVtbl->put_FailFastOnErrors(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_add_BindingFailed(This,handler,token) \
    ( (This)->lpVtbl->add_BindingFailed(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIDebugSettings_remove_BindingFailed(This,token) \
    ( (This)->lpVtbl->remove_BindingFailed(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDebugSettings;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDebugSettings_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyObject
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyObject
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyObject[] = L"Microsoft.UI.Xaml.IDependencyObject";
/* [object, uuid("9FB92D6F-2CC3-5892-ABB3-45F6461EA7E4"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDependencyObjectVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetValue )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp,
        /* [retval, out] */IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetValue )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp,
        /* [in] */IInspectable * value
        );
    HRESULT ( STDMETHODCALLTYPE *ClearValue )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp
        );
    HRESULT ( STDMETHODCALLTYPE *ReadLocalValue )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp,
        /* [retval, out] */IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetAnimationBaseValue )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp,
        /* [retval, out] */IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RegisterPropertyChangedCallback )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedCallback  * callback,
        /* [retval, out] */INT64 * result
        );
    HRESULT ( STDMETHODCALLTYPE *UnregisterPropertyChangedCallback )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp,
        /* [in] */INT64 token
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Dispatcher )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CCore_CICoreDispatcher * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DispatcherQueue )(
        __x_Microsoft_CUI_CXaml_CIDependencyObject * This,
        /* [retval, out] */__x_Microsoft_CSystem_CIDispatcherQueue * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDependencyObjectVtbl;

interface __x_Microsoft_CUI_CXaml_CIDependencyObject
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDependencyObjectVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDependencyObject_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_GetValue(This,dp,result) \
    ( (This)->lpVtbl->GetValue(This,dp,result) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_SetValue(This,dp,value) \
    ( (This)->lpVtbl->SetValue(This,dp,value) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_ClearValue(This,dp) \
    ( (This)->lpVtbl->ClearValue(This,dp) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_ReadLocalValue(This,dp,result) \
    ( (This)->lpVtbl->ReadLocalValue(This,dp,result) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_GetAnimationBaseValue(This,dp,result) \
    ( (This)->lpVtbl->GetAnimationBaseValue(This,dp,result) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_RegisterPropertyChangedCallback(This,dp,callback,result) \
    ( (This)->lpVtbl->RegisterPropertyChangedCallback(This,dp,callback,result) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_UnregisterPropertyChangedCallback(This,dp,token) \
    ( (This)->lpVtbl->UnregisterPropertyChangedCallback(This,dp,token) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_get_Dispatcher(This,value) \
    ( (This)->lpVtbl->get_Dispatcher(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObject_get_DispatcherQueue(This,value) \
    ( (This)->lpVtbl->get_DispatcherQueue(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyObject;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyObject_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyObjectCollectionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyObjectCollection
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyObjectCollectionFactory[] = L"Microsoft.UI.Xaml.IDependencyObjectCollectionFactory";
/* [object, uuid("2A74EE43-90FD-5D61-9383-584EA8422B39"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__FIObservableVector_1_Microsoft__CUI__CXaml__CDependencyObject * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyObjectCollectionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyObjectFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyObject
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyObjectFactory[] = L"Microsoft.UI.Xaml.IDependencyObjectFactory";
/* [object, uuid("936B614C-475F-5D7D-B3F7-BF1FBEA28126"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDependencyObjectFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDependencyObjectFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDependencyObjectFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyObjectFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyObjectFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyProperty
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyProperty
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyProperty[] = L"Microsoft.UI.Xaml.IDependencyProperty";
/* [object, uuid("960EAB49-9672-58A0-995B-3A42E5EA6278"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyProperty * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyProperty * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyProperty * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyProperty * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyProperty * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyProperty * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetMetadata )(
        __x_Microsoft_CUI_CXaml_CIDependencyProperty * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName forType,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDependencyPropertyVtbl;

interface __x_Microsoft_CUI_CXaml_CIDependencyProperty
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDependencyProperty_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDependencyProperty_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyProperty_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyProperty_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDependencyProperty_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDependencyProperty_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDependencyProperty_GetMetadata(This,forType,result) \
    ( (This)->lpVtbl->GetMetadata(This,forType,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyProperty;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyProperty_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyPropertyChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyPropertyChangedEventArgs[] = L"Microsoft.UI.Xaml.IDependencyPropertyChangedEventArgs";
/* [object, uuid("84EAD020-7849-5E98-8030-488A80D164EC"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Property )(
        __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OldValue )(
        __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NewValue )(
        __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs * This,
        /* [retval, out] */IInspectable * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_Property(This,value) \
    ( (This)->lpVtbl->get_Property(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_OldValue(This,value) \
    ( (This)->lpVtbl->get_OldValue(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_get_NewValue(This,value) \
    ( (This)->lpVtbl->get_NewValue(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDependencyPropertyStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DependencyProperty
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDependencyPropertyStatics[] = L"Microsoft.UI.Xaml.IDependencyPropertyStatics";
/* [object, uuid("61DDC651-0383-5D6F-98CE-5C046AAAAA8F"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UnsetValue )(
        __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This,
        /* [retval, out] */IInspectable * * value
        );
    HRESULT ( STDMETHODCALLTYPE *Register )(
        __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This,
        /* [in] */HSTRING name,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName propertyType,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName ownerType,
        /* [in] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * typeMetadata,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RegisterAttached )(
        __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics * This,
        /* [in] */HSTRING name,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName propertyType,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName ownerType,
        /* [in] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * defaultMetadata,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDependencyPropertyStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDependencyPropertyStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_get_UnsetValue(This,value) \
    ( (This)->lpVtbl->get_UnsetValue(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_Register(This,name,propertyType,ownerType,typeMetadata,result) \
    ( (This)->lpVtbl->Register(This,name,propertyType,ownerType,typeMetadata,result) )

#define __x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_RegisterAttached(This,name,propertyType,ownerType,defaultMetadata,result) \
    ( (This)->lpVtbl->RegisterAttached(This,name,propertyType,ownerType,defaultMetadata,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDependencyPropertyStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDispatcherTimer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DispatcherTimer
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDispatcherTimer[] = L"Microsoft.UI.Xaml.IDispatcherTimer";
/* [object, uuid("58A4ABF1-A4A3-53DD-AE21-08F43231E817"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDispatcherTimerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Interval )(
        __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Interval )(
        __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsEnabled )(
        __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
        /* [retval, out] */boolean * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Tick )(
        __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
        /* [in] */__FIEventHandler_1_IInspectable * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Tick )(
        __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This,
        /* [in] */EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Start )(
        __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This
        );
    HRESULT ( STDMETHODCALLTYPE *Stop )(
        __x_Microsoft_CUI_CXaml_CIDispatcherTimer * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDispatcherTimerVtbl;

interface __x_Microsoft_CUI_CXaml_CIDispatcherTimer
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDispatcherTimerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_get_Interval(This,value) \
    ( (This)->lpVtbl->get_Interval(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_put_Interval(This,value) \
    ( (This)->lpVtbl->put_Interval(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_get_IsEnabled(This,value) \
    ( (This)->lpVtbl->get_IsEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_add_Tick(This,handler,token) \
    ( (This)->lpVtbl->add_Tick(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_remove_Tick(This,token) \
    ( (This)->lpVtbl->remove_Tick(This,token) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_Start(This) \
    ( (This)->lpVtbl->Start(This) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimer_Stop(This) \
    ( (This)->lpVtbl->Stop(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDispatcherTimer;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDispatcherTimer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDispatcherTimerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DispatcherTimer
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDispatcherTimerFactory[] = L"Microsoft.UI.Xaml.IDispatcherTimerFactory";
/* [object, uuid("1BCB3166-22E4-50BF-A5A2-B78CA4377BD0"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDispatcherTimer * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDispatcherTimerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragEventArgs[] = L"Microsoft.UI.Xaml.IDragEventArgs";
/* [object, uuid("47AC5757-E4BC-52BA-8AB9-1BF81AAD7900"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDragEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Data )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Data )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DataView )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackageView * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DragUIOverride )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDragUIOverride * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Modifiers )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CDragDrop_CDragDropModifiers * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AcceptedOperation )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AcceptedOperation )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowedOperations )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDragOperationDeferral * * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetPosition )(
        __x_Microsoft_CUI_CXaml_CIDragEventArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * relativeTo,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CPoint * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDragEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDragEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDragEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_get_Data(This,value) \
    ( (This)->lpVtbl->get_Data(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_put_Data(This,value) \
    ( (This)->lpVtbl->put_Data(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_get_DataView(This,value) \
    ( (This)->lpVtbl->get_DataView(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_get_DragUIOverride(This,value) \
    ( (This)->lpVtbl->get_DragUIOverride(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_get_Modifiers(This,value) \
    ( (This)->lpVtbl->get_Modifiers(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_get_AcceptedOperation(This,value) \
    ( (This)->lpVtbl->get_AcceptedOperation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_put_AcceptedOperation(This,value) \
    ( (This)->lpVtbl->put_AcceptedOperation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_get_AllowedOperations(This,value) \
    ( (This)->lpVtbl->get_AllowedOperations(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_GetDeferral(This,result) \
    ( (This)->lpVtbl->GetDeferral(This,result) )

#define __x_Microsoft_CUI_CXaml_CIDragEventArgs_GetPosition(This,relativeTo,result) \
    ( (This)->lpVtbl->GetPosition(This,relativeTo,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragOperationDeferral
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragOperationDeferral
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragOperationDeferral[] = L"Microsoft.UI.Xaml.IDragOperationDeferral";
/* [object, uuid("462C1880-FC6A-5035-8ABF-564BACB78158"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDragOperationDeferralVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragOperationDeferral * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragOperationDeferral * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragOperationDeferral * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragOperationDeferral * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragOperationDeferral * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragOperationDeferral * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *Complete )(
        __x_Microsoft_CUI_CXaml_CIDragOperationDeferral * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDragOperationDeferralVtbl;

interface __x_Microsoft_CUI_CXaml_CIDragOperationDeferral
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDragOperationDeferralVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDragOperationDeferral_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDragOperationDeferral_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDragOperationDeferral_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDragOperationDeferral_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDragOperationDeferral_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDragOperationDeferral_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDragOperationDeferral_Complete(This) \
    ( (This)->lpVtbl->Complete(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragOperationDeferral;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragOperationDeferral_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragStartingEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragStartingEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragStartingEventArgs[] = L"Microsoft.UI.Xaml.IDragStartingEventArgs";
/* [object, uuid("AD17BACE-9613-5666-A31B-79A73FBA77CF"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDragStartingEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Cancel )(
        __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Cancel )(
        __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Data )(
        __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CIDataPackage * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DragUI )(
        __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDragUI * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowedOperations )(
        __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AllowedOperations )(
        __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
        /* [in] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation value
        );
    HRESULT ( STDMETHODCALLTYPE *GetDeferral )(
        __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDragOperationDeferral * * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetPosition )(
        __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * relativeTo,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CPoint * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDragStartingEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDragStartingEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_get_Cancel(This,value) \
    ( (This)->lpVtbl->get_Cancel(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_put_Cancel(This,value) \
    ( (This)->lpVtbl->put_Cancel(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_get_Data(This,value) \
    ( (This)->lpVtbl->get_Data(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_get_DragUI(This,value) \
    ( (This)->lpVtbl->get_DragUI(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_get_AllowedOperations(This,value) \
    ( (This)->lpVtbl->get_AllowedOperations(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_put_AllowedOperations(This,value) \
    ( (This)->lpVtbl->put_AllowedOperations(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_GetDeferral(This,result) \
    ( (This)->lpVtbl->GetDeferral(This,result) )

#define __x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_GetPosition(This,relativeTo,result) \
    ( (This)->lpVtbl->GetPosition(This,relativeTo,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragStartingEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragStartingEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragUI
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragUI
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragUI[] = L"Microsoft.UI.Xaml.IDragUI";
/* [object, uuid("35F170E0-93BF-58DA-877A-8EC77D8D9F00"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDragUIVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUI * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUI * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUI * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUI * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUI * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUI * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload] */HRESULT ( STDMETHODCALLTYPE *SetContentFromBitmapImage )(
        __x_Microsoft_CUI_CXaml_CIDragUI * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage * bitmapImage
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetContentFromBitmapImageWithAnchorPoint )(
        __x_Microsoft_CUI_CXaml_CIDragUI * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage * bitmapImage,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint anchorPoint
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetContentFromSoftwareBitmap )(
        __x_Microsoft_CUI_CXaml_CIDragUI * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap * softwareBitmap
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetContentFromSoftwareBitmapWithAnchorPoint )(
        __x_Microsoft_CUI_CXaml_CIDragUI * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap * softwareBitmap,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint anchorPoint
        );
    HRESULT ( STDMETHODCALLTYPE *SetContentFromDataPackage )(
        __x_Microsoft_CUI_CXaml_CIDragUI * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDragUIVtbl;

interface __x_Microsoft_CUI_CXaml_CIDragUI
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDragUIVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDragUI_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_SetContentFromBitmapImage(This,bitmapImage) \
    ( (This)->lpVtbl->SetContentFromBitmapImage(This,bitmapImage) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_SetContentFromBitmapImageWithAnchorPoint(This,bitmapImage,anchorPoint) \
    ( (This)->lpVtbl->SetContentFromBitmapImageWithAnchorPoint(This,bitmapImage,anchorPoint) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_SetContentFromSoftwareBitmap(This,softwareBitmap) \
    ( (This)->lpVtbl->SetContentFromSoftwareBitmap(This,softwareBitmap) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_SetContentFromSoftwareBitmapWithAnchorPoint(This,softwareBitmap,anchorPoint) \
    ( (This)->lpVtbl->SetContentFromSoftwareBitmapWithAnchorPoint(This,softwareBitmap,anchorPoint) )

#define __x_Microsoft_CUI_CXaml_CIDragUI_SetContentFromDataPackage(This) \
    ( (This)->lpVtbl->SetContentFromDataPackage(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragUI;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragUI_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDragUIOverride
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DragUIOverride
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDragUIOverride[] = L"Microsoft.UI.Xaml.IDragUIOverride";
/* [object, uuid("3260B18B-70DF-5DF2-B98A-56BEB0601F79"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDragUIOverrideVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUIOverride * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUIOverride * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Caption )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Caption )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsContentVisible )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsContentVisible )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsCaptionVisible )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsCaptionVisible )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsGlyphVisible )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsGlyphVisible )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [in] */boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *Clear )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetContentFromBitmapImage )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage * bitmapImage
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetContentFromBitmapImageWithAnchorPoint )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CImaging_CIBitmapImage * bitmapImage,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint anchorPoint
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetContentFromSoftwareBitmap )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap * softwareBitmap
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *SetContentFromSoftwareBitmapWithAnchorPoint )(
        __x_Microsoft_CUI_CXaml_CIDragUIOverride * This,
        /* [in] */__x_ABI_CWindows_CGraphics_CImaging_CISoftwareBitmap * softwareBitmap,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint anchorPoint
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDragUIOverrideVtbl;

interface __x_Microsoft_CUI_CXaml_CIDragUIOverride
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDragUIOverrideVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_get_Caption(This,value) \
    ( (This)->lpVtbl->get_Caption(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_put_Caption(This,value) \
    ( (This)->lpVtbl->put_Caption(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_get_IsContentVisible(This,value) \
    ( (This)->lpVtbl->get_IsContentVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_put_IsContentVisible(This,value) \
    ( (This)->lpVtbl->put_IsContentVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_get_IsCaptionVisible(This,value) \
    ( (This)->lpVtbl->get_IsCaptionVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_put_IsCaptionVisible(This,value) \
    ( (This)->lpVtbl->put_IsCaptionVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_get_IsGlyphVisible(This,value) \
    ( (This)->lpVtbl->get_IsGlyphVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_put_IsGlyphVisible(This,value) \
    ( (This)->lpVtbl->put_IsGlyphVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_Clear(This) \
    ( (This)->lpVtbl->Clear(This) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_SetContentFromBitmapImage(This,bitmapImage) \
    ( (This)->lpVtbl->SetContentFromBitmapImage(This,bitmapImage) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_SetContentFromBitmapImageWithAnchorPoint(This,bitmapImage,anchorPoint) \
    ( (This)->lpVtbl->SetContentFromBitmapImageWithAnchorPoint(This,bitmapImage,anchorPoint) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_SetContentFromSoftwareBitmap(This,softwareBitmap) \
    ( (This)->lpVtbl->SetContentFromSoftwareBitmap(This,softwareBitmap) )

#define __x_Microsoft_CUI_CXaml_CIDragUIOverride_SetContentFromSoftwareBitmapWithAnchorPoint(This,softwareBitmap,anchorPoint) \
    ( (This)->lpVtbl->SetContentFromSoftwareBitmapWithAnchorPoint(This,softwareBitmap,anchorPoint) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDragUIOverride;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDragUIOverride_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDropCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DropCompletedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDropCompletedEventArgs[] = L"Microsoft.UI.Xaml.IDropCompletedEventArgs";
/* [object, uuid("E700082D-C640-5D44-B23A-F213DFBEB245"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DropResult )(
        __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CDataTransfer_CDataPackageOperation * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_get_DropResult(This,value) \
    ( (This)->lpVtbl->get_DropResult(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDropCompletedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDurationHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DurationHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDurationHelper[] = L"Microsoft.UI.Xaml.IDurationHelper";
/* [object, uuid("CC1089AB-8041-5C3E-B753-8397E7358CC6"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDurationHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelper * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelper * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelper * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelper * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelper * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelper * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDurationHelperVtbl;

interface __x_Microsoft_CUI_CXaml_CIDurationHelper
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDurationHelperVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDurationHelper_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelper_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelper_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelper_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelper_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelper_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDurationHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDurationHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDurationHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DurationHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDurationHelperStatics[] = L"Microsoft.UI.Xaml.IDurationHelperStatics";
/* [object, uuid("491FEB2C-3475-5F89-B15C-49C236EB514C"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDurationHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Automatic )(
        __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CDuration * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Forever )(
        __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CDuration * value
        );
    HRESULT ( STDMETHODCALLTYPE *Compare )(
        __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration duration1,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration duration2,
        /* [retval, out] */INT32 * result
        );
    HRESULT ( STDMETHODCALLTYPE *FromTimeSpan )(
        __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan timeSpan,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CDuration * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetHasTimeSpan )(
        __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration target,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *Add )(
        __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration target,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration duration,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CDuration * result
        );
    HRESULT ( STDMETHODCALLTYPE *Equals )(
        __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration target,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration value,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *Subtract )(
        __x_Microsoft_CUI_CXaml_CIDurationHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration target,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration duration,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CDuration * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDurationHelperStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDurationHelperStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDurationHelperStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_get_Automatic(This,value) \
    ( (This)->lpVtbl->get_Automatic(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_get_Forever(This,value) \
    ( (This)->lpVtbl->get_Forever(This,value) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_Compare(This,duration1,duration2,result) \
    ( (This)->lpVtbl->Compare(This,duration1,duration2,result) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_FromTimeSpan(This,timeSpan,result) \
    ( (This)->lpVtbl->FromTimeSpan(This,timeSpan,result) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_GetHasTimeSpan(This,target,result) \
    ( (This)->lpVtbl->GetHasTimeSpan(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_Add(This,target,duration,result) \
    ( (This)->lpVtbl->Add(This,target,duration,result) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_Equals(This,target,value,result) \
    ( (This)->lpVtbl->Equals(This,target,value,result) )

#define __x_Microsoft_CUI_CXaml_CIDurationHelperStatics_Subtract(This,target,duration,result) \
    ( (This)->lpVtbl->Subtract(This,target,duration,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDurationHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDurationHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDxamlCoreTestHooks
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DxamlCoreTestHooks
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDxamlCoreTestHooks[] = L"Microsoft.UI.Xaml.IDxamlCoreTestHooks";
/* [object, uuid("E44D8E58-844D-5201-83BD-5D48CEB7035D"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksVtbl;

interface __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IDxamlCoreTestHooksStatics
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.DxamlCoreTestHooks
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IDxamlCoreTestHooksStatics[] = L"Microsoft.UI.Xaml.IDxamlCoreTestHooksStatics";
/* [object, uuid("4B2F7A38-3584-53E8-A67F-F3EDF229E5AB"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetForCurrentThread )(
        __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooks * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_GetForCurrentThread(This,result) \
    ( (This)->lpVtbl->GetForCurrentThread(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIDxamlCoreTestHooksStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IEffectiveViewportChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IEffectiveViewportChangedEventArgs[] = L"Microsoft.UI.Xaml.IEffectiveViewportChangedEventArgs";
/* [object, uuid("636E8159-2D82-538A-8483-CD576E41D0DF"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_EffectiveViewport )(
        __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxViewport )(
        __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BringIntoViewDistanceX )(
        __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BringIntoViewDistanceY )(
        __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs * This,
        /* [retval, out] */DOUBLE * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_get_EffectiveViewport(This,value) \
    ( (This)->lpVtbl->get_EffectiveViewport(This,value) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_get_MaxViewport(This,value) \
    ( (This)->lpVtbl->get_MaxViewport(This,value) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_get_BringIntoViewDistanceX(This,value) \
    ( (This)->lpVtbl->get_BringIntoViewDistanceX(This,value) )

#define __x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_get_BringIntoViewDistanceY(This,value) \
    ( (This)->lpVtbl->get_BringIntoViewDistanceY(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIEffectiveViewportChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactory[] = L"Microsoft.UI.Xaml.IElementFactory";
/* [object, uuid("75FABA47-2CF2-54AE-91E6-0581556FDDAA"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIElementFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetElement )(
        __x_Microsoft_CUI_CXaml_CIElementFactory * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * args,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIUIElement * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RecycleElement )(
        __x_Microsoft_CUI_CXaml_CIElementFactory * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * args
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIElementFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIElementFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIElementFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIElementFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIElementFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIElementFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIElementFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIElementFactory_GetElement(This,args,result) \
    ( (This)->lpVtbl->GetElement(This,args,result) )

#define __x_Microsoft_CUI_CXaml_CIElementFactory_RecycleElement(This,args) \
    ( (This)->lpVtbl->RecycleElement(This,args) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactoryGetArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementFactoryGetArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactoryGetArgs[] = L"Microsoft.UI.Xaml.IElementFactoryGetArgs";
/* [object, uuid("B7017D68-EC9E-5435-B078-BE6F906F0953"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Data )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Data )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This,
        /* [in] */IInspectable * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Parent )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIUIElement * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Parent )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_get_Data(This,value) \
    ( (This)->lpVtbl->get_Data(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_put_Data(This,value) \
    ( (This)->lpVtbl->put_Data(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_get_Parent(This,value) \
    ( (This)->lpVtbl->get_Parent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_put_Parent(This,value) \
    ( (This)->lpVtbl->put_Parent(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactoryGetArgsFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementFactoryGetArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactoryGetArgsFactory[] = L"Microsoft.UI.Xaml.IElementFactoryGetArgsFactory";
/* [object, uuid("A88E401B-9FE5-5960-87A3-89A3CFE2531C"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIElementFactoryGetArgs * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryGetArgsFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactoryRecycleArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementFactoryRecycleArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactoryRecycleArgs[] = L"Microsoft.UI.Xaml.IElementFactoryRecycleArgs";
/* [object, uuid("46E444F7-05D3-5C5E-9B7A-5541F63E4EF9"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Element )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIUIElement * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Element )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Parent )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIUIElement * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Parent )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_get_Element(This,value) \
    ( (This)->lpVtbl->get_Element(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_put_Element(This,value) \
    ( (This)->lpVtbl->put_Element(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_get_Parent(This,value) \
    ( (This)->lpVtbl->get_Parent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_put_Parent(This,value) \
    ( (This)->lpVtbl->put_Parent(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementFactoryRecycleArgsFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementFactoryRecycleArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementFactoryRecycleArgsFactory[] = L"Microsoft.UI.Xaml.IElementFactoryRecycleArgsFactory";
/* [object, uuid("30EE194A-FE4D-53E7-A84A-CD34FAB0D4EF"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgs * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementFactoryRecycleArgsFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementSoundPlayer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementSoundPlayer
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementSoundPlayer[] = L"Microsoft.UI.Xaml.IElementSoundPlayer";
/* [object, uuid("0EA67E68-937C-5C00-B609-53B63D9A5D42"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIElementSoundPlayerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayer * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayer * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayer * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayer * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayer * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayer * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIElementSoundPlayerVtbl;

interface __x_Microsoft_CUI_CXaml_CIElementSoundPlayer
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIElementSoundPlayerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayer_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayer_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayer_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayer_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayer_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayer_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementSoundPlayer;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayer_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementSoundPlayerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ElementSoundPlayer
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementSoundPlayerStatics[] = L"Microsoft.UI.Xaml.IElementSoundPlayerStatics";
/* [object, uuid("5A5A20C3-1C9B-5D61-9D63-487C8BF16ECB"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Volume )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Volume )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_State )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CElementSoundPlayerState * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_State )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CElementSoundPlayerState value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_SpatialAudioMode )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CElementSpatialAudioMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_SpatialAudioMode )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CElementSpatialAudioMode value
        );
    HRESULT ( STDMETHODCALLTYPE *Play )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CElementSoundKind sound
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_get_Volume(This,value) \
    ( (This)->lpVtbl->get_Volume(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_put_Volume(This,value) \
    ( (This)->lpVtbl->put_Volume(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_get_State(This,value) \
    ( (This)->lpVtbl->get_State(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_put_State(This,value) \
    ( (This)->lpVtbl->put_State(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_get_SpatialAudioMode(This,value) \
    ( (This)->lpVtbl->get_SpatialAudioMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_put_SpatialAudioMode(This,value) \
    ( (This)->lpVtbl->put_SpatialAudioMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_Play(This,sound) \
    ( (This)->lpVtbl->Play(This,sound) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IElementSoundPlayerStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IElementSoundPlayerStaticsPrivate[] = L"Microsoft.UI.Xaml.IElementSoundPlayerStaticsPrivate";
/* [object, uuid("65D2203B-6FB0-5EBA-8821-F6DD313C33FB"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *RequestInteractionSoundForElement )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CElementSoundKind sound,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * element
        );
    HRESULT ( STDMETHODCALLTYPE *GetEffectiveSoundMode )(
        __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * element,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CElementSoundMode * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_RequestInteractionSoundForElement(This,sound,element) \
    ( (This)->lpVtbl->RequestInteractionSoundForElement(This,sound,element) )

#define __x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_GetEffectiveSoundMode(This,element,result) \
    ( (This)->lpVtbl->GetEffectiveSoundMode(This,element,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIElementSoundPlayerStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IEventTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.EventTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IEventTrigger[] = L"Microsoft.UI.Xaml.IEventTrigger";
/* [object, uuid("8C6F0541-C6AC-5F27-9D45-CF8BDBDFABE6"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIEventTriggerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEventTrigger * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEventTrigger * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEventTrigger * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEventTrigger * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEventTrigger * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIEventTrigger * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RoutedEvent )(
        __x_Microsoft_CUI_CXaml_CIEventTrigger * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RoutedEvent )(
        __x_Microsoft_CUI_CXaml_CIEventTrigger * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Actions )(
        __x_Microsoft_CUI_CXaml_CIEventTrigger * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CTriggerAction * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIEventTriggerVtbl;

interface __x_Microsoft_CUI_CXaml_CIEventTrigger
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIEventTriggerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIEventTrigger_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIEventTrigger_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIEventTrigger_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIEventTrigger_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIEventTrigger_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIEventTrigger_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIEventTrigger_get_RoutedEvent(This,value) \
    ( (This)->lpVtbl->get_RoutedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIEventTrigger_put_RoutedEvent(This,value) \
    ( (This)->lpVtbl->put_RoutedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIEventTrigger_get_Actions(This,value) \
    ( (This)->lpVtbl->get_Actions(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIEventTrigger;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIEventTrigger_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IExceptionRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ExceptionRoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IExceptionRoutedEventArgs[] = L"Microsoft.UI.Xaml.IExceptionRoutedEventArgs";
/* [object, uuid("E8BCB6D2-D3F5-5393-A84F-DFCD44A2DF34"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ErrorMessage )(
        __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs * This,
        /* [retval, out] */HSTRING * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_get_ErrorMessage(This,value) \
    ( (This)->lpVtbl->get_ErrorMessage(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IExceptionRoutedEventArgsFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ExceptionRoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IExceptionRoutedEventArgsFactory[] = L"Microsoft.UI.Xaml.IExceptionRoutedEventArgsFactory";
/* [object, uuid("E1E71FB6-2AD0-5189-8D96-33BAE488C5FB"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIExceptionRoutedEventArgsFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkApplicationPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkApplicationPrivate[] = L"Microsoft.UI.Xaml.IFrameworkApplicationPrivate";
/* [object, uuid("5CA69216-9979-5E26-B067-D45856580732"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *StartOnCurrentThread )(
        __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIApplicationInitializationCallback  * callback
        );
    HRESULT ( STDMETHODCALLTYPE *CreateIsland )(
        __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland * * result
        );
    HRESULT ( STDMETHODCALLTYPE *CreateIslandWithContentBridge )(
        __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
        /* [in] */IInspectable * owner,
        /* [in] */IInspectable * contentBridge,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland * * result
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveIsland )(
        __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CHosting_CIXamlIsland * island
        );
    HRESULT ( STDMETHODCALLTYPE *SetSynchronizationWindow )(
        __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate * This,
        /* [in] */UINT64 commitResizeWindow
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_StartOnCurrentThread(This,callback) \
    ( (This)->lpVtbl->StartOnCurrentThread(This,callback) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_CreateIsland(This,result) \
    ( (This)->lpVtbl->CreateIsland(This,result) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_CreateIslandWithContentBridge(This,owner,contentBridge,result) \
    ( (This)->lpVtbl->CreateIslandWithContentBridge(This,owner,contentBridge,result) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_RemoveIsland(This,island) \
    ( (This)->lpVtbl->RemoveIsland(This,island) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_SetSynchronizationWindow(This,commitResizeWindow) \
    ( (This)->lpVtbl->SetSynchronizationWindow(This,commitResizeWindow) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkApplicationPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkApplicationStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkApplicationStaticsPrivate[] = L"Microsoft.UI.Xaml.IFrameworkApplicationStaticsPrivate";
/* [object, uuid("66CB5498-0063-5D10-B06B-6C6CE06E4D2D"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *EnableFailFastOnStowedException )(
        __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_EnableFailFastOnStowedException(This) \
    ( (This)->lpVtbl->EnableFailFastOnStowedException(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkApplicationStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElement
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElement[] = L"Microsoft.UI.Xaml.IFrameworkElement";
/* [object, uuid("FE08F13D-DC6A-5495-AD44-C2D8D21863B0"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElement * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElement * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Triggers )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CTriggerBase * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Resources )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIResourceDictionary * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Resources )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIResourceDictionary * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Tag )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Tag )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */IInspectable * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Language )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Language )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualWidth )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualHeight )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Width )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Width )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Height )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Height )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinWidth )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MinWidth )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxWidth )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MaxWidth )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinHeight )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MinHeight )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxHeight )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_MaxHeight )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignment )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CHorizontalAlignment * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_HorizontalAlignment )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CHorizontalAlignment value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignment )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CVerticalAlignment * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_VerticalAlignment )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CVerticalAlignment value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Margin )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CThickness * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Margin )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CThickness value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Name )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Name )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BaseUri )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DataContext )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_DataContext )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */IInspectable * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowFocusOnInteraction )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AllowFocusOnInteraction )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualMargin )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CThickness * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FocusVisualMargin )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CThickness value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualSecondaryThickness )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CThickness * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FocusVisualSecondaryThickness )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CThickness value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualPrimaryThickness )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CThickness * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FocusVisualPrimaryThickness )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CThickness value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualSecondaryBrush )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CIBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FocusVisualSecondaryBrush )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CIBrush * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualPrimaryBrush )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CIBrush * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FocusVisualPrimaryBrush )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CIBrush * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowFocusWhenDisabled )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AllowFocusWhenDisabled )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Style )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIStyle * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Style )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIStyle * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Parent )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FlowDirection )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CFlowDirection * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_FlowDirection )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CFlowDirection value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RequestedTheme )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CElementTheme * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RequestedTheme )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CElementTheme value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsLoaded )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualTheme )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CElementTheme * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Loaded )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIRoutedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Loaded )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Unloaded )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIRoutedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Unloaded )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_DataContextChanged )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CDataContextChangedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_DataContextChanged )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_SizeChanged )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CISizeChangedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_SizeChanged )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_LayoutUpdated )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__FIEventHandler_1_IInspectable * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_LayoutUpdated )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Loading )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Loading )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ActualThemeChanged )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_IInspectable * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ActualThemeChanged )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_EffectiveViewportChanged )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CFrameworkElement_Microsoft__CUI__CXaml__CEffectiveViewportChangedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_EffectiveViewportChanged )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *FindName )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */HSTRING name,
        /* [retval, out] */IInspectable * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetBinding )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp,
        /* [in] */__x_Microsoft_CUI_CXaml_CData_CIBindingBase * binding
        );
    HRESULT ( STDMETHODCALLTYPE *GetBindingExpression )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * dp,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CData_CIBindingExpression * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkElementVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkElement
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkElementVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Triggers(This,value) \
    ( (This)->lpVtbl->get_Triggers(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Resources(This,value) \
    ( (This)->lpVtbl->get_Resources(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_Resources(This,value) \
    ( (This)->lpVtbl->put_Resources(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Tag(This,value) \
    ( (This)->lpVtbl->get_Tag(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_Tag(This,value) \
    ( (This)->lpVtbl->put_Tag(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Language(This,value) \
    ( (This)->lpVtbl->get_Language(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_Language(This,value) \
    ( (This)->lpVtbl->put_Language(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_ActualWidth(This,value) \
    ( (This)->lpVtbl->get_ActualWidth(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_ActualHeight(This,value) \
    ( (This)->lpVtbl->get_ActualHeight(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Width(This,value) \
    ( (This)->lpVtbl->get_Width(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_Width(This,value) \
    ( (This)->lpVtbl->put_Width(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Height(This,value) \
    ( (This)->lpVtbl->get_Height(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_Height(This,value) \
    ( (This)->lpVtbl->put_Height(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_MinWidth(This,value) \
    ( (This)->lpVtbl->get_MinWidth(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_MinWidth(This,value) \
    ( (This)->lpVtbl->put_MinWidth(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_MaxWidth(This,value) \
    ( (This)->lpVtbl->get_MaxWidth(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_MaxWidth(This,value) \
    ( (This)->lpVtbl->put_MaxWidth(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_MinHeight(This,value) \
    ( (This)->lpVtbl->get_MinHeight(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_MinHeight(This,value) \
    ( (This)->lpVtbl->put_MinHeight(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_MaxHeight(This,value) \
    ( (This)->lpVtbl->get_MaxHeight(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_MaxHeight(This,value) \
    ( (This)->lpVtbl->put_MaxHeight(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_HorizontalAlignment(This,value) \
    ( (This)->lpVtbl->get_HorizontalAlignment(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_HorizontalAlignment(This,value) \
    ( (This)->lpVtbl->put_HorizontalAlignment(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_VerticalAlignment(This,value) \
    ( (This)->lpVtbl->get_VerticalAlignment(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_VerticalAlignment(This,value) \
    ( (This)->lpVtbl->put_VerticalAlignment(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Margin(This,value) \
    ( (This)->lpVtbl->get_Margin(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_Margin(This,value) \
    ( (This)->lpVtbl->put_Margin(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Name(This,value) \
    ( (This)->lpVtbl->get_Name(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_Name(This,value) \
    ( (This)->lpVtbl->put_Name(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_BaseUri(This,value) \
    ( (This)->lpVtbl->get_BaseUri(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_DataContext(This,value) \
    ( (This)->lpVtbl->get_DataContext(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_DataContext(This,value) \
    ( (This)->lpVtbl->put_DataContext(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_AllowFocusOnInteraction(This,value) \
    ( (This)->lpVtbl->get_AllowFocusOnInteraction(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_AllowFocusOnInteraction(This,value) \
    ( (This)->lpVtbl->put_AllowFocusOnInteraction(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_FocusVisualMargin(This,value) \
    ( (This)->lpVtbl->get_FocusVisualMargin(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_FocusVisualMargin(This,value) \
    ( (This)->lpVtbl->put_FocusVisualMargin(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_FocusVisualSecondaryThickness(This,value) \
    ( (This)->lpVtbl->get_FocusVisualSecondaryThickness(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_FocusVisualSecondaryThickness(This,value) \
    ( (This)->lpVtbl->put_FocusVisualSecondaryThickness(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_FocusVisualPrimaryThickness(This,value) \
    ( (This)->lpVtbl->get_FocusVisualPrimaryThickness(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_FocusVisualPrimaryThickness(This,value) \
    ( (This)->lpVtbl->put_FocusVisualPrimaryThickness(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_FocusVisualSecondaryBrush(This,value) \
    ( (This)->lpVtbl->get_FocusVisualSecondaryBrush(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_FocusVisualSecondaryBrush(This,value) \
    ( (This)->lpVtbl->put_FocusVisualSecondaryBrush(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_FocusVisualPrimaryBrush(This,value) \
    ( (This)->lpVtbl->get_FocusVisualPrimaryBrush(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_FocusVisualPrimaryBrush(This,value) \
    ( (This)->lpVtbl->put_FocusVisualPrimaryBrush(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_AllowFocusWhenDisabled(This,value) \
    ( (This)->lpVtbl->get_AllowFocusWhenDisabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_AllowFocusWhenDisabled(This,value) \
    ( (This)->lpVtbl->put_AllowFocusWhenDisabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Style(This,value) \
    ( (This)->lpVtbl->get_Style(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_Style(This,value) \
    ( (This)->lpVtbl->put_Style(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_Parent(This,value) \
    ( (This)->lpVtbl->get_Parent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_FlowDirection(This,value) \
    ( (This)->lpVtbl->get_FlowDirection(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_FlowDirection(This,value) \
    ( (This)->lpVtbl->put_FlowDirection(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_RequestedTheme(This,value) \
    ( (This)->lpVtbl->get_RequestedTheme(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_put_RequestedTheme(This,value) \
    ( (This)->lpVtbl->put_RequestedTheme(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_IsLoaded(This,value) \
    ( (This)->lpVtbl->get_IsLoaded(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_get_ActualTheme(This,value) \
    ( (This)->lpVtbl->get_ActualTheme(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_add_Loaded(This,handler,token) \
    ( (This)->lpVtbl->add_Loaded(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_remove_Loaded(This,token) \
    ( (This)->lpVtbl->remove_Loaded(This,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_add_Unloaded(This,handler,token) \
    ( (This)->lpVtbl->add_Unloaded(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_remove_Unloaded(This,token) \
    ( (This)->lpVtbl->remove_Unloaded(This,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_add_DataContextChanged(This,handler,token) \
    ( (This)->lpVtbl->add_DataContextChanged(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_remove_DataContextChanged(This,token) \
    ( (This)->lpVtbl->remove_DataContextChanged(This,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_add_SizeChanged(This,handler,token) \
    ( (This)->lpVtbl->add_SizeChanged(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_remove_SizeChanged(This,token) \
    ( (This)->lpVtbl->remove_SizeChanged(This,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_add_LayoutUpdated(This,handler,token) \
    ( (This)->lpVtbl->add_LayoutUpdated(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_remove_LayoutUpdated(This,token) \
    ( (This)->lpVtbl->remove_LayoutUpdated(This,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_add_Loading(This,handler,token) \
    ( (This)->lpVtbl->add_Loading(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_remove_Loading(This,token) \
    ( (This)->lpVtbl->remove_Loading(This,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_add_ActualThemeChanged(This,handler,token) \
    ( (This)->lpVtbl->add_ActualThemeChanged(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_remove_ActualThemeChanged(This,token) \
    ( (This)->lpVtbl->remove_ActualThemeChanged(This,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_add_EffectiveViewportChanged(This,handler,token) \
    ( (This)->lpVtbl->add_EffectiveViewportChanged(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_remove_EffectiveViewportChanged(This,token) \
    ( (This)->lpVtbl->remove_EffectiveViewportChanged(This,token) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_FindName(This,name,result) \
    ( (This)->lpVtbl->FindName(This,name,result) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_SetBinding(This,dp,binding) \
    ( (This)->lpVtbl->SetBinding(This,dp,binding) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElement_GetBindingExpression(This,dp,result) \
    ( (This)->lpVtbl->GetBindingExpression(This,dp,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElement;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElement_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElementFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElementFactory[] = L"Microsoft.UI.Xaml.IFrameworkElementFactory";
/* [object, uuid("BD3F2272-3EFA-5F92-B759-90B1CC3E784C"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkElementFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIFrameworkElement * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkElementFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkElementFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElementFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElementOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElementOverrides[] = L"Microsoft.UI.Xaml.IFrameworkElementOverrides";
/* [object, uuid("FFC6FD98-F38C-5904-9CE4-97A3427CF4BA"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkElementOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *MeasureOverride )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CSize availableSize,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * result
        );
    HRESULT ( STDMETHODCALLTYPE *ArrangeOverride )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CSize finalSize,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * result
        );
    HRESULT ( STDMETHODCALLTYPE *OnApplyTemplate )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This
        );
    HRESULT ( STDMETHODCALLTYPE *GoToElementStateCore )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides * This,
        /* [in] */HSTRING stateName,
        /* [in] */boolean useTransitions,
        /* [retval, out] */boolean * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkElementOverridesVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkElementOverridesVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_MeasureOverride(This,availableSize,result) \
    ( (This)->lpVtbl->MeasureOverride(This,availableSize,result) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_ArrangeOverride(This,finalSize,result) \
    ( (This)->lpVtbl->ArrangeOverride(This,finalSize,result) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_OnApplyTemplate(This) \
    ( (This)->lpVtbl->OnApplyTemplate(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_GoToElementStateCore(This,stateName,useTransitions,result) \
    ( (This)->lpVtbl->GoToElementStateCore(This,stateName,useTransitions,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElementProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElementProtected[] = L"Microsoft.UI.Xaml.IFrameworkElementProtected";
/* [object, uuid("E59A3DB0-91E5-5903-9CAF-D1BB9F458BF2"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkElementProtectedVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *InvalidateViewport )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkElementProtectedVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkElementProtectedVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_InvalidateViewport(This) \
    ( (This)->lpVtbl->InvalidateViewport(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElementProtected;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkElementStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkElementStatics[] = L"Microsoft.UI.Xaml.IFrameworkElementStatics";
/* [object, uuid("894E2704-14E7-569A-B21E-AFC7DF7145A1"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkElementStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TagProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LanguageProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualWidthProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualHeightProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_WidthProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HeightProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinWidthProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxWidthProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MinHeightProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MaxHeightProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HorizontalAlignmentProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VerticalAlignmentProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MarginProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NameProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DataContextProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowFocusOnInteractionProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualMarginProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualSecondaryThicknessProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualPrimaryThicknessProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualSecondaryBrushProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusVisualPrimaryBrushProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowFocusWhenDisabledProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StyleProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FlowDirectionProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RequestedThemeProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualThemeProperty )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *DeferTree )(
        __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * element
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkElementStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkElementStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_TagProperty(This,value) \
    ( (This)->lpVtbl->get_TagProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_LanguageProperty(This,value) \
    ( (This)->lpVtbl->get_LanguageProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_ActualWidthProperty(This,value) \
    ( (This)->lpVtbl->get_ActualWidthProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_ActualHeightProperty(This,value) \
    ( (This)->lpVtbl->get_ActualHeightProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_WidthProperty(This,value) \
    ( (This)->lpVtbl->get_WidthProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_HeightProperty(This,value) \
    ( (This)->lpVtbl->get_HeightProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_MinWidthProperty(This,value) \
    ( (This)->lpVtbl->get_MinWidthProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_MaxWidthProperty(This,value) \
    ( (This)->lpVtbl->get_MaxWidthProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_MinHeightProperty(This,value) \
    ( (This)->lpVtbl->get_MinHeightProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_MaxHeightProperty(This,value) \
    ( (This)->lpVtbl->get_MaxHeightProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_HorizontalAlignmentProperty(This,value) \
    ( (This)->lpVtbl->get_HorizontalAlignmentProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_VerticalAlignmentProperty(This,value) \
    ( (This)->lpVtbl->get_VerticalAlignmentProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_MarginProperty(This,value) \
    ( (This)->lpVtbl->get_MarginProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_NameProperty(This,value) \
    ( (This)->lpVtbl->get_NameProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_DataContextProperty(This,value) \
    ( (This)->lpVtbl->get_DataContextProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_AllowFocusOnInteractionProperty(This,value) \
    ( (This)->lpVtbl->get_AllowFocusOnInteractionProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_FocusVisualMarginProperty(This,value) \
    ( (This)->lpVtbl->get_FocusVisualMarginProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_FocusVisualSecondaryThicknessProperty(This,value) \
    ( (This)->lpVtbl->get_FocusVisualSecondaryThicknessProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_FocusVisualPrimaryThicknessProperty(This,value) \
    ( (This)->lpVtbl->get_FocusVisualPrimaryThicknessProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_FocusVisualSecondaryBrushProperty(This,value) \
    ( (This)->lpVtbl->get_FocusVisualSecondaryBrushProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_FocusVisualPrimaryBrushProperty(This,value) \
    ( (This)->lpVtbl->get_FocusVisualPrimaryBrushProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_AllowFocusWhenDisabledProperty(This,value) \
    ( (This)->lpVtbl->get_AllowFocusWhenDisabledProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_StyleProperty(This,value) \
    ( (This)->lpVtbl->get_StyleProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_FlowDirectionProperty(This,value) \
    ( (This)->lpVtbl->get_FlowDirectionProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_RequestedThemeProperty(This,value) \
    ( (This)->lpVtbl->get_RequestedThemeProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_get_ActualThemeProperty(This,value) \
    ( (This)->lpVtbl->get_ActualThemeProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_DeferTree(This,element) \
    ( (This)->lpVtbl->DeferTree(This,element) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkElementStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkElementStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkTemplate
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkTemplate[] = L"Microsoft.UI.Xaml.IFrameworkTemplate";
/* [object, uuid("0084C7C2-DE48-5B0B-8A5A-E4FB76B7F7D1"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkTemplateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkTemplateVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkTemplate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkTemplateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkTemplate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkTemplateFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkTemplate
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkTemplateFactory[] = L"Microsoft.UI.Xaml.IFrameworkTemplateFactory";
/* [object, uuid("616DD6DB-B064-561D-B162-46CEB45DC562"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIFrameworkTemplate * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplateFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkTemplatePrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkTemplatePrivate[] = L"Microsoft.UI.Xaml.IFrameworkTemplatePrivate";
/* [object, uuid("3EC693E7-F042-5FDC-9661-5DCC9F03385D"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *EnableTemplateCaching )(
        __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate * This,
        /* [in] */boolean isTemplateCachingEnabled
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_EnableTemplateCaching(This,isTemplateCachingEnabled) \
    ( (This)->lpVtbl->EnableTemplateCaching(This,isTemplateCachingEnabled) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkTemplatePrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkView
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkView
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkView[] = L"Microsoft.UI.Xaml.IFrameworkView";
/* [object, uuid("E60094C3-45AF-5A8F-9511-1781D7DF1799"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkViewVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkView * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkView * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkView * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkView * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkView * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkView * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkViewVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkView
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkViewVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkView_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkView_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkView_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkView_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkView_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkView_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkView;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkView_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IFrameworkViewSource
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.FrameworkViewSource
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IFrameworkViewSource[] = L"Microsoft.UI.Xaml.IFrameworkViewSource";
/* [object, uuid("52B5D975-6FA6-5B66-A248-D17443B2BCA0"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIFrameworkViewSourceVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkViewSource * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkViewSource * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkViewSource * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkViewSource * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkViewSource * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIFrameworkViewSource * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIFrameworkViewSourceVtbl;

interface __x_Microsoft_CUI_CXaml_CIFrameworkViewSource
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIFrameworkViewSourceVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIFrameworkViewSource_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkViewSource_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkViewSource_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkViewSource_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkViewSource_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIFrameworkViewSource_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIFrameworkViewSource;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIFrameworkViewSource_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IGridLengthHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.GridLengthHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IGridLengthHelper[] = L"Microsoft.UI.Xaml.IGridLengthHelper";
/* [object, uuid("592B4FD5-6564-54E0-87D6-1C41939ED499"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIGridLengthHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelper * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelper * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelper * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelper * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelper * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelper * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIGridLengthHelperVtbl;

interface __x_Microsoft_CUI_CXaml_CIGridLengthHelper
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIGridLengthHelperVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIGridLengthHelper_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelper_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelper_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelper_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelper_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelper_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIGridLengthHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIGridLengthHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IGridLengthHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.GridLengthHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IGridLengthHelperStatics[] = L"Microsoft.UI.Xaml.IGridLengthHelperStatics";
/* [object, uuid("CEA8881B-4E64-535D-9FCD-B4828D3979B0"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIGridLengthHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Auto )(
        __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CGridLength * value
        );
    HRESULT ( STDMETHODCALLTYPE *FromPixels )(
        __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
        /* [in] */DOUBLE pixels,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CGridLength * result
        );
    HRESULT ( STDMETHODCALLTYPE *FromValueAndType )(
        __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
        /* [in] */DOUBLE value,
        /* [in] */__x_Microsoft_CUI_CXaml_CGridUnitType type,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CGridLength * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsAbsolute )(
        __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CGridLength target,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsAuto )(
        __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CGridLength target,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsStar )(
        __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CGridLength target,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *Equals )(
        __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CGridLength target,
        /* [in] */__x_Microsoft_CUI_CXaml_CGridLength value,
        /* [retval, out] */boolean * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIGridLengthHelperStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIGridLengthHelperStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_get_Auto(This,value) \
    ( (This)->lpVtbl->get_Auto(This,value) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_FromPixels(This,pixels,result) \
    ( (This)->lpVtbl->FromPixels(This,pixels,result) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_FromValueAndType(This,value,type,result) \
    ( (This)->lpVtbl->FromValueAndType(This,value,type,result) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_GetIsAbsolute(This,target,result) \
    ( (This)->lpVtbl->GetIsAbsolute(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_GetIsAuto(This,target,result) \
    ( (This)->lpVtbl->GetIsAuto(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_GetIsStar(This,target,result) \
    ( (This)->lpVtbl->GetIsStar(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_Equals(This,target,value,result) \
    ( (This)->lpVtbl->Equals(This,target,value,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIGridLengthHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ILaunchActivatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.LaunchActivatedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ILaunchActivatedEventArgs[] = L"Microsoft.UI.Xaml.ILaunchActivatedEventArgs";
/* [object, uuid("D505CEA9-1BCB-5B29-A8BE-944E00F06F78"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Arguments )(
        __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UWPLaunchActivatedEventArgs )(
        __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CApplicationModel_CActivation_CILaunchActivatedEventArgs * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_get_Arguments(This,value) \
    ( (This)->lpVtbl->get_Arguments(This,value) )

#define __x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_get_UWPLaunchActivatedEventArgs(This,value) \
    ( (This)->lpVtbl->get_UWPLaunchActivatedEventArgs(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CILaunchActivatedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IMediaFailedRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.MediaFailedRoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IMediaFailedRoutedEventArgs[] = L"Microsoft.UI.Xaml.IMediaFailedRoutedEventArgs";
/* [object, uuid("A1DCE737-539B-5E54-99AF-75ECE428BF9B"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ErrorTrace )(
        __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs * This,
        /* [retval, out] */HSTRING * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_get_ErrorTrace(This,value) \
    ( (This)->lpVtbl->get_ErrorTrace(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIMediaFailedRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IMemoryInfoPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IMemoryInfoPrivate[] = L"Microsoft.UI.Xaml.IMemoryInfoPrivate";
/* [object, uuid("D11FAA49-8D7C-5C62-9D50-68E875A434BB"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetCountOfDescendantUIElements )(
        __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate * This,
        /* [retval, out] */UINT64 * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetEstimatedSizeOfDescendantImages )(
        __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate * This,
        /* [retval, out] */UINT64 * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_GetCountOfDescendantUIElements(This,result) \
    ( (This)->lpVtbl->GetCountOfDescendantUIElements(This,result) )

#define __x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_GetEstimatedSizeOfDescendantImages(This,result) \
    ( (This)->lpVtbl->GetEstimatedSizeOfDescendantImages(This,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIMemoryInfoPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPointHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PointHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPointHelper[] = L"Microsoft.UI.Xaml.IPointHelper";
/* [object, uuid("06FCC7A4-6099-5F2E-83A5-F3BE0E2C90AA"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIPointHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelper * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelper * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelper * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelper * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelper * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelper * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIPointHelperVtbl;

interface __x_Microsoft_CUI_CXaml_CIPointHelper
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIPointHelperVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIPointHelper_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIPointHelper_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIPointHelper_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIPointHelper_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIPointHelper_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIPointHelper_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPointHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPointHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPointHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PointHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPointHelperStatics[] = L"Microsoft.UI.Xaml.IPointHelperStatics";
/* [object, uuid("B0B2BD44-600B-51B3-A42C-3FD36C1AB042"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIPointHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelperStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelperStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelperStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelperStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelperStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPointHelperStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *FromCoordinates )(
        __x_Microsoft_CUI_CXaml_CIPointHelperStatics * This,
        /* [in] */FLOAT x,
        /* [in] */FLOAT y,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CPoint * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIPointHelperStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIPointHelperStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIPointHelperStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIPointHelperStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIPointHelperStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIPointHelperStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIPointHelperStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIPointHelperStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIPointHelperStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIPointHelperStatics_FromCoordinates(This,x,y,result) \
    ( (This)->lpVtbl->FromCoordinates(This,x,y,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPointHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPointHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyMetadata
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyMetadata
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyMetadata[] = L"Microsoft.UI.Xaml.IPropertyMetadata";
/* [object, uuid("B3644425-9464-5434-B0AE-AFF8D3159FE1"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIPropertyMetadataVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadata * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadata * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadata * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadata * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadata * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadata * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DefaultValue )(
        __x_Microsoft_CUI_CXaml_CIPropertyMetadata * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CreateDefaultValueCallback )(
        __x_Microsoft_CUI_CXaml_CIPropertyMetadata * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback  * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIPropertyMetadataVtbl;

interface __x_Microsoft_CUI_CXaml_CIPropertyMetadata
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIPropertyMetadataVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata_get_DefaultValue(This,value) \
    ( (This)->lpVtbl->get_DefaultValue(This,value) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadata_get_CreateDefaultValueCallback(This,value) \
    ( (This)->lpVtbl->get_CreateDefaultValueCallback(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyMetadata;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadata_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyMetadataFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyMetadata
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyMetadataFactory[] = L"Microsoft.UI.Xaml.IPropertyMetadataFactory";
/* [object, uuid("9F420906-111A-5465-91EE-BED14B3E7FEC"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithDefaultValue )(
        __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory * This,
        /* [in] */IInspectable * defaultValue,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * * value
        );
    HRESULT ( STDMETHODCALLTYPE *CreateInstanceWithDefaultValueAndCallback )(
        __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory * This,
        /* [in] */IInspectable * defaultValue,
        /* [in] */__x_Microsoft_CUI_CXaml_CIPropertyChangedCallback  * propertyChangedCallback,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_CreateInstanceWithDefaultValue(This,defaultValue,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithDefaultValue(This,defaultValue,baseInterface,innerInterface,value) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_CreateInstanceWithDefaultValueAndCallback(This,defaultValue,propertyChangedCallback,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstanceWithDefaultValueAndCallback(This,defaultValue,propertyChangedCallback,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadataFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyMetadataStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyMetadata
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyMetadataStatics[] = L"Microsoft.UI.Xaml.IPropertyMetadataStatics";
/* [object, uuid("37B8ADD4-7A4A-5CF7-A174-235182CD082E"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIPropertyMetadataStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [overload, default_overload] */HRESULT ( STDMETHODCALLTYPE *CreateWithDefaultValue )(
        __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This,
        /* [in] */IInspectable * defaultValue,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * * result
        );
    /* [overload, default_overload] */HRESULT ( STDMETHODCALLTYPE *CreateWithDefaultValueAndCallback )(
        __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This,
        /* [in] */IInspectable * defaultValue,
        /* [in] */__x_Microsoft_CUI_CXaml_CIPropertyChangedCallback  * propertyChangedCallback,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateWithFactory )(
        __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback  * createDefaultValueCallback,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *CreateWithFactoryAndCallback )(
        __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CICreateDefaultValueCallback  * createDefaultValueCallback,
        /* [in] */__x_Microsoft_CUI_CXaml_CIPropertyChangedCallback  * propertyChangedCallback,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyMetadata * * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIPropertyMetadataStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIPropertyMetadataStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_CreateWithDefaultValue(This,defaultValue,result) \
    ( (This)->lpVtbl->CreateWithDefaultValue(This,defaultValue,result) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_CreateWithDefaultValueAndCallback(This,defaultValue,propertyChangedCallback,result) \
    ( (This)->lpVtbl->CreateWithDefaultValueAndCallback(This,defaultValue,propertyChangedCallback,result) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_CreateWithFactory(This,createDefaultValueCallback,result) \
    ( (This)->lpVtbl->CreateWithFactory(This,createDefaultValueCallback,result) )

#define __x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_CreateWithFactoryAndCallback(This,createDefaultValueCallback,propertyChangedCallback,result) \
    ( (This)->lpVtbl->CreateWithFactoryAndCallback(This,createDefaultValueCallback,propertyChangedCallback,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyMetadataStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyPath
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyPath
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyPath[] = L"Microsoft.UI.Xaml.IPropertyPath";
/* [object, uuid("8B0712F6-9E57-53B0-80B1-966A79F60B96"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIPropertyPathVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPath * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPath * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPath * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPath * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPath * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPath * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Path )(
        __x_Microsoft_CUI_CXaml_CIPropertyPath * This,
        /* [retval, out] */HSTRING * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIPropertyPathVtbl;

interface __x_Microsoft_CUI_CXaml_CIPropertyPath
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIPropertyPathVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIPropertyPath_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPath_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPath_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPath_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPath_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPath_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPath_get_Path(This,value) \
    ( (This)->lpVtbl->get_Path(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyPath;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyPath_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IPropertyPathFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.PropertyPath
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IPropertyPathFactory[] = L"Microsoft.UI.Xaml.IPropertyPathFactory";
/* [object, uuid("08A8CCAB-7FF8-5CEC-BD3C-72C98804D989"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIPropertyPathFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPathFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPathFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPathFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPathFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPathFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIPropertyPathFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIPropertyPathFactory * This,
        /* [in] */HSTRING path,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyPath * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIPropertyPathFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIPropertyPathFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIPropertyPathFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIPropertyPathFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPathFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPathFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPathFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPathFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPathFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIPropertyPathFactory_CreateInstance(This,path,value) \
    ( (This)->lpVtbl->CreateInstance(This,path,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIPropertyPathFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIPropertyPathFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRectHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RectHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRectHelper[] = L"Microsoft.UI.Xaml.IRectHelper";
/* [object, uuid("5FECE92A-A3D2-5BC0-ACA1-E9E1FA86AE9D"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIRectHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelper * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelper * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelper * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelper * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelper * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelper * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIRectHelperVtbl;

interface __x_Microsoft_CUI_CXaml_CIRectHelper
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIRectHelperVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIRectHelper_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIRectHelper_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIRectHelper_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIRectHelper_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIRectHelper_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIRectHelper_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRectHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRectHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRectHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RectHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRectHelperStatics[] = L"Microsoft.UI.Xaml.IRectHelperStatics";
/* [object, uuid("A9CF37AD-5430-5086-A39F-74F0D1ED1072"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIRectHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Empty )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * value
        );
    HRESULT ( STDMETHODCALLTYPE *FromCoordinatesAndDimensions )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */FLOAT x,
        /* [in] */FLOAT y,
        /* [in] */FLOAT width,
        /* [in] */FLOAT height,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * result
        );
    HRESULT ( STDMETHODCALLTYPE *FromPoints )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint point1,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint point2,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * result
        );
    HRESULT ( STDMETHODCALLTYPE *FromLocationAndSize )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint location,
        /* [in] */__x_ABI_CWindows_CFoundation_CSize size,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsEmpty )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetBottom )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [retval, out] */FLOAT * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetLeft )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [retval, out] */FLOAT * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetRight )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [retval, out] */FLOAT * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetTop )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [retval, out] */FLOAT * result
        );
    HRESULT ( STDMETHODCALLTYPE *Contains )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint point,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *Equals )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect value,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *Intersect )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect rect,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * result
        );
    /* [overload, default_overload] */HRESULT ( STDMETHODCALLTYPE *UnionWithPoint )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint point,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * result
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *UnionWithRect )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect target,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect rect,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIRectHelperStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIRectHelperStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIRectHelperStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_get_Empty(This,value) \
    ( (This)->lpVtbl->get_Empty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_FromCoordinatesAndDimensions(This,x,y,width,height,result) \
    ( (This)->lpVtbl->FromCoordinatesAndDimensions(This,x,y,width,height,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_FromPoints(This,point1,point2,result) \
    ( (This)->lpVtbl->FromPoints(This,point1,point2,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_FromLocationAndSize(This,location,size,result) \
    ( (This)->lpVtbl->FromLocationAndSize(This,location,size,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_GetIsEmpty(This,target,result) \
    ( (This)->lpVtbl->GetIsEmpty(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_GetBottom(This,target,result) \
    ( (This)->lpVtbl->GetBottom(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_GetLeft(This,target,result) \
    ( (This)->lpVtbl->GetLeft(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_GetRight(This,target,result) \
    ( (This)->lpVtbl->GetRight(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_GetTop(This,target,result) \
    ( (This)->lpVtbl->GetTop(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_Contains(This,target,point,result) \
    ( (This)->lpVtbl->Contains(This,target,point,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_Equals(This,target,value,result) \
    ( (This)->lpVtbl->Equals(This,target,value,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_Intersect(This,target,rect,result) \
    ( (This)->lpVtbl->Intersect(This,target,rect,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_UnionWithPoint(This,target,point,result) \
    ( (This)->lpVtbl->UnionWithPoint(This,target,point,result) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStatics_UnionWithRect(This,target,rect,result) \
    ( (This)->lpVtbl->UnionWithRect(This,target,rect,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRectHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRectHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRectHelperStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRectHelperStaticsPrivate[] = L"Microsoft.UI.Xaml.IRectHelperStaticsPrivate";
/* [object, uuid("08298572-672B-5053-8A13-31110E24314F"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *DipsRectToPhysicalRect )(
        __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect dipsRect,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_DipsRectToPhysicalRect(This,dipsRect,result) \
    ( (This)->lpVtbl->DipsRectToPhysicalRect(This,dipsRect,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRectHelperStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IResourceDictionary
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ResourceDictionary
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IResourceDictionary[] = L"Microsoft.UI.Xaml.IResourceDictionary";
/* [object, uuid("1B690975-A710-5783-A6E1-15836F6186C2"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIResourceDictionaryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionary * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Source )(
        __x_Microsoft_CUI_CXaml_CIResourceDictionary * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CIUriRuntimeClass * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Source )(
        __x_Microsoft_CUI_CXaml_CIResourceDictionary * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CIUriRuntimeClass * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_MergedDictionaries )(
        __x_Microsoft_CUI_CXaml_CIResourceDictionary * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CResourceDictionary * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ThemeDictionaries )(
        __x_Microsoft_CUI_CXaml_CIResourceDictionary * This,
        /* [retval, out] */__FIMap_2_IInspectable_IInspectable * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIResourceDictionaryVtbl;

interface __x_Microsoft_CUI_CXaml_CIResourceDictionary
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIResourceDictionaryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_get_Source(This,value) \
    ( (This)->lpVtbl->get_Source(This,value) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_put_Source(This,value) \
    ( (This)->lpVtbl->put_Source(This,value) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_get_MergedDictionaries(This,value) \
    ( (This)->lpVtbl->get_MergedDictionaries(This,value) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionary_get_ThemeDictionaries(This,value) \
    ( (This)->lpVtbl->get_ThemeDictionaries(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIResourceDictionary;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIResourceDictionary_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IResourceDictionaryFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ResourceDictionary
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IResourceDictionaryFactory[] = L"Microsoft.UI.Xaml.IResourceDictionaryFactory";
/* [object, uuid("EA22A48F-AB71-56F6-A392-D82310C8AA7B"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIResourceDictionary * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIResourceDictionaryFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRoutedEvent
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RoutedEvent
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRoutedEvent[] = L"Microsoft.UI.Xaml.IRoutedEvent";
/* [object, uuid("B2B432BC-EFCA-575E-9D2A-703F8B9C380F"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIRoutedEventVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEvent * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEvent * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEvent * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEvent * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEvent * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEvent * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIRoutedEventVtbl;

interface __x_Microsoft_CUI_CXaml_CIRoutedEvent
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIRoutedEventVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIRoutedEvent_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEvent_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEvent_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEvent_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEvent_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEvent_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRoutedEvent;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRoutedEvent_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRoutedEventArgs[] = L"Microsoft.UI.Xaml.IRoutedEventArgs";
/* [object, uuid("0908C407-1C7D-5DE3-9C50-D971C62EC8EC"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIRoutedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OriginalSource )(
        __x_Microsoft_CUI_CXaml_CIRoutedEventArgs * This,
        /* [retval, out] */IInspectable * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIRoutedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIRoutedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIRoutedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgs_get_OriginalSource(This,value) \
    ( (This)->lpVtbl->get_OriginalSource(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRoutedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IRoutedEventArgsFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.RoutedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IRoutedEventArgsFactory[] = L"Microsoft.UI.Xaml.IRoutedEventArgsFactory";
/* [object, uuid("914B02C7-076B-5B89-98E7-6C373379E9AF"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEventArgs * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIRoutedEventArgsFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IScalarTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ScalarTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IScalarTransition[] = L"Microsoft.UI.Xaml.IScalarTransition";
/* [object, uuid("C2DA2AC8-814C-5889-B2F4-4EBE4B001EE3"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIScalarTransitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransition * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransition * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransition * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransition * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransition * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransition * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Duration )(
        __x_Microsoft_CUI_CXaml_CIScalarTransition * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Duration )(
        __x_Microsoft_CUI_CXaml_CIScalarTransition * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIScalarTransitionVtbl;

interface __x_Microsoft_CUI_CXaml_CIScalarTransition
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIScalarTransitionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIScalarTransition_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransition_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransition_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransition_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransition_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransition_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransition_get_Duration(This,value) \
    ( (This)->lpVtbl->get_Duration(This,value) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransition_put_Duration(This,value) \
    ( (This)->lpVtbl->put_Duration(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIScalarTransition;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIScalarTransition_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IScalarTransitionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ScalarTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IScalarTransitionFactory[] = L"Microsoft.UI.Xaml.IScalarTransitionFactory";
/* [object, uuid("A1650CF8-A15B-54FC-B595-C52491318F58"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIScalarTransitionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIScalarTransition * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIScalarTransitionFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIScalarTransitionFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIScalarTransitionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIScalarTransitionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetter
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Setter
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetter_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetter_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetter[] = L"Microsoft.UI.Xaml.ISetter";
/* [object, uuid("BBD6074D-686F-5AE1-B8DE-5F16AA30B80A"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISetterVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetter * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetter * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetter * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetter * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetter * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetter * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Property )(
        __x_Microsoft_CUI_CXaml_CISetter * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Property )(
        __x_Microsoft_CUI_CXaml_CISetter * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Value )(
        __x_Microsoft_CUI_CXaml_CISetter * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Value )(
        __x_Microsoft_CUI_CXaml_CISetter * This,
        /* [in] */IInspectable * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Target )(
        __x_Microsoft_CUI_CXaml_CISetter * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CITargetPropertyPath * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Target )(
        __x_Microsoft_CUI_CXaml_CISetter * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CITargetPropertyPath * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISetterVtbl;

interface __x_Microsoft_CUI_CXaml_CISetter
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISetterVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISetter_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISetter_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISetter_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISetter_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISetter_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISetter_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CISetter_get_Property(This,value) \
    ( (This)->lpVtbl->get_Property(This,value) )

#define __x_Microsoft_CUI_CXaml_CISetter_put_Property(This,value) \
    ( (This)->lpVtbl->put_Property(This,value) )

#define __x_Microsoft_CUI_CXaml_CISetter_get_Value(This,value) \
    ( (This)->lpVtbl->get_Value(This,value) )

#define __x_Microsoft_CUI_CXaml_CISetter_put_Value(This,value) \
    ( (This)->lpVtbl->put_Value(This,value) )

#define __x_Microsoft_CUI_CXaml_CISetter_get_Target(This,value) \
    ( (This)->lpVtbl->get_Target(This,value) )

#define __x_Microsoft_CUI_CXaml_CISetter_put_Target(This,value) \
    ( (This)->lpVtbl->put_Target(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetter;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetter_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetterBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SetterBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetterBase[] = L"Microsoft.UI.Xaml.ISetterBase";
/* [object, uuid("5A7C1347-CDA3-55BE-BFEF-5C7582213980"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISetterBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBase * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsSealed )(
        __x_Microsoft_CUI_CXaml_CISetterBase * This,
        /* [retval, out] */boolean * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISetterBaseVtbl;

interface __x_Microsoft_CUI_CXaml_CISetterBase
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISetterBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISetterBase_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISetterBase_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISetterBase_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISetterBase_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISetterBase_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISetterBase_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CISetterBase_get_IsSealed(This,value) \
    ( (This)->lpVtbl->get_IsSealed(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetterBase;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetterBase_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetterBaseCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SetterBaseCollection
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetterBaseCollection[] = L"Microsoft.UI.Xaml.ISetterBaseCollection";
/* [object, uuid("63BF7C0F-B290-5C0C-9185-3338CD350D7F"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISetterBaseCollectionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseCollection * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseCollection * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseCollection * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseCollection * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseCollection * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseCollection * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsSealed )(
        __x_Microsoft_CUI_CXaml_CISetterBaseCollection * This,
        /* [retval, out] */boolean * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISetterBaseCollectionVtbl;

interface __x_Microsoft_CUI_CXaml_CISetterBaseCollection
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISetterBaseCollectionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISetterBaseCollection_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseCollection_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseCollection_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseCollection_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseCollection_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseCollection_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseCollection_get_IsSealed(This,value) \
    ( (This)->lpVtbl->get_IsSealed(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetterBaseCollection;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetterBaseCollection_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetterBaseFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SetterBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetterBaseFactory[] = L"Microsoft.UI.Xaml.ISetterBaseFactory";
/* [object, uuid("780A1D2F-C4BE-5707-8A8A-4550DC22583E"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISetterBaseFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterBaseFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISetterBaseFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CISetterBaseFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISetterBaseFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISetterBaseFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISetterBaseFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetterBaseFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetterBaseFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISetterFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Setter
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISetterFactory[] = L"Microsoft.UI.Xaml.ISetterFactory";
/* [object, uuid("13910A06-A327-5407-AE91-B9D2CC3A7AB5"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISetterFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISetterFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CISetterFactory * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * targetProperty,
        /* [in] */IInspectable * value,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CISetter * * instance
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISetterFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CISetterFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISetterFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISetterFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISetterFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISetterFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISetterFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISetterFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISetterFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CISetterFactory_CreateInstance(This,targetProperty,value,instance) \
    ( (This)->lpVtbl->CreateInstance(This,targetProperty,value,instance) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISetterFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISetterFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISizeChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SizeChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISizeChangedEventArgs[] = L"Microsoft.UI.Xaml.ISizeChangedEventArgs";
/* [object, uuid("FE76324E-6DFB-58B1-9DCD-886CA8F9A2EA"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISizeChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PreviousSize )(
        __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NewSize )(
        __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISizeChangedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISizeChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_get_PreviousSize(This,value) \
    ( (This)->lpVtbl->get_PreviousSize(This,value) )

#define __x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_get_NewSize(This,value) \
    ( (This)->lpVtbl->get_NewSize(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISizeChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISizeChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISizeHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SizeHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISizeHelper[] = L"Microsoft.UI.Xaml.ISizeHelper";
/* [object, uuid("5DF9EEE1-A2A8-5E55-8668-AFEDC0B36DEB"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISizeHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelper * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelper * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelper * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelper * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelper * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelper * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISizeHelperVtbl;

interface __x_Microsoft_CUI_CXaml_CISizeHelper
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISizeHelperVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISizeHelper_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISizeHelper_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISizeHelper_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISizeHelper_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISizeHelper_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISizeHelper_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISizeHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISizeHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISizeHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.SizeHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISizeHelperStatics[] = L"Microsoft.UI.Xaml.ISizeHelperStatics";
/* [object, uuid("CFF1B27F-84F1-5B14-9459-764AF5714FE5"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISizeHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Empty )(
        __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * value
        );
    HRESULT ( STDMETHODCALLTYPE *FromDimensions )(
        __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This,
        /* [in] */FLOAT width,
        /* [in] */FLOAT height,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetIsEmpty )(
        __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CSize target,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *Equals )(
        __x_Microsoft_CUI_CXaml_CISizeHelperStatics * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CSize target,
        /* [in] */__x_ABI_CWindows_CFoundation_CSize value,
        /* [retval, out] */boolean * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISizeHelperStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CISizeHelperStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISizeHelperStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_get_Empty(This,value) \
    ( (This)->lpVtbl->get_Empty(This,value) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_FromDimensions(This,width,height,result) \
    ( (This)->lpVtbl->FromDimensions(This,width,height,result) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_GetIsEmpty(This,target,result) \
    ( (This)->lpVtbl->GetIsEmpty(This,target,result) )

#define __x_Microsoft_CUI_CXaml_CISizeHelperStatics_Equals(This,target,value,result) \
    ( (This)->lpVtbl->Equals(This,target,value,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISizeHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISizeHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ISourceInfoPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ISourceInfoPrivate[] = L"Microsoft.UI.Xaml.ISourceInfoPrivate";
/* [object, uuid("3ACB731C-C37D-5F03-9596-AC62990F520C"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CISourceInfoPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Line )(
        __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
        /* [retval, out] */INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Line )(
        __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Column )(
        __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
        /* [retval, out] */INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Column )(
        __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
        /* [in] */INT32 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ParseUri )(
        __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ParseUri )(
        __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XbfHash )(
        __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XbfHash )(
        __x_Microsoft_CUI_CXaml_CISourceInfoPrivate * This,
        /* [in] */HSTRING value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CISourceInfoPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CISourceInfoPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CISourceInfoPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_get_Line(This,value) \
    ( (This)->lpVtbl->get_Line(This,value) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_put_Line(This,value) \
    ( (This)->lpVtbl->put_Line(This,value) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_get_Column(This,value) \
    ( (This)->lpVtbl->get_Column(This,value) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_put_Column(This,value) \
    ( (This)->lpVtbl->put_Column(This,value) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_get_ParseUri(This,value) \
    ( (This)->lpVtbl->get_ParseUri(This,value) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_put_ParseUri(This,value) \
    ( (This)->lpVtbl->put_ParseUri(This,value) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_get_XbfHash(This,value) \
    ( (This)->lpVtbl->get_XbfHash(This,value) )

#define __x_Microsoft_CUI_CXaml_CISourceInfoPrivate_put_XbfHash(This,value) \
    ( (This)->lpVtbl->put_XbfHash(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CISourceInfoPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CISourceInfoPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTrigger[] = L"Microsoft.UI.Xaml.IStateTrigger";
/* [object, uuid("7B098126-1DAB-5B58-ACA7-F2B7DE2E1033"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIStateTriggerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTrigger * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTrigger * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTrigger * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTrigger * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTrigger * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTrigger * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsActive )(
        __x_Microsoft_CUI_CXaml_CIStateTrigger * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsActive )(
        __x_Microsoft_CUI_CXaml_CIStateTrigger * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIStateTriggerVtbl;

interface __x_Microsoft_CUI_CXaml_CIStateTrigger
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIStateTriggerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIStateTrigger_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIStateTrigger_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTrigger_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTrigger_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIStateTrigger_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIStateTrigger_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIStateTrigger_get_IsActive(This,value) \
    ( (This)->lpVtbl->get_IsActive(This,value) )

#define __x_Microsoft_CUI_CXaml_CIStateTrigger_put_IsActive(This,value) \
    ( (This)->lpVtbl->put_IsActive(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTrigger;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTrigger_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTriggerBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTriggerBase[] = L"Microsoft.UI.Xaml.IStateTriggerBase";
/* [object, uuid("F07B0F7B-5B94-58AE-8717-22AB093BC131"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIStateTriggerBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBase * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIStateTriggerBaseVtbl;

interface __x_Microsoft_CUI_CXaml_CIStateTriggerBase
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIStateTriggerBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIStateTriggerBase_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBase_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBase_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBase_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBase_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBase_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTriggerBase;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBase_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTriggerBaseFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTriggerBaseFactory[] = L"Microsoft.UI.Xaml.IStateTriggerBaseFactory";
/* [object, uuid("E7724D65-FC7E-5C67-BB84-B4C7B020ADC3"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIStateTriggerBase * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBaseFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTriggerBaseProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTriggerBaseProtected[] = L"Microsoft.UI.Xaml.IStateTriggerBaseProtected";
/* [object, uuid("2F695047-335B-5C00-A0D4-2A8FA54544C6"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtectedVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SetActive )(
        __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected * This,
        /* [in] */boolean IsActive
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtectedVtbl;

interface __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtectedVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_SetActive(This,IsActive) \
    ( (This)->lpVtbl->SetActive(This,IsActive) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerBaseProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStateTriggerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.StateTrigger
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStateTriggerStatics[] = L"Microsoft.UI.Xaml.IStateTriggerStatics";
/* [object, uuid("BD60C019-833B-5432-A41D-89D72410EB47"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIStateTriggerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStateTriggerStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsActiveProperty )(
        __x_Microsoft_CUI_CXaml_CIStateTriggerStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIStateTriggerStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIStateTriggerStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIStateTriggerStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIStateTriggerStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIStateTriggerStatics_get_IsActiveProperty(This,value) \
    ( (This)->lpVtbl->get_IsActiveProperty(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStateTriggerStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStateTriggerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStyle
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Style
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStyle_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStyle_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStyle[] = L"Microsoft.UI.Xaml.IStyle";
/* [object, uuid("65E1D164-572F-5B0E-A80F-9C02441FAC49"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIStyleVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyle * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyle * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyle * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyle * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyle * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyle * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsSealed )(
        __x_Microsoft_CUI_CXaml_CIStyle * This,
        /* [retval, out] */boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Setters )(
        __x_Microsoft_CUI_CXaml_CIStyle * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CISetterBaseCollection * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TargetType )(
        __x_Microsoft_CUI_CXaml_CIStyle * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TargetType )(
        __x_Microsoft_CUI_CXaml_CIStyle * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BasedOn )(
        __x_Microsoft_CUI_CXaml_CIStyle * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIStyle * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_BasedOn )(
        __x_Microsoft_CUI_CXaml_CIStyle * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIStyle * value
        );
    HRESULT ( STDMETHODCALLTYPE *Seal )(
        __x_Microsoft_CUI_CXaml_CIStyle * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIStyleVtbl;

interface __x_Microsoft_CUI_CXaml_CIStyle
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIStyleVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIStyle_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIStyle_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIStyle_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIStyle_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIStyle_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIStyle_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIStyle_get_IsSealed(This,value) \
    ( (This)->lpVtbl->get_IsSealed(This,value) )

#define __x_Microsoft_CUI_CXaml_CIStyle_get_Setters(This,value) \
    ( (This)->lpVtbl->get_Setters(This,value) )

#define __x_Microsoft_CUI_CXaml_CIStyle_get_TargetType(This,value) \
    ( (This)->lpVtbl->get_TargetType(This,value) )

#define __x_Microsoft_CUI_CXaml_CIStyle_put_TargetType(This,value) \
    ( (This)->lpVtbl->put_TargetType(This,value) )

#define __x_Microsoft_CUI_CXaml_CIStyle_get_BasedOn(This,value) \
    ( (This)->lpVtbl->get_BasedOn(This,value) )

#define __x_Microsoft_CUI_CXaml_CIStyle_put_BasedOn(This,value) \
    ( (This)->lpVtbl->put_BasedOn(This,value) )

#define __x_Microsoft_CUI_CXaml_CIStyle_Seal(This) \
    ( (This)->lpVtbl->Seal(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStyle;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStyle_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IStyleFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Style
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IStyleFactory[] = L"Microsoft.UI.Xaml.IStyleFactory";
/* [object, uuid("C2D924A2-3862-517C-B083-9A9120D7302D"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIStyleFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyleFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyleFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyleFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyleFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyleFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIStyleFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIStyleFactory * This,
        /* [in] */__x_ABI_CWindows_CUI_CXaml_CInterop_CTypeName targetType,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIStyle * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIStyleFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIStyleFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIStyleFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIStyleFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIStyleFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIStyleFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIStyleFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIStyleFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIStyleFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIStyleFactory_CreateInstance(This,targetType,value) \
    ( (This)->lpVtbl->CreateInstance(This,targetType,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIStyleFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIStyleFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITargetPropertyPath
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TargetPropertyPath
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITargetPropertyPath[] = L"Microsoft.UI.Xaml.ITargetPropertyPath";
/* [object, uuid("B1442F0E-F66B-531C-979B-193FD344E2A8"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CITargetPropertyPathVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Path )(
        __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIPropertyPath * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Path )(
        __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIPropertyPath * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Target )(
        __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This,
        /* [retval, out] */IInspectable * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Target )(
        __x_Microsoft_CUI_CXaml_CITargetPropertyPath * This,
        /* [in] */IInspectable * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CITargetPropertyPathVtbl;

interface __x_Microsoft_CUI_CXaml_CITargetPropertyPath
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CITargetPropertyPathVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_get_Path(This,value) \
    ( (This)->lpVtbl->get_Path(This,value) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_put_Path(This,value) \
    ( (This)->lpVtbl->put_Path(This,value) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_get_Target(This,value) \
    ( (This)->lpVtbl->get_Target(This,value) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPath_put_Target(This,value) \
    ( (This)->lpVtbl->put_Target(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITargetPropertyPath;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITargetPropertyPath_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITargetPropertyPathFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TargetPropertyPath
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITargetPropertyPathFactory[] = L"Microsoft.UI.Xaml.ITargetPropertyPathFactory";
/* [object, uuid("894CB11D-5C16-555B-B661-F41B29FD9B21"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * targetProperty,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CITargetPropertyPath * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_CreateInstance(This,targetProperty,value) \
    ( (This)->lpVtbl->CreateInstance(This,targetProperty,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITargetPropertyPathFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IThicknessHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ThicknessHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IThicknessHelper[] = L"Microsoft.UI.Xaml.IThicknessHelper";
/* [object, uuid("5E496347-3C49-55EE-B442-530789B42B6F"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIThicknessHelperVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelper * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelper * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelper * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelper * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelper * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelper * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIThicknessHelperVtbl;

interface __x_Microsoft_CUI_CXaml_CIThicknessHelper
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIThicknessHelperVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIThicknessHelper_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelper_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelper_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelper_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelper_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelper_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIThicknessHelper;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIThicknessHelper_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IThicknessHelperStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.ThicknessHelper
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IThicknessHelperStatics[] = L"Microsoft.UI.Xaml.IThicknessHelperStatics";
/* [object, uuid("0E3B81CE-D278-577F-98EA-1B6010F86D7F"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIThicknessHelperStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *FromLengths )(
        __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics * This,
        /* [in] */DOUBLE left,
        /* [in] */DOUBLE top,
        /* [in] */DOUBLE right,
        /* [in] */DOUBLE bottom,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CThickness * result
        );
    HRESULT ( STDMETHODCALLTYPE *FromUniformLength )(
        __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics * This,
        /* [in] */DOUBLE uniformLength,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CThickness * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIThicknessHelperStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIThicknessHelperStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_FromLengths(This,left,top,right,bottom,result) \
    ( (This)->lpVtbl->FromLengths(This,left,top,right,bottom,result) )

#define __x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_FromUniformLength(This,uniformLength,result) \
    ( (This)->lpVtbl->FromUniformLength(This,uniformLength,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIThicknessHelperStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIThicknessHelperStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITriggerAction
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TriggerAction
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITriggerAction[] = L"Microsoft.UI.Xaml.ITriggerAction";
/* [object, uuid("1FA35464-A690-586C-AEDF-6C88CAC7D14A"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CITriggerActionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerAction * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CITriggerActionVtbl;

interface __x_Microsoft_CUI_CXaml_CITriggerAction
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CITriggerActionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CITriggerAction_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CITriggerAction_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CITriggerAction_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CITriggerAction_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CITriggerAction_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CITriggerAction_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITriggerAction;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITriggerAction_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITriggerActionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TriggerAction
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITriggerActionFactory[] = L"Microsoft.UI.Xaml.ITriggerActionFactory";
/* [object, uuid("1E1FAF1A-F614-554A-822A-D98FE46575D1"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CITriggerActionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerActionFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerActionFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerActionFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerActionFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerActionFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerActionFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CITriggerActionFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CITriggerActionFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CITriggerActionFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CITriggerActionFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CITriggerActionFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CITriggerActionFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CITriggerActionFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CITriggerActionFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CITriggerActionFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITriggerActionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITriggerActionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITriggerBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITriggerBase[] = L"Microsoft.UI.Xaml.ITriggerBase";
/* [object, uuid("D37DA89D-0D71-58CF-A901-99A7D3E5E434"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CITriggerBaseVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBase * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CITriggerBaseVtbl;

interface __x_Microsoft_CUI_CXaml_CITriggerBase
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CITriggerBaseVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CITriggerBase_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CITriggerBase_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CITriggerBase_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CITriggerBase_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CITriggerBase_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CITriggerBase_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITriggerBase;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITriggerBase_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.ITriggerBaseFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.TriggerBase
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_ITriggerBaseFactory[] = L"Microsoft.UI.Xaml.ITriggerBaseFactory";
/* [object, uuid("23088EAA-17EC-51B2-B181-5BEDFA8B8FA4"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CITriggerBaseFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBaseFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBaseFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBaseFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBaseFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBaseFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CITriggerBaseFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CITriggerBaseFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CITriggerBaseFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CITriggerBaseFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CITriggerBaseFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CITriggerBaseFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CITriggerBaseFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CITriggerBaseFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CITriggerBaseFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CITriggerBaseFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CITriggerBaseFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CITriggerBaseFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElement
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElement[] = L"Microsoft.UI.Xaml.IUIElement";
/* [object, uuid("BA741F05-21DC-5B24-9D8B-B430CA730C5D"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUIElementVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElement * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DesiredSize )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowDrop )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AllowDrop )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Opacity )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Opacity )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Clip )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Clip )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CIRectangleGeometry * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RenderTransform )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CITransform * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RenderTransform )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CITransform * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Projection )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CIProjection * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Projection )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CIProjection * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Transform3D )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Transform3D )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CMedia3D_CITransform3D * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RenderTransformOrigin )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CPoint * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RenderTransformOrigin )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsHitTestVisible )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsHitTestVisible )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Visibility )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CVisibility * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Visibility )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CVisibility value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RenderSize )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UseLayoutRounding )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_UseLayoutRounding )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Transitions )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Transitions )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FIVector_1_Microsoft__CUI__CXaml__CMedia__CAnimation__CTransition * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CacheMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CICacheMode * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CacheMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CICacheMode * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsTapEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsTapEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsDoubleTapEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsDoubleTapEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanDrag )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CanDrag )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsRightTapEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsRightTapEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsHoldingEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsHoldingEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ManipulationMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CManipulationModes * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ManipulationMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CManipulationModes value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerCaptures )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__FIVectorView_1_Microsoft__CUI__CXaml__CInput__CPointer * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ContextFlyout )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ContextFlyout )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CControls_CPrimitives_CIFlyoutBase * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CompositeMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CElementCompositeMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CompositeMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CElementCompositeMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Lights )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CMedia__CXamlLight * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanBeScrollAnchor )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CanBeScrollAnchor )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ExitDisplayModeOnAccessKeyInvoked )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ExitDisplayModeOnAccessKeyInvoked )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsAccessKeyScope )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsAccessKeyScope )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AccessKeyScopeOwner )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AccessKeyScopeOwner )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AccessKey )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_AccessKey )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyTipPlacementMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CKeyTipPlacementMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_KeyTipPlacementMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CKeyTipPlacementMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyTipHorizontalOffset )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_KeyTipHorizontalOffset )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyTipVerticalOffset )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_KeyTipVerticalOffset )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyTipTarget )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_KeyTipTarget )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusKeyboardNavigation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusKeyboardNavigationMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusKeyboardNavigation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusKeyboardNavigationMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusUpNavigationStrategy )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusUpNavigationStrategy )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusDownNavigationStrategy )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusDownNavigationStrategy )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusLeftNavigationStrategy )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusLeftNavigationStrategy )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusRightNavigationStrategy )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusRightNavigationStrategy )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CXYFocusNavigationStrategy value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyboardAccelerators )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CInput__CKeyboardAccelerator * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorPlacementTarget )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_KeyboardAcceleratorPlacementTarget )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorPlacementMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CKeyboardAcceleratorPlacementMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_KeyboardAcceleratorPlacementMode )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CKeyboardAcceleratorPlacementMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HighContrastAdjustment )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CElementHighContrastAdjustment * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_HighContrastAdjustment )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CElementHighContrastAdjustment value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TabFocusNavigation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CInput_CKeyboardNavigationMode * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TabFocusNavigation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CKeyboardNavigationMode value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OpacityTransition )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIScalarTransition * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OpacityTransition )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIScalarTransition * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Translation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Translation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TranslationTransition )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVector3Transition * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TranslationTransition )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVector3Transition * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Rotation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */FLOAT * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Rotation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */FLOAT value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationTransition )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIScalarTransition * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationTransition )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIScalarTransition * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Scale )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Scale )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ScaleTransition )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVector3Transition * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_ScaleTransition )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVector3Transition * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransformMatrix )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransformMatrix )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CMatrix4x4 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CenterPoint )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_CenterPoint )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RotationAxis )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RotationAxis )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualOffset )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector3 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ActualSize )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CNumerics_CVector2 * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XamlRoot )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIXamlRoot * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XamlRoot )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIXamlRoot * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Shadow )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CIShadow * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Shadow )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CIShadow * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RasterizationScale )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_RasterizationScale )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */DOUBLE value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusState )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CFocusState * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UseSystemFocusVisuals )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_UseSystemFocusVisuals )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusLeft )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusLeft )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusRight )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusRight )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusUp )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusUp )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusDown )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyObject * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_XYFocusDown )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsTabStop )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_IsTabStop )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TabIndex )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */INT32 * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TabIndex )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */INT32 value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_KeyUp )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_KeyUp )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_KeyDown )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_KeyDown )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_GotFocus )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIRoutedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_GotFocus )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_LostFocus )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIRoutedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_LostFocus )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_DragStarting )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDragStartingEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_DragStarting )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_DropCompleted )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CDropCompletedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_DropCompleted )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_CharacterReceived )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CCharacterReceivedRoutedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_CharacterReceived )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_DragEnter )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDragEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_DragEnter )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_DragLeave )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDragEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_DragLeave )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_DragOver )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDragEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_DragOver )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Drop )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDragEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Drop )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PointerPressed )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PointerPressed )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PointerMoved )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PointerMoved )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PointerReleased )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PointerReleased )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PointerEntered )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PointerEntered )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PointerExited )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PointerExited )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PointerCaptureLost )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PointerCaptureLost )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PointerCanceled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PointerCanceled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PointerWheelChanged )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointerEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PointerWheelChanged )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Tapped )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CITappedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Tapped )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_DoubleTapped )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIDoubleTappedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_DoubleTapped )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Holding )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIHoldingEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Holding )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ContextRequested )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CContextRequestedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ContextRequested )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ContextCanceled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CRoutedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ContextCanceled )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_RightTapped )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIRightTappedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_RightTapped )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ManipulationStarting )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIManipulationStartingEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ManipulationStarting )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ManipulationInertiaStarting )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIManipulationInertiaStartingEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ManipulationInertiaStarting )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ManipulationStarted )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIManipulationStartedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ManipulationStarted )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ManipulationDelta )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIManipulationDeltaEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ManipulationDelta )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ManipulationCompleted )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIManipulationCompletedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ManipulationCompleted )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_AccessKeyDisplayRequested )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayRequestedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_AccessKeyDisplayRequested )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_AccessKeyDisplayDismissed )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyDisplayDismissedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_AccessKeyDisplayDismissed )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_AccessKeyInvoked )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CAccessKeyInvokedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_AccessKeyInvoked )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_ProcessKeyboardAccelerators )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CProcessKeyboardAcceleratorEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_ProcessKeyboardAccelerators )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_GettingFocus )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CGettingFocusEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_GettingFocus )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_LosingFocus )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CLosingFocusEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_LosingFocus )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_NoFocusCandidateFound )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CInput__CNoFocusCandidateFoundEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_NoFocusCandidateFound )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PreviewKeyDown )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PreviewKeyDown )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_PreviewKeyUp )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIKeyEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_PreviewKeyUp )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_BringIntoViewRequested )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CUIElement_Microsoft__CUI__CXaml__CBringIntoViewRequestedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_BringIntoViewRequested )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Measure )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CSize availableSize
        );
    HRESULT ( STDMETHODCALLTYPE *Arrange )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect finalRect
        );
    HRESULT ( STDMETHODCALLTYPE *CapturePointer )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointer * value,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *ReleasePointerCapture )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointer * value
        );
    HRESULT ( STDMETHODCALLTYPE *ReleasePointerCaptures )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This
        );
    HRESULT ( STDMETHODCALLTYPE *AddHandler )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * routedEvent,
        /* [in] */IInspectable * handler,
        /* [in] */boolean handledEventsToo
        );
    HRESULT ( STDMETHODCALLTYPE *RemoveHandler )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * routedEvent,
        /* [in] */IInspectable * handler
        );
    HRESULT ( STDMETHODCALLTYPE *TransformToVisual )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * visual,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CIGeneralTransform * * result
        );
    HRESULT ( STDMETHODCALLTYPE *InvalidateMeasure )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This
        );
    HRESULT ( STDMETHODCALLTYPE *InvalidateArrange )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This
        );
    HRESULT ( STDMETHODCALLTYPE *UpdateLayout )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This
        );
    HRESULT ( STDMETHODCALLTYPE *CancelDirectManipulations )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *StartDragAsync )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_ABI_CWindows_CUI_CInput_CIPointerPoint * pointerPoint,
        /* [retval, out] */__FIAsyncOperation_1_Windows__CApplicationModel__CDataTransfer__CDataPackageOperation * * operation
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *StartBringIntoView )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This
        );
    /* [overload] */HRESULT ( STDMETHODCALLTYPE *StartBringIntoViewWithOptions )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIBringIntoViewOptions * options
        );
    HRESULT ( STDMETHODCALLTYPE *TryInvokeKeyboardAccelerator )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *StartAnimation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimationBase * animation
        );
    HRESULT ( STDMETHODCALLTYPE *StopAnimation )(
        __x_Microsoft_CUI_CXaml_CIUIElement * This,
        /* [in] */__x_Microsoft_CUI_CComposition_CICompositionAnimationBase * animation
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUIElementVtbl;

interface __x_Microsoft_CUI_CXaml_CIUIElement
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUIElementVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUIElement_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_DesiredSize(This,value) \
    ( (This)->lpVtbl->get_DesiredSize(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_AllowDrop(This,value) \
    ( (This)->lpVtbl->get_AllowDrop(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_AllowDrop(This,value) \
    ( (This)->lpVtbl->put_AllowDrop(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Opacity(This,value) \
    ( (This)->lpVtbl->get_Opacity(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Opacity(This,value) \
    ( (This)->lpVtbl->put_Opacity(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Clip(This,value) \
    ( (This)->lpVtbl->get_Clip(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Clip(This,value) \
    ( (This)->lpVtbl->put_Clip(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_RenderTransform(This,value) \
    ( (This)->lpVtbl->get_RenderTransform(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_RenderTransform(This,value) \
    ( (This)->lpVtbl->put_RenderTransform(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Projection(This,value) \
    ( (This)->lpVtbl->get_Projection(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Projection(This,value) \
    ( (This)->lpVtbl->put_Projection(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Transform3D(This,value) \
    ( (This)->lpVtbl->get_Transform3D(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Transform3D(This,value) \
    ( (This)->lpVtbl->put_Transform3D(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_RenderTransformOrigin(This,value) \
    ( (This)->lpVtbl->get_RenderTransformOrigin(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_RenderTransformOrigin(This,value) \
    ( (This)->lpVtbl->put_RenderTransformOrigin(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_IsHitTestVisible(This,value) \
    ( (This)->lpVtbl->get_IsHitTestVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_IsHitTestVisible(This,value) \
    ( (This)->lpVtbl->put_IsHitTestVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Visibility(This,value) \
    ( (This)->lpVtbl->get_Visibility(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Visibility(This,value) \
    ( (This)->lpVtbl->put_Visibility(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_RenderSize(This,value) \
    ( (This)->lpVtbl->get_RenderSize(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_UseLayoutRounding(This,value) \
    ( (This)->lpVtbl->get_UseLayoutRounding(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_UseLayoutRounding(This,value) \
    ( (This)->lpVtbl->put_UseLayoutRounding(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Transitions(This,value) \
    ( (This)->lpVtbl->get_Transitions(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Transitions(This,value) \
    ( (This)->lpVtbl->put_Transitions(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_CacheMode(This,value) \
    ( (This)->lpVtbl->get_CacheMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_CacheMode(This,value) \
    ( (This)->lpVtbl->put_CacheMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_IsTapEnabled(This,value) \
    ( (This)->lpVtbl->get_IsTapEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_IsTapEnabled(This,value) \
    ( (This)->lpVtbl->put_IsTapEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_IsDoubleTapEnabled(This,value) \
    ( (This)->lpVtbl->get_IsDoubleTapEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_IsDoubleTapEnabled(This,value) \
    ( (This)->lpVtbl->put_IsDoubleTapEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_CanDrag(This,value) \
    ( (This)->lpVtbl->get_CanDrag(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_CanDrag(This,value) \
    ( (This)->lpVtbl->put_CanDrag(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_IsRightTapEnabled(This,value) \
    ( (This)->lpVtbl->get_IsRightTapEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_IsRightTapEnabled(This,value) \
    ( (This)->lpVtbl->put_IsRightTapEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_IsHoldingEnabled(This,value) \
    ( (This)->lpVtbl->get_IsHoldingEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_IsHoldingEnabled(This,value) \
    ( (This)->lpVtbl->put_IsHoldingEnabled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_ManipulationMode(This,value) \
    ( (This)->lpVtbl->get_ManipulationMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_ManipulationMode(This,value) \
    ( (This)->lpVtbl->put_ManipulationMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_PointerCaptures(This,value) \
    ( (This)->lpVtbl->get_PointerCaptures(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_ContextFlyout(This,value) \
    ( (This)->lpVtbl->get_ContextFlyout(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_ContextFlyout(This,value) \
    ( (This)->lpVtbl->put_ContextFlyout(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_CompositeMode(This,value) \
    ( (This)->lpVtbl->get_CompositeMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_CompositeMode(This,value) \
    ( (This)->lpVtbl->put_CompositeMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Lights(This,value) \
    ( (This)->lpVtbl->get_Lights(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_CanBeScrollAnchor(This,value) \
    ( (This)->lpVtbl->get_CanBeScrollAnchor(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_CanBeScrollAnchor(This,value) \
    ( (This)->lpVtbl->put_CanBeScrollAnchor(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_ExitDisplayModeOnAccessKeyInvoked(This,value) \
    ( (This)->lpVtbl->get_ExitDisplayModeOnAccessKeyInvoked(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_ExitDisplayModeOnAccessKeyInvoked(This,value) \
    ( (This)->lpVtbl->put_ExitDisplayModeOnAccessKeyInvoked(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_IsAccessKeyScope(This,value) \
    ( (This)->lpVtbl->get_IsAccessKeyScope(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_IsAccessKeyScope(This,value) \
    ( (This)->lpVtbl->put_IsAccessKeyScope(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_AccessKeyScopeOwner(This,value) \
    ( (This)->lpVtbl->get_AccessKeyScopeOwner(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_AccessKeyScopeOwner(This,value) \
    ( (This)->lpVtbl->put_AccessKeyScopeOwner(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_AccessKey(This,value) \
    ( (This)->lpVtbl->get_AccessKey(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_AccessKey(This,value) \
    ( (This)->lpVtbl->put_AccessKey(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_KeyTipPlacementMode(This,value) \
    ( (This)->lpVtbl->get_KeyTipPlacementMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_KeyTipPlacementMode(This,value) \
    ( (This)->lpVtbl->put_KeyTipPlacementMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_KeyTipHorizontalOffset(This,value) \
    ( (This)->lpVtbl->get_KeyTipHorizontalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_KeyTipHorizontalOffset(This,value) \
    ( (This)->lpVtbl->put_KeyTipHorizontalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_KeyTipVerticalOffset(This,value) \
    ( (This)->lpVtbl->get_KeyTipVerticalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_KeyTipVerticalOffset(This,value) \
    ( (This)->lpVtbl->put_KeyTipVerticalOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_KeyTipTarget(This,value) \
    ( (This)->lpVtbl->get_KeyTipTarget(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_KeyTipTarget(This,value) \
    ( (This)->lpVtbl->put_KeyTipTarget(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusKeyboardNavigation(This,value) \
    ( (This)->lpVtbl->get_XYFocusKeyboardNavigation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusKeyboardNavigation(This,value) \
    ( (This)->lpVtbl->put_XYFocusKeyboardNavigation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusUpNavigationStrategy(This,value) \
    ( (This)->lpVtbl->get_XYFocusUpNavigationStrategy(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusUpNavigationStrategy(This,value) \
    ( (This)->lpVtbl->put_XYFocusUpNavigationStrategy(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusDownNavigationStrategy(This,value) \
    ( (This)->lpVtbl->get_XYFocusDownNavigationStrategy(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusDownNavigationStrategy(This,value) \
    ( (This)->lpVtbl->put_XYFocusDownNavigationStrategy(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusLeftNavigationStrategy(This,value) \
    ( (This)->lpVtbl->get_XYFocusLeftNavigationStrategy(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusLeftNavigationStrategy(This,value) \
    ( (This)->lpVtbl->put_XYFocusLeftNavigationStrategy(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusRightNavigationStrategy(This,value) \
    ( (This)->lpVtbl->get_XYFocusRightNavigationStrategy(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusRightNavigationStrategy(This,value) \
    ( (This)->lpVtbl->put_XYFocusRightNavigationStrategy(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_KeyboardAccelerators(This,value) \
    ( (This)->lpVtbl->get_KeyboardAccelerators(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_KeyboardAcceleratorPlacementTarget(This,value) \
    ( (This)->lpVtbl->get_KeyboardAcceleratorPlacementTarget(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_KeyboardAcceleratorPlacementTarget(This,value) \
    ( (This)->lpVtbl->put_KeyboardAcceleratorPlacementTarget(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_KeyboardAcceleratorPlacementMode(This,value) \
    ( (This)->lpVtbl->get_KeyboardAcceleratorPlacementMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_KeyboardAcceleratorPlacementMode(This,value) \
    ( (This)->lpVtbl->put_KeyboardAcceleratorPlacementMode(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_HighContrastAdjustment(This,value) \
    ( (This)->lpVtbl->get_HighContrastAdjustment(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_HighContrastAdjustment(This,value) \
    ( (This)->lpVtbl->put_HighContrastAdjustment(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_TabFocusNavigation(This,value) \
    ( (This)->lpVtbl->get_TabFocusNavigation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_TabFocusNavigation(This,value) \
    ( (This)->lpVtbl->put_TabFocusNavigation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_OpacityTransition(This,value) \
    ( (This)->lpVtbl->get_OpacityTransition(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_OpacityTransition(This,value) \
    ( (This)->lpVtbl->put_OpacityTransition(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Translation(This,value) \
    ( (This)->lpVtbl->get_Translation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Translation(This,value) \
    ( (This)->lpVtbl->put_Translation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_TranslationTransition(This,value) \
    ( (This)->lpVtbl->get_TranslationTransition(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_TranslationTransition(This,value) \
    ( (This)->lpVtbl->put_TranslationTransition(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Rotation(This,value) \
    ( (This)->lpVtbl->get_Rotation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Rotation(This,value) \
    ( (This)->lpVtbl->put_Rotation(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_RotationTransition(This,value) \
    ( (This)->lpVtbl->get_RotationTransition(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_RotationTransition(This,value) \
    ( (This)->lpVtbl->put_RotationTransition(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Scale(This,value) \
    ( (This)->lpVtbl->get_Scale(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Scale(This,value) \
    ( (This)->lpVtbl->put_Scale(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_ScaleTransition(This,value) \
    ( (This)->lpVtbl->get_ScaleTransition(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_ScaleTransition(This,value) \
    ( (This)->lpVtbl->put_ScaleTransition(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_TransformMatrix(This,value) \
    ( (This)->lpVtbl->get_TransformMatrix(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_TransformMatrix(This,value) \
    ( (This)->lpVtbl->put_TransformMatrix(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_CenterPoint(This,value) \
    ( (This)->lpVtbl->get_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_CenterPoint(This,value) \
    ( (This)->lpVtbl->put_CenterPoint(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_RotationAxis(This,value) \
    ( (This)->lpVtbl->get_RotationAxis(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_RotationAxis(This,value) \
    ( (This)->lpVtbl->put_RotationAxis(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_ActualOffset(This,value) \
    ( (This)->lpVtbl->get_ActualOffset(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_ActualSize(This,value) \
    ( (This)->lpVtbl->get_ActualSize(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XamlRoot(This,value) \
    ( (This)->lpVtbl->get_XamlRoot(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XamlRoot(This,value) \
    ( (This)->lpVtbl->put_XamlRoot(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_Shadow(This,value) \
    ( (This)->lpVtbl->get_Shadow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_Shadow(This,value) \
    ( (This)->lpVtbl->put_Shadow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_RasterizationScale(This,value) \
    ( (This)->lpVtbl->get_RasterizationScale(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_RasterizationScale(This,value) \
    ( (This)->lpVtbl->put_RasterizationScale(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_FocusState(This,value) \
    ( (This)->lpVtbl->get_FocusState(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_UseSystemFocusVisuals(This,value) \
    ( (This)->lpVtbl->get_UseSystemFocusVisuals(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_UseSystemFocusVisuals(This,value) \
    ( (This)->lpVtbl->put_UseSystemFocusVisuals(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusLeft(This,value) \
    ( (This)->lpVtbl->get_XYFocusLeft(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusLeft(This,value) \
    ( (This)->lpVtbl->put_XYFocusLeft(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusRight(This,value) \
    ( (This)->lpVtbl->get_XYFocusRight(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusRight(This,value) \
    ( (This)->lpVtbl->put_XYFocusRight(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusUp(This,value) \
    ( (This)->lpVtbl->get_XYFocusUp(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusUp(This,value) \
    ( (This)->lpVtbl->put_XYFocusUp(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_XYFocusDown(This,value) \
    ( (This)->lpVtbl->get_XYFocusDown(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_XYFocusDown(This,value) \
    ( (This)->lpVtbl->put_XYFocusDown(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_IsTabStop(This,value) \
    ( (This)->lpVtbl->get_IsTabStop(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_IsTabStop(This,value) \
    ( (This)->lpVtbl->put_IsTabStop(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_get_TabIndex(This,value) \
    ( (This)->lpVtbl->get_TabIndex(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_put_TabIndex(This,value) \
    ( (This)->lpVtbl->put_TabIndex(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_KeyUp(This,handler,token) \
    ( (This)->lpVtbl->add_KeyUp(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_KeyUp(This,token) \
    ( (This)->lpVtbl->remove_KeyUp(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_KeyDown(This,handler,token) \
    ( (This)->lpVtbl->add_KeyDown(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_KeyDown(This,token) \
    ( (This)->lpVtbl->remove_KeyDown(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_GotFocus(This,handler,token) \
    ( (This)->lpVtbl->add_GotFocus(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_GotFocus(This,token) \
    ( (This)->lpVtbl->remove_GotFocus(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_LostFocus(This,handler,token) \
    ( (This)->lpVtbl->add_LostFocus(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_LostFocus(This,token) \
    ( (This)->lpVtbl->remove_LostFocus(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_DragStarting(This,handler,token) \
    ( (This)->lpVtbl->add_DragStarting(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_DragStarting(This,token) \
    ( (This)->lpVtbl->remove_DragStarting(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_DropCompleted(This,handler,token) \
    ( (This)->lpVtbl->add_DropCompleted(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_DropCompleted(This,token) \
    ( (This)->lpVtbl->remove_DropCompleted(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_CharacterReceived(This,handler,token) \
    ( (This)->lpVtbl->add_CharacterReceived(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_CharacterReceived(This,token) \
    ( (This)->lpVtbl->remove_CharacterReceived(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_DragEnter(This,handler,token) \
    ( (This)->lpVtbl->add_DragEnter(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_DragEnter(This,token) \
    ( (This)->lpVtbl->remove_DragEnter(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_DragLeave(This,handler,token) \
    ( (This)->lpVtbl->add_DragLeave(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_DragLeave(This,token) \
    ( (This)->lpVtbl->remove_DragLeave(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_DragOver(This,handler,token) \
    ( (This)->lpVtbl->add_DragOver(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_DragOver(This,token) \
    ( (This)->lpVtbl->remove_DragOver(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_Drop(This,handler,token) \
    ( (This)->lpVtbl->add_Drop(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_Drop(This,token) \
    ( (This)->lpVtbl->remove_Drop(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PointerPressed(This,handler,token) \
    ( (This)->lpVtbl->add_PointerPressed(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PointerPressed(This,token) \
    ( (This)->lpVtbl->remove_PointerPressed(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PointerMoved(This,handler,token) \
    ( (This)->lpVtbl->add_PointerMoved(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PointerMoved(This,token) \
    ( (This)->lpVtbl->remove_PointerMoved(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PointerReleased(This,handler,token) \
    ( (This)->lpVtbl->add_PointerReleased(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PointerReleased(This,token) \
    ( (This)->lpVtbl->remove_PointerReleased(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PointerEntered(This,handler,token) \
    ( (This)->lpVtbl->add_PointerEntered(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PointerEntered(This,token) \
    ( (This)->lpVtbl->remove_PointerEntered(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PointerExited(This,handler,token) \
    ( (This)->lpVtbl->add_PointerExited(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PointerExited(This,token) \
    ( (This)->lpVtbl->remove_PointerExited(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PointerCaptureLost(This,handler,token) \
    ( (This)->lpVtbl->add_PointerCaptureLost(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PointerCaptureLost(This,token) \
    ( (This)->lpVtbl->remove_PointerCaptureLost(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PointerCanceled(This,handler,token) \
    ( (This)->lpVtbl->add_PointerCanceled(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PointerCanceled(This,token) \
    ( (This)->lpVtbl->remove_PointerCanceled(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PointerWheelChanged(This,handler,token) \
    ( (This)->lpVtbl->add_PointerWheelChanged(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PointerWheelChanged(This,token) \
    ( (This)->lpVtbl->remove_PointerWheelChanged(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_Tapped(This,handler,token) \
    ( (This)->lpVtbl->add_Tapped(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_Tapped(This,token) \
    ( (This)->lpVtbl->remove_Tapped(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_DoubleTapped(This,handler,token) \
    ( (This)->lpVtbl->add_DoubleTapped(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_DoubleTapped(This,token) \
    ( (This)->lpVtbl->remove_DoubleTapped(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_Holding(This,handler,token) \
    ( (This)->lpVtbl->add_Holding(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_Holding(This,token) \
    ( (This)->lpVtbl->remove_Holding(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_ContextRequested(This,handler,token) \
    ( (This)->lpVtbl->add_ContextRequested(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_ContextRequested(This,token) \
    ( (This)->lpVtbl->remove_ContextRequested(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_ContextCanceled(This,handler,token) \
    ( (This)->lpVtbl->add_ContextCanceled(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_ContextCanceled(This,token) \
    ( (This)->lpVtbl->remove_ContextCanceled(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_RightTapped(This,handler,token) \
    ( (This)->lpVtbl->add_RightTapped(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_RightTapped(This,token) \
    ( (This)->lpVtbl->remove_RightTapped(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_ManipulationStarting(This,handler,token) \
    ( (This)->lpVtbl->add_ManipulationStarting(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_ManipulationStarting(This,token) \
    ( (This)->lpVtbl->remove_ManipulationStarting(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_ManipulationInertiaStarting(This,handler,token) \
    ( (This)->lpVtbl->add_ManipulationInertiaStarting(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_ManipulationInertiaStarting(This,token) \
    ( (This)->lpVtbl->remove_ManipulationInertiaStarting(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_ManipulationStarted(This,handler,token) \
    ( (This)->lpVtbl->add_ManipulationStarted(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_ManipulationStarted(This,token) \
    ( (This)->lpVtbl->remove_ManipulationStarted(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_ManipulationDelta(This,handler,token) \
    ( (This)->lpVtbl->add_ManipulationDelta(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_ManipulationDelta(This,token) \
    ( (This)->lpVtbl->remove_ManipulationDelta(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_ManipulationCompleted(This,handler,token) \
    ( (This)->lpVtbl->add_ManipulationCompleted(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_ManipulationCompleted(This,token) \
    ( (This)->lpVtbl->remove_ManipulationCompleted(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_AccessKeyDisplayRequested(This,handler,token) \
    ( (This)->lpVtbl->add_AccessKeyDisplayRequested(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_AccessKeyDisplayRequested(This,token) \
    ( (This)->lpVtbl->remove_AccessKeyDisplayRequested(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_AccessKeyDisplayDismissed(This,handler,token) \
    ( (This)->lpVtbl->add_AccessKeyDisplayDismissed(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_AccessKeyDisplayDismissed(This,token) \
    ( (This)->lpVtbl->remove_AccessKeyDisplayDismissed(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_AccessKeyInvoked(This,handler,token) \
    ( (This)->lpVtbl->add_AccessKeyInvoked(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_AccessKeyInvoked(This,token) \
    ( (This)->lpVtbl->remove_AccessKeyInvoked(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_ProcessKeyboardAccelerators(This,handler,token) \
    ( (This)->lpVtbl->add_ProcessKeyboardAccelerators(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_ProcessKeyboardAccelerators(This,token) \
    ( (This)->lpVtbl->remove_ProcessKeyboardAccelerators(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_GettingFocus(This,handler,token) \
    ( (This)->lpVtbl->add_GettingFocus(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_GettingFocus(This,token) \
    ( (This)->lpVtbl->remove_GettingFocus(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_LosingFocus(This,handler,token) \
    ( (This)->lpVtbl->add_LosingFocus(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_LosingFocus(This,token) \
    ( (This)->lpVtbl->remove_LosingFocus(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_NoFocusCandidateFound(This,handler,token) \
    ( (This)->lpVtbl->add_NoFocusCandidateFound(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_NoFocusCandidateFound(This,token) \
    ( (This)->lpVtbl->remove_NoFocusCandidateFound(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PreviewKeyDown(This,handler,token) \
    ( (This)->lpVtbl->add_PreviewKeyDown(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PreviewKeyDown(This,token) \
    ( (This)->lpVtbl->remove_PreviewKeyDown(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_PreviewKeyUp(This,handler,token) \
    ( (This)->lpVtbl->add_PreviewKeyUp(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_PreviewKeyUp(This,token) \
    ( (This)->lpVtbl->remove_PreviewKeyUp(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_add_BringIntoViewRequested(This,handler,token) \
    ( (This)->lpVtbl->add_BringIntoViewRequested(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_remove_BringIntoViewRequested(This,token) \
    ( (This)->lpVtbl->remove_BringIntoViewRequested(This,token) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_Measure(This,availableSize) \
    ( (This)->lpVtbl->Measure(This,availableSize) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_Arrange(This,finalRect) \
    ( (This)->lpVtbl->Arrange(This,finalRect) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_CapturePointer(This,value,result) \
    ( (This)->lpVtbl->CapturePointer(This,value,result) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_ReleasePointerCapture(This,value) \
    ( (This)->lpVtbl->ReleasePointerCapture(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_ReleasePointerCaptures(This) \
    ( (This)->lpVtbl->ReleasePointerCaptures(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_AddHandler(This,routedEvent,handler,handledEventsToo) \
    ( (This)->lpVtbl->AddHandler(This,routedEvent,handler,handledEventsToo) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_RemoveHandler(This,routedEvent,handler) \
    ( (This)->lpVtbl->RemoveHandler(This,routedEvent,handler) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_TransformToVisual(This,visual,result) \
    ( (This)->lpVtbl->TransformToVisual(This,visual,result) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_InvalidateMeasure(This) \
    ( (This)->lpVtbl->InvalidateMeasure(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_InvalidateArrange(This) \
    ( (This)->lpVtbl->InvalidateArrange(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_UpdateLayout(This) \
    ( (This)->lpVtbl->UpdateLayout(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_CancelDirectManipulations(This,result) \
    ( (This)->lpVtbl->CancelDirectManipulations(This,result) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_StartDragAsync(This,pointerPoint,operation) \
    ( (This)->lpVtbl->StartDragAsync(This,pointerPoint,operation) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_StartBringIntoView(This) \
    ( (This)->lpVtbl->StartBringIntoView(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_StartBringIntoViewWithOptions(This,options) \
    ( (This)->lpVtbl->StartBringIntoViewWithOptions(This,options) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_TryInvokeKeyboardAccelerator(This,args) \
    ( (This)->lpVtbl->TryInvokeKeyboardAccelerator(This,args) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_StartAnimation(This,animation) \
    ( (This)->lpVtbl->StartAnimation(This,animation) )

#define __x_Microsoft_CUI_CXaml_CIUIElement_StopAnimation(This,animation) \
    ( (This)->lpVtbl->StopAnimation(This,animation) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElement;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElement_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementFactory[] = L"Microsoft.UI.Xaml.IUIElementFactory";
/* [object, uuid("14D1D309-ADD0-5CCB-B946-77488CD70F87"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUIElementFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUIElementFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIUIElementFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUIElementFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUIElementFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUIElementFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIUIElementFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIUIElementFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementHostingPreviewStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementHostingPreviewStaticsPrivate[] = L"Microsoft.UI.Xaml.IUIElementHostingPreviewStaticsPrivate";
/* [object, uuid("FA6A542F-03AB-5F1B-8AC0-E52AE01B9F79"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *SetComponentSite )(
        __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * element,
        /* [in] */IInspectable * componentSite
        );
    HRESULT ( STDMETHODCALLTYPE *SetAutomationProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * element,
        /* [in] */__x_Microsoft_CUI_CXaml_CAutomation_CIAutomationProperty * property,
        /* [in] */__x_Microsoft_CUI_CXaml_CAutomation_CIComponentPropertyValue * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_SetComponentSite(This,element,componentSite) \
    ( (This)->lpVtbl->SetComponentSite(This,element,componentSite) )

#define __x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_SetAutomationProperty(This,element,property,value) \
    ( (This)->lpVtbl->SetAutomationProperty(This,element,property,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementHostingPreviewStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementOverrides[] = L"Microsoft.UI.Xaml.IUIElementOverrides";
/* [object, uuid("9034F41E-AB7B-59E7-8168-50DE6B689DDE"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUIElementOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *OnCreateAutomationPeer )(
        __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CAutomation_CPeers_CIAutomationPeer * * result
        );
    HRESULT ( STDMETHODCALLTYPE *OnDisconnectVisualChildren )(
        __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This
        );
    HRESULT ( STDMETHODCALLTYPE *FindSubElementsForTouchTargeting )(
        __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CPoint point,
        /* [in] */__x_ABI_CWindows_CFoundation_CRect boundingRect,
        /* [retval, out] */__FIIterable_1___FIIterable_1_Windows__CFoundation__CPoint * * result
        );
    HRESULT ( STDMETHODCALLTYPE *GetChildrenInTabFocusOrder )(
        __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
        /* [retval, out] */__FIIterable_1_Microsoft__CUI__CXaml__CDependencyObject * * result
        );
    HRESULT ( STDMETHODCALLTYPE *OnKeyboardAcceleratorInvoked )(
        __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIKeyboardAcceleratorInvokedEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnProcessKeyboardAccelerators )(
        __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIProcessKeyboardAcceleratorEventArgs * args
        );
    HRESULT ( STDMETHODCALLTYPE *OnBringIntoViewRequested )(
        __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIBringIntoViewRequestedEventArgs * e
        );
    HRESULT ( STDMETHODCALLTYPE *PopulatePropertyInfoOverride )(
        __x_Microsoft_CUI_CXaml_CIUIElementOverrides * This,
        /* [in] */HSTRING propertyName,
        /* [in] */__x_Microsoft_CUI_CComposition_CIAnimationPropertyInfo * animationPropertyInfo
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUIElementOverridesVtbl;

interface __x_Microsoft_CUI_CXaml_CIUIElementOverrides
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUIElementOverridesVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_OnCreateAutomationPeer(This,result) \
    ( (This)->lpVtbl->OnCreateAutomationPeer(This,result) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_OnDisconnectVisualChildren(This) \
    ( (This)->lpVtbl->OnDisconnectVisualChildren(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_FindSubElementsForTouchTargeting(This,point,boundingRect,result) \
    ( (This)->lpVtbl->FindSubElementsForTouchTargeting(This,point,boundingRect,result) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_GetChildrenInTabFocusOrder(This,result) \
    ( (This)->lpVtbl->GetChildrenInTabFocusOrder(This,result) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_OnKeyboardAcceleratorInvoked(This,args) \
    ( (This)->lpVtbl->OnKeyboardAcceleratorInvoked(This,args) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_OnProcessKeyboardAccelerators(This,args) \
    ( (This)->lpVtbl->OnProcessKeyboardAccelerators(This,args) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_OnBringIntoViewRequested(This,e) \
    ( (This)->lpVtbl->OnBringIntoViewRequested(This,e) )

#define __x_Microsoft_CUI_CXaml_CIUIElementOverrides_PopulatePropertyInfoOverride(This,propertyName,animationPropertyInfo) \
    ( (This)->lpVtbl->PopulatePropertyInfoOverride(This,propertyName,animationPropertyInfo) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementOverrides;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElement
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementStatics[] = L"Microsoft.UI.Xaml.IUIElementStatics";
/* [object, uuid("D2921D87-3584-5E22-8A3A-C2C78DAB4F6E"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUIElementStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyDownEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyUpEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerEnteredEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerPressedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerMovedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerReleasedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerExitedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerCaptureLostEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerCanceledEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerWheelChangedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TappedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DoubleTappedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HoldingEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RightTappedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ManipulationStartingEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ManipulationInertiaStartingEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ManipulationStartedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ManipulationDeltaEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ManipulationCompletedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DragEnterEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DragLeaveEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DragOverEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DropEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_GettingFocusEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LosingFocusEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NoFocusCandidateFoundEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PreviewKeyDownEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CharacterReceivedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PreviewKeyUpEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_BringIntoViewRequestedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ContextRequestedEvent )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIRoutedEvent * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AllowDropProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OpacityProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ClipProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RenderTransformProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ProjectionProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Transform3DProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RenderTransformOriginProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsHitTestVisibleProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_VisibilityProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UseLayoutRoundingProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransitionsProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CacheModeProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsTapEnabledProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsDoubleTapEnabledProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanDragProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsRightTapEnabledProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsHoldingEnabledProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ManipulationModeProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_PointerCapturesProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ContextFlyoutProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CompositeModeProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_LightsProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CanBeScrollAnchorProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ExitDisplayModeOnAccessKeyInvokedProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsAccessKeyScopeProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AccessKeyScopeOwnerProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_AccessKeyProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyTipPlacementModeProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyTipHorizontalOffsetProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyTipVerticalOffsetProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyTipTargetProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusKeyboardNavigationProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusUpNavigationStrategyProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusDownNavigationStrategyProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusLeftNavigationStrategyProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusRightNavigationStrategyProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorPlacementTargetProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_KeyboardAcceleratorPlacementModeProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_HighContrastAdjustmentProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TabFocusNavigationProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_ShadowProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_FocusStateProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_UseSystemFocusVisualsProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusLeftProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusRightProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusUpProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_XYFocusDownProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsTabStopProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TabIndexProperty )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *TryStartDirectManipulation )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CInput_CIPointer * value,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *RegisterAsScrollPort )(
        __x_Microsoft_CUI_CXaml_CIUIElementStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * element
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUIElementStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIUIElementStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUIElementStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_KeyDownEvent(This,value) \
    ( (This)->lpVtbl->get_KeyDownEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_KeyUpEvent(This,value) \
    ( (This)->lpVtbl->get_KeyUpEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerEnteredEvent(This,value) \
    ( (This)->lpVtbl->get_PointerEnteredEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerPressedEvent(This,value) \
    ( (This)->lpVtbl->get_PointerPressedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerMovedEvent(This,value) \
    ( (This)->lpVtbl->get_PointerMovedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerReleasedEvent(This,value) \
    ( (This)->lpVtbl->get_PointerReleasedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerExitedEvent(This,value) \
    ( (This)->lpVtbl->get_PointerExitedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerCaptureLostEvent(This,value) \
    ( (This)->lpVtbl->get_PointerCaptureLostEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerCanceledEvent(This,value) \
    ( (This)->lpVtbl->get_PointerCanceledEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerWheelChangedEvent(This,value) \
    ( (This)->lpVtbl->get_PointerWheelChangedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_TappedEvent(This,value) \
    ( (This)->lpVtbl->get_TappedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_DoubleTappedEvent(This,value) \
    ( (This)->lpVtbl->get_DoubleTappedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_HoldingEvent(This,value) \
    ( (This)->lpVtbl->get_HoldingEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_RightTappedEvent(This,value) \
    ( (This)->lpVtbl->get_RightTappedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ManipulationStartingEvent(This,value) \
    ( (This)->lpVtbl->get_ManipulationStartingEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ManipulationInertiaStartingEvent(This,value) \
    ( (This)->lpVtbl->get_ManipulationInertiaStartingEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ManipulationStartedEvent(This,value) \
    ( (This)->lpVtbl->get_ManipulationStartedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ManipulationDeltaEvent(This,value) \
    ( (This)->lpVtbl->get_ManipulationDeltaEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ManipulationCompletedEvent(This,value) \
    ( (This)->lpVtbl->get_ManipulationCompletedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_DragEnterEvent(This,value) \
    ( (This)->lpVtbl->get_DragEnterEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_DragLeaveEvent(This,value) \
    ( (This)->lpVtbl->get_DragLeaveEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_DragOverEvent(This,value) \
    ( (This)->lpVtbl->get_DragOverEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_DropEvent(This,value) \
    ( (This)->lpVtbl->get_DropEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_GettingFocusEvent(This,value) \
    ( (This)->lpVtbl->get_GettingFocusEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_LosingFocusEvent(This,value) \
    ( (This)->lpVtbl->get_LosingFocusEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_NoFocusCandidateFoundEvent(This,value) \
    ( (This)->lpVtbl->get_NoFocusCandidateFoundEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PreviewKeyDownEvent(This,value) \
    ( (This)->lpVtbl->get_PreviewKeyDownEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_CharacterReceivedEvent(This,value) \
    ( (This)->lpVtbl->get_CharacterReceivedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PreviewKeyUpEvent(This,value) \
    ( (This)->lpVtbl->get_PreviewKeyUpEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_BringIntoViewRequestedEvent(This,value) \
    ( (This)->lpVtbl->get_BringIntoViewRequestedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ContextRequestedEvent(This,value) \
    ( (This)->lpVtbl->get_ContextRequestedEvent(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_AllowDropProperty(This,value) \
    ( (This)->lpVtbl->get_AllowDropProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_OpacityProperty(This,value) \
    ( (This)->lpVtbl->get_OpacityProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ClipProperty(This,value) \
    ( (This)->lpVtbl->get_ClipProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_RenderTransformProperty(This,value) \
    ( (This)->lpVtbl->get_RenderTransformProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ProjectionProperty(This,value) \
    ( (This)->lpVtbl->get_ProjectionProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_Transform3DProperty(This,value) \
    ( (This)->lpVtbl->get_Transform3DProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_RenderTransformOriginProperty(This,value) \
    ( (This)->lpVtbl->get_RenderTransformOriginProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_IsHitTestVisibleProperty(This,value) \
    ( (This)->lpVtbl->get_IsHitTestVisibleProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_VisibilityProperty(This,value) \
    ( (This)->lpVtbl->get_VisibilityProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_UseLayoutRoundingProperty(This,value) \
    ( (This)->lpVtbl->get_UseLayoutRoundingProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_TransitionsProperty(This,value) \
    ( (This)->lpVtbl->get_TransitionsProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_CacheModeProperty(This,value) \
    ( (This)->lpVtbl->get_CacheModeProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_IsTapEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_IsTapEnabledProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_IsDoubleTapEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_IsDoubleTapEnabledProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_CanDragProperty(This,value) \
    ( (This)->lpVtbl->get_CanDragProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_IsRightTapEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_IsRightTapEnabledProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_IsHoldingEnabledProperty(This,value) \
    ( (This)->lpVtbl->get_IsHoldingEnabledProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ManipulationModeProperty(This,value) \
    ( (This)->lpVtbl->get_ManipulationModeProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_PointerCapturesProperty(This,value) \
    ( (This)->lpVtbl->get_PointerCapturesProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ContextFlyoutProperty(This,value) \
    ( (This)->lpVtbl->get_ContextFlyoutProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_CompositeModeProperty(This,value) \
    ( (This)->lpVtbl->get_CompositeModeProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_LightsProperty(This,value) \
    ( (This)->lpVtbl->get_LightsProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_CanBeScrollAnchorProperty(This,value) \
    ( (This)->lpVtbl->get_CanBeScrollAnchorProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ExitDisplayModeOnAccessKeyInvokedProperty(This,value) \
    ( (This)->lpVtbl->get_ExitDisplayModeOnAccessKeyInvokedProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_IsAccessKeyScopeProperty(This,value) \
    ( (This)->lpVtbl->get_IsAccessKeyScopeProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_AccessKeyScopeOwnerProperty(This,value) \
    ( (This)->lpVtbl->get_AccessKeyScopeOwnerProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_AccessKeyProperty(This,value) \
    ( (This)->lpVtbl->get_AccessKeyProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_KeyTipPlacementModeProperty(This,value) \
    ( (This)->lpVtbl->get_KeyTipPlacementModeProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_KeyTipHorizontalOffsetProperty(This,value) \
    ( (This)->lpVtbl->get_KeyTipHorizontalOffsetProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_KeyTipVerticalOffsetProperty(This,value) \
    ( (This)->lpVtbl->get_KeyTipVerticalOffsetProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_KeyTipTargetProperty(This,value) \
    ( (This)->lpVtbl->get_KeyTipTargetProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusKeyboardNavigationProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusKeyboardNavigationProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusUpNavigationStrategyProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusUpNavigationStrategyProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusDownNavigationStrategyProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusDownNavigationStrategyProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusLeftNavigationStrategyProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusLeftNavigationStrategyProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusRightNavigationStrategyProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusRightNavigationStrategyProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_KeyboardAcceleratorPlacementTargetProperty(This,value) \
    ( (This)->lpVtbl->get_KeyboardAcceleratorPlacementTargetProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_KeyboardAcceleratorPlacementModeProperty(This,value) \
    ( (This)->lpVtbl->get_KeyboardAcceleratorPlacementModeProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_HighContrastAdjustmentProperty(This,value) \
    ( (This)->lpVtbl->get_HighContrastAdjustmentProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_TabFocusNavigationProperty(This,value) \
    ( (This)->lpVtbl->get_TabFocusNavigationProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_ShadowProperty(This,value) \
    ( (This)->lpVtbl->get_ShadowProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_FocusStateProperty(This,value) \
    ( (This)->lpVtbl->get_FocusStateProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_UseSystemFocusVisualsProperty(This,value) \
    ( (This)->lpVtbl->get_UseSystemFocusVisualsProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusLeftProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusLeftProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusRightProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusRightProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusUpProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusUpProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_XYFocusDownProperty(This,value) \
    ( (This)->lpVtbl->get_XYFocusDownProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_IsTabStopProperty(This,value) \
    ( (This)->lpVtbl->get_IsTabStopProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_get_TabIndexProperty(This,value) \
    ( (This)->lpVtbl->get_TabIndexProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_TryStartDirectManipulation(This,value,result) \
    ( (This)->lpVtbl->TryStartDirectManipulation(This,value,result) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStatics_RegisterAsScrollPort(This,element) \
    ( (This)->lpVtbl->RegisterAsScrollPort(This,element) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementStaticsPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementStaticsPrivate[] = L"Microsoft.UI.Xaml.IUIElementStaticsPrivate";
/* [object, uuid("B35B8888-C508-52DC-AF8F-8A3C38ADBB86"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *InternalGetIsEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * element,
        /* [retval, out] */boolean * result
        );
    HRESULT ( STDMETHODCALLTYPE *InternalPutIsEnabled )(
        __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * element,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_InternalGetIsEnabled(This,element,result) \
    ( (This)->lpVtbl->InternalGetIsEnabled(This,element,result) )

#define __x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_InternalPutIsEnabled(This,element,value) \
    ( (This)->lpVtbl->InternalPutIsEnabled(This,element,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementStaticsPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUIElementWeakCollectionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UIElementWeakCollection
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUIElementWeakCollectionFactory[] = L"Microsoft.UI.Xaml.IUIElementWeakCollectionFactory";
/* [object, uuid("B4D69F09-D494-5BC8-AE68-B6307D845049"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CUIElement * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUIElementWeakCollectionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IUnhandledExceptionEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.UnhandledExceptionEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IUnhandledExceptionEventArgs[] = L"Microsoft.UI.Xaml.IUnhandledExceptionEventArgs";
/* [object, uuid("59EAEBA9-8F9C-5BE7-9B3B-820960FAA220"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Exception )(
        __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
        /* [retval, out] */HRESULT * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Message )(
        __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Exception(This,value) \
    ( (This)->lpVtbl->get_Exception(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Message(This,value) \
    ( (This)->lpVtbl->get_Message(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIUnhandledExceptionEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVector3Transition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Vector3Transition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVector3Transition[] = L"Microsoft.UI.Xaml.IVector3Transition";
/* [object, uuid("0C408BB9-F9A2-55D7-8AED-143D36D603F2"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVector3TransitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3Transition * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3Transition * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3Transition * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3Transition * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3Transition * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3Transition * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Duration )(
        __x_Microsoft_CUI_CXaml_CIVector3Transition * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CTimeSpan * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Duration )(
        __x_Microsoft_CUI_CXaml_CIVector3Transition * This,
        /* [in] */__x_ABI_CWindows_CFoundation_CTimeSpan value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Components )(
        __x_Microsoft_CUI_CXaml_CIVector3Transition * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CVector3TransitionComponents * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Components )(
        __x_Microsoft_CUI_CXaml_CIVector3Transition * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CVector3TransitionComponents value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVector3TransitionVtbl;

interface __x_Microsoft_CUI_CXaml_CIVector3Transition
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVector3TransitionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVector3Transition_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_get_Duration(This,value) \
    ( (This)->lpVtbl->get_Duration(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_put_Duration(This,value) \
    ( (This)->lpVtbl->put_Duration(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_get_Components(This,value) \
    ( (This)->lpVtbl->get_Components(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVector3Transition_put_Components(This,value) \
    ( (This)->lpVtbl->put_Components(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVector3Transition;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVector3Transition_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IVector3TransitionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Vector3Transition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000
#if !defined(____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVector3TransitionFactory[] = L"Microsoft.UI.Xaml.IVector3TransitionFactory";
/* [object, uuid("A3A084FC-B965-534B-900F-78E288129232"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVector3TransitionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVector3Transition * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVector3TransitionFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVector3TransitionFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVector3TransitionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVector3TransitionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualState
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualState[] = L"Microsoft.UI.Xaml.IVisualState";
/* [object, uuid("4BB32AE8-0E28-5521-A7F5-66B661372994"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualState * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Name )(
        __x_Microsoft_CUI_CXaml_CIVisualState * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Storyboard )(
        __x_Microsoft_CUI_CXaml_CIVisualState * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Storyboard )(
        __x_Microsoft_CUI_CXaml_CIVisualState * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Setters )(
        __x_Microsoft_CUI_CXaml_CIVisualState * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CISetterBaseCollection * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_StateTriggers )(
        __x_Microsoft_CUI_CXaml_CIVisualState * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CStateTriggerBase * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualState
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualState_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_get_Name(This,value) \
    ( (This)->lpVtbl->get_Name(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_get_Storyboard(This,value) \
    ( (This)->lpVtbl->get_Storyboard(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_put_Storyboard(This,value) \
    ( (This)->lpVtbl->put_Storyboard(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_get_Setters(This,value) \
    ( (This)->lpVtbl->get_Setters(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualState_get_StateTriggers(This,value) \
    ( (This)->lpVtbl->get_StateTriggers(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualState;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualState_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateChangedEventArgs[] = L"Microsoft.UI.Xaml.IVisualStateChangedEventArgs";
/* [object, uuid("11DE9510-A195-577B-88C8-06391618868C"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_OldState )(
        __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVisualState * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_OldState )(
        __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualState * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_NewState )(
        __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVisualState * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_NewState )(
        __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualState * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Control )(
        __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CControls_CIControl * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Control )(
        __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CControls_CIControl * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_get_OldState(This,value) \
    ( (This)->lpVtbl->get_OldState(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_put_OldState(This,value) \
    ( (This)->lpVtbl->put_OldState(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_get_NewState(This,value) \
    ( (This)->lpVtbl->get_NewState(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_put_NewState(This,value) \
    ( (This)->lpVtbl->put_NewState(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_get_Control(This,value) \
    ( (This)->lpVtbl->get_Control(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_put_Control(This,value) \
    ( (This)->lpVtbl->put_Control(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateGroup
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateGroup[] = L"Microsoft.UI.Xaml.IVisualStateGroup";
/* [object, uuid("8DFD691B-710C-5D6D-B71A-7A7F5ED54AC7"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateGroupVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Name )(
        __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Transitions )(
        __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CVisualTransition * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_States )(
        __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CVisualState * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CurrentState )(
        __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVisualState * * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_CurrentStateChanged )(
        __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_CurrentStateChanged )(
        __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_CurrentStateChanging )(
        __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualStateChangedEventHandler  * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_CurrentStateChanging )(
        __x_Microsoft_CUI_CXaml_CIVisualStateGroup * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateGroupVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualStateGroup
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateGroupVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_get_Name(This,value) \
    ( (This)->lpVtbl->get_Name(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_get_Transitions(This,value) \
    ( (This)->lpVtbl->get_Transitions(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_get_States(This,value) \
    ( (This)->lpVtbl->get_States(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_get_CurrentState(This,value) \
    ( (This)->lpVtbl->get_CurrentState(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_add_CurrentStateChanged(This,handler,token) \
    ( (This)->lpVtbl->add_CurrentStateChanged(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_remove_CurrentStateChanged(This,token) \
    ( (This)->lpVtbl->remove_CurrentStateChanged(This,token) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_add_CurrentStateChanging(This,handler,token) \
    ( (This)->lpVtbl->add_CurrentStateChanging(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateGroup_remove_CurrentStateChanging(This,token) \
    ( (This)->lpVtbl->remove_CurrentStateChanging(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateGroup;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateGroup_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManager
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManager[] = L"Microsoft.UI.Xaml.IVisualStateManager";
/* [object, uuid("342C8D32-AD61-5925-93D1-0C704DF2A7D1"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManager * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManager * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManager * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManager * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManager * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManager * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateManagerVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualStateManager
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualStateManager_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManager_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManager_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManager_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManager_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManager_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManager;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManager_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManagerFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManagerFactory[] = L"Microsoft.UI.Xaml.IVisualStateManagerFactory";
/* [object, uuid("713DAF82-92B3-58F2-8FC1-B0D9A2CAD03C"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVisualStateManager * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManagerOverrides
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManagerOverrides[] = L"Microsoft.UI.Xaml.IVisualStateManagerOverrides";
/* [object, uuid("E3F8E9C9-9432-514C-923E-142CD8C82730"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverridesVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GoToStateCore )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CControls_CIControl * control,
        /* [in] */__x_Microsoft_CUI_CXaml_CIFrameworkElement * templateRoot,
        /* [in] */HSTRING stateName,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualStateGroup * group,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualState * state,
        /* [in] */boolean useTransitions,
        /* [retval, out] */boolean * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverridesVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverridesVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_GoToStateCore(This,control,templateRoot,stateName,group,state,useTransitions,result) \
    ( (This)->lpVtbl->GoToStateCore(This,control,templateRoot,stateName,group,state,useTransitions,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerOverrides_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManagerProtected
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManagerProtected[] = L"Microsoft.UI.Xaml.IVisualStateManagerProtected";
/* [object, uuid("0F008013-787F-5599-A5AD-0A10B988ED24"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtectedVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *RaiseCurrentStateChanging )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualStateGroup * stateGroup,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualState * oldState,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualState * newState,
        /* [in] */__x_Microsoft_CUI_CXaml_CControls_CIControl * control
        );
    HRESULT ( STDMETHODCALLTYPE *RaiseCurrentStateChanged )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualStateGroup * stateGroup,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualState * oldState,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualState * newState,
        /* [in] */__x_Microsoft_CUI_CXaml_CControls_CIControl * control
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtectedVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtectedVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_RaiseCurrentStateChanging(This,stateGroup,oldState,newState,control) \
    ( (This)->lpVtbl->RaiseCurrentStateChanging(This,stateGroup,oldState,newState,control) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_RaiseCurrentStateChanged(This,stateGroup,oldState,newState,control) \
    ( (This)->lpVtbl->RaiseCurrentStateChanged(This,stateGroup,oldState,newState,control) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerProtected_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualStateManagerStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualStateManager
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualStateManagerStatics[] = L"Microsoft.UI.Xaml.IVisualStateManagerStatics";
/* [object, uuid("A4D5147D-88C3-57ED-AD83-245DF5F6B50D"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *GetVisualStateGroups )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIFrameworkElement * obj,
        /* [retval, out] */__FIVector_1_Microsoft__CUI__CXaml__CVisualStateGroup * * result
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CustomVisualStateManagerProperty )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIDependencyProperty * * value
        );
    HRESULT ( STDMETHODCALLTYPE *GetCustomVisualStateManager )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIFrameworkElement * obj,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVisualStateManager * * result
        );
    HRESULT ( STDMETHODCALLTYPE *SetCustomVisualStateManager )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIFrameworkElement * obj,
        /* [in] */__x_Microsoft_CUI_CXaml_CIVisualStateManager * value
        );
    HRESULT ( STDMETHODCALLTYPE *GoToState )(
        __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CControls_CIControl * control,
        /* [in] */HSTRING stateName,
        /* [in] */boolean useTransitions,
        /* [retval, out] */boolean * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualStateManagerStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualStateManagerStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_GetVisualStateGroups(This,obj,result) \
    ( (This)->lpVtbl->GetVisualStateGroups(This,obj,result) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_get_CustomVisualStateManagerProperty(This,value) \
    ( (This)->lpVtbl->get_CustomVisualStateManagerProperty(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_GetCustomVisualStateManager(This,obj,result) \
    ( (This)->lpVtbl->GetCustomVisualStateManager(This,obj,result) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_SetCustomVisualStateManager(This,obj,value) \
    ( (This)->lpVtbl->SetCustomVisualStateManager(This,obj,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_GoToState(This,control,stateName,useTransitions,result) \
    ( (This)->lpVtbl->GoToState(This,control,stateName,useTransitions,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualStateManagerStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualTransition[] = L"Microsoft.UI.Xaml.IVisualTransition";
/* [object, uuid("DD21AF54-2CE1-59DE-9FD1-2B45F6BF6581"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualTransitionVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_GeneratedDuration )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CDuration * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_GeneratedDuration )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CDuration value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_GeneratedEasingFunction )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_GeneratedEasingFunction )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIEasingFunctionBase * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_To )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_To )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_From )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_From )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [in] */HSTRING value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Storyboard )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Storyboard )(
        __x_Microsoft_CUI_CXaml_CIVisualTransition * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CMedia_CAnimation_CIStoryboard * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualTransitionVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualTransition
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualTransitionVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualTransition_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_get_GeneratedDuration(This,value) \
    ( (This)->lpVtbl->get_GeneratedDuration(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_put_GeneratedDuration(This,value) \
    ( (This)->lpVtbl->put_GeneratedDuration(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_get_GeneratedEasingFunction(This,value) \
    ( (This)->lpVtbl->get_GeneratedEasingFunction(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_put_GeneratedEasingFunction(This,value) \
    ( (This)->lpVtbl->put_GeneratedEasingFunction(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_get_To(This,value) \
    ( (This)->lpVtbl->get_To(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_put_To(This,value) \
    ( (This)->lpVtbl->put_To(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_get_From(This,value) \
    ( (This)->lpVtbl->get_From(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_put_From(This,value) \
    ( (This)->lpVtbl->put_From(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_get_Storyboard(This,value) \
    ( (This)->lpVtbl->get_Storyboard(This,value) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransition_put_Storyboard(This,value) \
    ( (This)->lpVtbl->put_Storyboard(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualTransition;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualTransition_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IVisualTransitionFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.VisualTransition
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IVisualTransitionFactory[] = L"Microsoft.UI.Xaml.IVisualTransitionFactory";
/* [object, uuid("F3E74C0D-0B5B-5920-A309-08CB6BF2A739"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIVisualTransitionFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIVisualTransition * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIVisualTransitionFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIVisualTransitionFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIVisualTransitionFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIVisualTransitionFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindow
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Window
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindow_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindow_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindow[] = L"Microsoft.UI.Xaml.IWindow";
/* [object, uuid("8DE74F65-EA02-5380-BA58-28B3FC36BAE9"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindow * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindow * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindow * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindow * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindow * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindow * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Bounds )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Visible )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [retval, out] */boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIUIElement * * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Content )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIUIElement * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_CoreWindow )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CCore_CICoreWindow * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Compositor )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositor * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Dispatcher )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [retval, out] */__x_ABI_CWindows_CUI_CCore_CICoreDispatcher * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_DispatcherQueue )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [retval, out] */__x_Microsoft_CSystem_CIDispatcherQueue * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Title )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [retval, out] */HSTRING * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Title )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */HSTRING value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Activated )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowActivatedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Activated )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Closed )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Closed )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_SizeChanged )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowSizeChangedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_SizeChanged )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */EventRegistrationToken token
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_VisibilityChanged )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */__FITypedEventHandler_2_IInspectable_Microsoft__CUI__CXaml__CWindowVisibilityChangedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_VisibilityChanged )(
        __x_Microsoft_CUI_CXaml_CIWindow * This,
        /* [in] */EventRegistrationToken token
        );
    HRESULT ( STDMETHODCALLTYPE *Activate )(
        __x_Microsoft_CUI_CXaml_CIWindow * This
        );
    HRESULT ( STDMETHODCALLTYPE *Close )(
        __x_Microsoft_CUI_CXaml_CIWindow * This
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindow
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindow_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindow_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindow_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindow_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindow_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindow_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindow_get_Bounds(This,value) \
    ( (This)->lpVtbl->get_Bounds(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_get_Visible(This,value) \
    ( (This)->lpVtbl->get_Visible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_get_Content(This,value) \
    ( (This)->lpVtbl->get_Content(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_put_Content(This,value) \
    ( (This)->lpVtbl->put_Content(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_get_CoreWindow(This,value) \
    ( (This)->lpVtbl->get_CoreWindow(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_get_Compositor(This,value) \
    ( (This)->lpVtbl->get_Compositor(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_get_Dispatcher(This,value) \
    ( (This)->lpVtbl->get_Dispatcher(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_get_DispatcherQueue(This,value) \
    ( (This)->lpVtbl->get_DispatcherQueue(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_get_Title(This,value) \
    ( (This)->lpVtbl->get_Title(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_put_Title(This,value) \
    ( (This)->lpVtbl->put_Title(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindow_add_Activated(This,handler,token) \
    ( (This)->lpVtbl->add_Activated(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIWindow_remove_Activated(This,token) \
    ( (This)->lpVtbl->remove_Activated(This,token) )

#define __x_Microsoft_CUI_CXaml_CIWindow_add_Closed(This,handler,token) \
    ( (This)->lpVtbl->add_Closed(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIWindow_remove_Closed(This,token) \
    ( (This)->lpVtbl->remove_Closed(This,token) )

#define __x_Microsoft_CUI_CXaml_CIWindow_add_SizeChanged(This,handler,token) \
    ( (This)->lpVtbl->add_SizeChanged(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIWindow_remove_SizeChanged(This,token) \
    ( (This)->lpVtbl->remove_SizeChanged(This,token) )

#define __x_Microsoft_CUI_CXaml_CIWindow_add_VisibilityChanged(This,handler,token) \
    ( (This)->lpVtbl->add_VisibilityChanged(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIWindow_remove_VisibilityChanged(This,token) \
    ( (This)->lpVtbl->remove_VisibilityChanged(This,token) )

#define __x_Microsoft_CUI_CXaml_CIWindow_Activate(This) \
    ( (This)->lpVtbl->Activate(This) )

#define __x_Microsoft_CUI_CXaml_CIWindow_Close(This) \
    ( (This)->lpVtbl->Close(This) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindow;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindow_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowActivatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowActivatedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowActivatedEventArgs[] = L"Microsoft.UI.Xaml.IWindowActivatedEventArgs";
/* [object, uuid("C723A5EA-82C4-5DD6-861B-70EF573B88D6"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_WindowActivationState )(
        __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CWindowActivationState * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_get_WindowActivationState(This,value) \
    ( (This)->lpVtbl->get_WindowActivationState(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowActivatedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowCreatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowCreatedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowCreatedEventArgs[] = L"Microsoft.UI.Xaml.IWindowCreatedEventArgs";
/* [object, uuid("C407E71B-FE7F-50E8-B41C-BE6DF3113DD8"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Window )(
        __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIWindow * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_get_Window(This,value) \
    ( (This)->lpVtbl->get_Window(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowCreatedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowEventArgs[] = L"Microsoft.UI.Xaml.IWindowEventArgs";
/* [object, uuid("1140827C-FE0A-5268-BC2B-F4492C2CCB49"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CXaml_CIWindowEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CXaml_CIWindowEventArgs * This,
        /* [in] */boolean value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindowEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowFactory
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Window
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowFactory_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowFactory_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowFactory[] = L"Microsoft.UI.Xaml.IWindowFactory";
/* [object, uuid("F0441536-AFEF-5222-918F-324A9B2DEC75"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowFactoryVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowFactory * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowFactory * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowFactory * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowFactory * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowFactory * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowFactory * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
HRESULT ( STDMETHODCALLTYPE *CreateInstance )(
        __x_Microsoft_CUI_CXaml_CIWindowFactory * This,
        /* [in] */IInspectable * baseInterface,
        /* [out] */IInspectable * * innerInterface,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIWindow * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowFactoryVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindowFactory
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowFactoryVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindowFactory_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindowFactory_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowFactory_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowFactory_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindowFactory_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindowFactory_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindowFactory_CreateInstance(This,baseInterface,innerInterface,value) \
    ( (This)->lpVtbl->CreateInstance(This,baseInterface,innerInterface,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowFactory;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowFactory_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowPrivate
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowPrivate_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowPrivate_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowPrivate[] = L"Microsoft.UI.Xaml.IWindowPrivate";
/* [object, uuid("F5DEF8F6-95C2-55CB-B1A4-551B9DA34220"), contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowPrivateVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowPrivate * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowPrivate * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_TransparentBackground )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_TransparentBackground )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
        /* [in] */boolean value
        );
    HRESULT ( STDMETHODCALLTYPE *Show )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This
        );
    HRESULT ( STDMETHODCALLTYPE *Hide )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This
        );
    HRESULT ( STDMETHODCALLTYPE *MoveWindow )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
        /* [in] */INT32 x,
        /* [in] */INT32 y,
        /* [in] */INT32 width,
        /* [in] */INT32 height
        );
    HRESULT ( STDMETHODCALLTYPE *SetAtlasSizeHint )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
        /* [in] */UINT32 width,
        /* [in] */UINT32 height
        );
    HRESULT ( STDMETHODCALLTYPE *ReleaseGraphicsDeviceOnSuspend )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
        /* [in] */boolean enable
        );
    HRESULT ( STDMETHODCALLTYPE *SetAtlasRequestCallback )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIAtlasRequestCallback * callback
        );
    HRESULT ( STDMETHODCALLTYPE *GetWindowContentBoundsForElement )(
        __x_Microsoft_CUI_CXaml_CIWindowPrivate * This,
        /* [in] */__x_Microsoft_CUI_CXaml_CIDependencyObject * element,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CRect * result
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowPrivateVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindowPrivate
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowPrivateVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_get_TransparentBackground(This,value) \
    ( (This)->lpVtbl->get_TransparentBackground(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_put_TransparentBackground(This,value) \
    ( (This)->lpVtbl->put_TransparentBackground(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_Show(This) \
    ( (This)->lpVtbl->Show(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_Hide(This) \
    ( (This)->lpVtbl->Hide(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_MoveWindow(This,x,y,width,height) \
    ( (This)->lpVtbl->MoveWindow(This,x,y,width,height) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_SetAtlasSizeHint(This,width,height) \
    ( (This)->lpVtbl->SetAtlasSizeHint(This,width,height) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_ReleaseGraphicsDeviceOnSuspend(This,enable) \
    ( (This)->lpVtbl->ReleaseGraphicsDeviceOnSuspend(This,enable) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_SetAtlasRequestCallback(This,callback) \
    ( (This)->lpVtbl->SetAtlasRequestCallback(This,callback) )

#define __x_Microsoft_CUI_CXaml_CIWindowPrivate_GetWindowContentBoundsForElement(This,element,result) \
    ( (This)->lpVtbl->GetWindowContentBoundsForElement(This,element,result) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowPrivate;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowPrivate_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowSizeChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowSizeChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowSizeChangedEventArgs[] = L"Microsoft.UI.Xaml.IWindowSizeChangedEventArgs";
/* [object, uuid("542F6F2C-4B64-5C72-A7A5-3A7E0664B8FF"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_get_Size(This,value) \
    ( (This)->lpVtbl->get_Size(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowSizeChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.Window
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowStatics[] = L"Microsoft.UI.Xaml.IWindowStatics";
/* [object, uuid("8CC985E3-A41A-5DF4-B531-D3A1788D86C5"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Current )(
        __x_Microsoft_CUI_CXaml_CIWindowStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIWindow * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindowStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindowStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindowStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindowStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindowStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindowStatics_get_Current(This,value) \
    ( (This)->lpVtbl->get_Current(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IWindowVisibilityChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IWindowVisibilityChangedEventArgs[] = L"Microsoft.UI.Xaml.IWindowVisibilityChangedEventArgs";
/* [object, uuid("7BB24A6D-070C-5CB6-8E9C-547905BE8265"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Handled )(
        __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This,
        /* [retval, out] */boolean * value
        );
    /* [propput] */HRESULT ( STDMETHODCALLTYPE *put_Handled )(
        __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This,
        /* [in] */boolean value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Visible )(
        __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs * This,
        /* [retval, out] */boolean * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_get_Handled(This,value) \
    ( (This)->lpVtbl->get_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_put_Handled(This,value) \
    ( (This)->lpVtbl->put_Handled(This,value) )

#define __x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_get_Visible(This,value) \
    ( (This)->lpVtbl->get_Visible(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIWindowVisibilityChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IXamlRoot
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.XamlRoot
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IXamlRoot[] = L"Microsoft.UI.Xaml.IXamlRoot";
/* [object, uuid("41125F0A-70B7-5696-AF98-5730882E360B"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIXamlRootVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRoot * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRoot * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Content )(
        __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
        /* [retval, out] */__x_Microsoft_CUI_CXaml_CIUIElement * * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Size )(
        __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
        /* [retval, out] */__x_ABI_CWindows_CFoundation_CSize * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_RasterizationScale )(
        __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
        /* [retval, out] */DOUBLE * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_IsHostVisible )(
        __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
        /* [retval, out] */boolean * value
        );
    /* [propget] */HRESULT ( STDMETHODCALLTYPE *get_Compositor )(
        __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositor * * value
        );
    /* [eventadd] */HRESULT ( STDMETHODCALLTYPE *add_Changed )(
        __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
        /* [in] */__FITypedEventHandler_2_Microsoft__CUI__CXaml__CXamlRoot_Microsoft__CUI__CXaml__CXamlRootChangedEventArgs * handler,
        /* [retval, out] */EventRegistrationToken * token
        );
    /* [eventremove] */HRESULT ( STDMETHODCALLTYPE *remove_Changed )(
        __x_Microsoft_CUI_CXaml_CIXamlRoot * This,
        /* [in] */EventRegistrationToken token
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIXamlRootVtbl;

interface __x_Microsoft_CUI_CXaml_CIXamlRoot
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIXamlRootVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIXamlRoot_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_get_Content(This,value) \
    ( (This)->lpVtbl->get_Content(This,value) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_get_Size(This,value) \
    ( (This)->lpVtbl->get_Size(This,value) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_get_RasterizationScale(This,value) \
    ( (This)->lpVtbl->get_RasterizationScale(This,value) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_get_IsHostVisible(This,value) \
    ( (This)->lpVtbl->get_IsHostVisible(This,value) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_get_Compositor(This,value) \
    ( (This)->lpVtbl->get_Compositor(This,value) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_add_Changed(This,handler,token) \
    ( (This)->lpVtbl->add_Changed(This,handler,token) )

#define __x_Microsoft_CUI_CXaml_CIXamlRoot_remove_Changed(This,token) \
    ( (This)->lpVtbl->remove_Changed(This,token) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIXamlRoot;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIXamlRoot_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IXamlRootChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.XamlRootChangedEventArgs
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IXamlRootChangedEventArgs[] = L"Microsoft.UI.Xaml.IXamlRootChangedEventArgs";
/* [object, uuid("61D2C719-F8A1-515A-902C-CFA498BA7A7F"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgsVtbl;

interface __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIXamlRootChangedEventArgs_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Interface Microsoft.UI.Xaml.IXamlRootStatics
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Interface is a part of the implementation of type Microsoft.UI.Xaml.XamlRoot
 *
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000
#if !defined(____x_Microsoft_CUI_CXaml_CIXamlRootStatics_INTERFACE_DEFINED__)
#define ____x_Microsoft_CUI_CXaml_CIXamlRootStatics_INTERFACE_DEFINED__
extern const __declspec(selectany) _Null_terminated_ WCHAR InterfaceName_Microsoft_UI_Xaml_IXamlRootStatics[] = L"Microsoft.UI.Xaml.IXamlRootStatics";
/* [object, uuid("2BD69A78-5675-5D62-960A-BF44C2DD5F61"), exclusiveto, contract] */
typedef struct __x_Microsoft_CUI_CXaml_CIXamlRootStaticsVtbl
{
    BEGIN_INTERFACE
    HRESULT ( STDMETHODCALLTYPE *QueryInterface)(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootStatics * This,
    /* [in] */ __RPC__in REFIID riid,
    /* [annotation][iid_is][out] */
    _COM_Outptr_  void **ppvObject
    );

ULONG ( STDMETHODCALLTYPE *AddRef )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootStatics * This
    );

ULONG ( STDMETHODCALLTYPE *Release )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootStatics * This
    );

HRESULT ( STDMETHODCALLTYPE *GetIids )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootStatics * This,
    /* [out] */ __RPC__out ULONG *iidCount,
    /* [size_is][size_is][out] */ __RPC__deref_out_ecount_full_opt(*iidCount) IID **iids
    );

HRESULT ( STDMETHODCALLTYPE *GetRuntimeClassName )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootStatics * This,
    /* [out] */ __RPC__deref_out_opt HSTRING *className
    );

HRESULT ( STDMETHODCALLTYPE *GetTrustLevel )(
    __RPC__in __x_Microsoft_CUI_CXaml_CIXamlRootStatics * This,
    /* [OUT ] */ __RPC__out TrustLevel *trustLevel
    );
/* [propget] */HRESULT ( STDMETHODCALLTYPE *get__Internal_Use_Only_Compositor )(
        __x_Microsoft_CUI_CXaml_CIXamlRootStatics * This,
        /* [retval, out] */__x_Microsoft_CUI_CComposition_CICompositor * * value
        );
    END_INTERFACE
    
} __x_Microsoft_CUI_CXaml_CIXamlRootStaticsVtbl;

interface __x_Microsoft_CUI_CXaml_CIXamlRootStatics
{
    CONST_VTBL struct __x_Microsoft_CUI_CXaml_CIXamlRootStaticsVtbl *lpVtbl;
};

#ifdef COBJMACROS
#define __x_Microsoft_CUI_CXaml_CIXamlRootStatics_QueryInterface(This,riid,ppvObject) \
( (This)->lpVtbl->QueryInterface(This,riid,ppvObject) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootStatics_AddRef(This) \
        ( (This)->lpVtbl->AddRef(This) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootStatics_Release(This) \
        ( (This)->lpVtbl->Release(This) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootStatics_GetIids(This,iidCount,iids) \
        ( (This)->lpVtbl->GetIids(This,iidCount,iids) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootStatics_GetRuntimeClassName(This,className) \
        ( (This)->lpVtbl->GetRuntimeClassName(This,className) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootStatics_GetTrustLevel(This,trustLevel) \
        ( (This)->lpVtbl->GetTrustLevel(This,trustLevel) )

#define __x_Microsoft_CUI_CXaml_CIXamlRootStatics_get__Internal_Use_Only_Compositor(This,value) \
    ( (This)->lpVtbl->get__Internal_Use_Only_Compositor(This,value) )


#endif /* COBJMACROS */


EXTERN_C const IID IID___x_Microsoft_CUI_CXaml_CIXamlRootStatics;
#endif /* !defined(____x_Microsoft_CUI_CXaml_CIXamlRootStatics_INTERFACE_DEFINED__) */
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.AdaptiveTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IAdaptiveTriggerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IAdaptiveTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_AdaptiveTrigger_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_AdaptiveTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_AdaptiveTrigger[] = L"Microsoft.UI.Xaml.AdaptiveTrigger";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.Application
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IApplicationStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IApplication ** Default Interface **
 *    Microsoft.UI.Xaml.IApplicationOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Application_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Application_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Application[] = L"Microsoft.UI.Xaml.Application";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ApplicationInitializationCallbackParams
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IApplicationInitializationCallbackParams ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ApplicationInitializationCallbackParams_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ApplicationInitializationCallbackParams[] = L"Microsoft.UI.Xaml.ApplicationInitializationCallbackParams";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.BindingFailedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IBindingFailedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_BindingFailedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_BindingFailedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_BindingFailedEventArgs[] = L"Microsoft.UI.Xaml.BindingFailedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.BringIntoViewOptions
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IBringIntoViewOptions ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_BringIntoViewOptions_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_BringIntoViewOptions_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_BringIntoViewOptions[] = L"Microsoft.UI.Xaml.BringIntoViewOptions";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IBringIntoViewRequestedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_BringIntoViewRequestedEventArgs[] = L"Microsoft.UI.Xaml.BringIntoViewRequestedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.BrushTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IBrushTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_BrushTransition_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_BrushTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_BrushTransition[] = L"Microsoft.UI.Xaml.BrushTransition";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Class Microsoft.UI.Xaml.ColorPaletteResources
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IColorPaletteResources ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ColorPaletteResources_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ColorPaletteResources_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ColorPaletteResources[] = L"Microsoft.UI.Xaml.ColorPaletteResources";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.CornerRadiusHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.ICornerRadiusHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ICornerRadiusHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_CornerRadiusHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_CornerRadiusHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_CornerRadiusHelper[] = L"Microsoft.UI.Xaml.CornerRadiusHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DataContextChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDataContextChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DataContextChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DataContextChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DataContextChangedEventArgs[] = L"Microsoft.UI.Xaml.DataContextChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DataTemplate
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IDataTemplateStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDataTemplate ** Default Interface **
 *    Microsoft.UI.Xaml.IElementFactory
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DataTemplate_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DataTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DataTemplate[] = L"Microsoft.UI.Xaml.DataTemplate";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DataTemplateKey
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDataTemplateKey ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DataTemplateKey_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DataTemplateKey_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DataTemplateKey[] = L"Microsoft.UI.Xaml.DataTemplateKey";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DebugSettings
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDebugSettings ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DebugSettings_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DebugSettings_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DebugSettings[] = L"Microsoft.UI.Xaml.DebugSettings";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DependencyObject
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDependencyObject ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DependencyObject_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DependencyObject_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DependencyObject[] = L"Microsoft.UI.Xaml.DependencyObject";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DependencyObjectCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IObservableVector_1_Microsoft.UI.Xaml.DependencyObject ** Default Interface **
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.DependencyObject
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.DependencyObject
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DependencyObjectCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DependencyObjectCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DependencyObjectCollection[] = L"Microsoft.UI.Xaml.DependencyObjectCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DependencyProperty
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IDependencyPropertyStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDependencyProperty ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DependencyProperty_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DependencyProperty_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DependencyProperty[] = L"Microsoft.UI.Xaml.DependencyProperty";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDependencyPropertyChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DependencyPropertyChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DependencyPropertyChangedEventArgs[] = L"Microsoft.UI.Xaml.DependencyPropertyChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DispatcherTimer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDispatcherTimer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DispatcherTimer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DispatcherTimer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DispatcherTimer[] = L"Microsoft.UI.Xaml.DispatcherTimer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragEventArgs[] = L"Microsoft.UI.Xaml.DragEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragOperationDeferral
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragOperationDeferral ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragOperationDeferral_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragOperationDeferral_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragOperationDeferral[] = L"Microsoft.UI.Xaml.DragOperationDeferral";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragStartingEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragStartingEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragStartingEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragStartingEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragStartingEventArgs[] = L"Microsoft.UI.Xaml.DragStartingEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragUI
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragUI ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragUI_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragUI_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragUI[] = L"Microsoft.UI.Xaml.DragUI";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DragUIOverride
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDragUIOverride ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DragUIOverride_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DragUIOverride_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DragUIOverride[] = L"Microsoft.UI.Xaml.DragUIOverride";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DropCompletedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDropCompletedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DropCompletedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DropCompletedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DropCompletedEventArgs[] = L"Microsoft.UI.Xaml.DropCompletedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DurationHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IDurationHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDurationHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DurationHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DurationHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DurationHelper[] = L"Microsoft.UI.Xaml.DurationHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.DxamlCoreTestHooks
 *
 * Introduced to Microsoft.UI.Xaml.PrivateApiContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.PrivateApiContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IDxamlCoreTestHooksStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.PrivateApiContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IDxamlCoreTestHooks ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_DxamlCoreTestHooks_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_DxamlCoreTestHooks_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_DxamlCoreTestHooks[] = L"Microsoft.UI.Xaml.DxamlCoreTestHooks";
#endif
#endif // MICROSOFT_UI_XAML_PRIVATEAPICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IEffectiveViewportChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_EffectiveViewportChangedEventArgs[] = L"Microsoft.UI.Xaml.EffectiveViewportChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ElementFactoryGetArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IElementFactoryGetArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ElementFactoryGetArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ElementFactoryGetArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ElementFactoryGetArgs[] = L"Microsoft.UI.Xaml.ElementFactoryGetArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ElementFactoryRecycleArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IElementFactoryRecycleArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ElementFactoryRecycleArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ElementFactoryRecycleArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ElementFactoryRecycleArgs[] = L"Microsoft.UI.Xaml.ElementFactoryRecycleArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ElementSoundPlayer
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IElementSoundPlayerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IElementSoundPlayer ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ElementSoundPlayer_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ElementSoundPlayer_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ElementSoundPlayer[] = L"Microsoft.UI.Xaml.ElementSoundPlayer";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.EventTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IEventTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_EventTrigger_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_EventTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_EventTrigger[] = L"Microsoft.UI.Xaml.EventTrigger";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ExceptionRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IExceptionRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ExceptionRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ExceptionRoutedEventArgs[] = L"Microsoft.UI.Xaml.ExceptionRoutedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.FrameworkElement
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IFrameworkElementStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IFrameworkElement ** Default Interface **
 *    Microsoft.UI.Xaml.IFrameworkElementProtected
 *    Microsoft.UI.Xaml.IFrameworkElementOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkElement_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_FrameworkElement[] = L"Microsoft.UI.Xaml.FrameworkElement";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.FrameworkTemplate
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IFrameworkTemplate ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkTemplate_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkTemplate_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_FrameworkTemplate[] = L"Microsoft.UI.Xaml.FrameworkTemplate";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.FrameworkView
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IFrameworkView ** Default Interface **
 *    Windows.ApplicationModel.Core.IFrameworkView
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkView_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkView_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_FrameworkView[] = L"Microsoft.UI.Xaml.FrameworkView";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.FrameworkViewSource
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IFrameworkViewSource ** Default Interface **
 *    Windows.ApplicationModel.Core.IFrameworkViewSource
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkViewSource_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_FrameworkViewSource_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_FrameworkViewSource[] = L"Microsoft.UI.Xaml.FrameworkViewSource";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.GridLengthHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IGridLengthHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IGridLengthHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_GridLengthHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_GridLengthHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_GridLengthHelper[] = L"Microsoft.UI.Xaml.GridLengthHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.LaunchActivatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ILaunchActivatedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_LaunchActivatedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_LaunchActivatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_LaunchActivatedEventArgs[] = L"Microsoft.UI.Xaml.LaunchActivatedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.MediaFailedRoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IMediaFailedRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_MediaFailedRoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_MediaFailedRoutedEventArgs[] = L"Microsoft.UI.Xaml.MediaFailedRoutedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.PointHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IPointHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IPointHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_PointHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_PointHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_PointHelper[] = L"Microsoft.UI.Xaml.PointHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.PropertyMetadata
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IPropertyMetadataStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IPropertyMetadata ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_PropertyMetadata_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_PropertyMetadata_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_PropertyMetadata[] = L"Microsoft.UI.Xaml.PropertyMetadata";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.PropertyPath
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via the Microsoft.UI.Xaml.IPropertyPathFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IPropertyPath ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_PropertyPath_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_PropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_PropertyPath[] = L"Microsoft.UI.Xaml.PropertyPath";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.RectHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IRectHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IRectHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_RectHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_RectHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_RectHelper[] = L"Microsoft.UI.Xaml.RectHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ResourceDictionary
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IResourceDictionary ** Default Interface **
 *    Windows.Foundation.Collections.IMap_2_IInspectable,IInspectable
 *    Windows.Foundation.Collections.IIterable_1___FIKeyValuePair_2_IInspectable_IInspectable
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ResourceDictionary_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ResourceDictionary_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ResourceDictionary[] = L"Microsoft.UI.Xaml.ResourceDictionary";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.RoutedEvent
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IRoutedEvent ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_RoutedEvent_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_RoutedEvent_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_RoutedEvent[] = L"Microsoft.UI.Xaml.RoutedEvent";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.RoutedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IRoutedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_RoutedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_RoutedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_RoutedEventArgs[] = L"Microsoft.UI.Xaml.RoutedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ScalarTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IScalarTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ScalarTransition_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ScalarTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ScalarTransition[] = L"Microsoft.UI.Xaml.ScalarTransition";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Class Microsoft.UI.Xaml.Setter
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via the Microsoft.UI.Xaml.ISetterFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISetter ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Setter_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Setter_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Setter[] = L"Microsoft.UI.Xaml.Setter";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.SetterBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISetterBase ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_SetterBase_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_SetterBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_SetterBase[] = L"Microsoft.UI.Xaml.SetterBase";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.SetterBaseCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISetterBaseCollection ** Default Interface **
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.SetterBase
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.SetterBase
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_SetterBaseCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_SetterBaseCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_SetterBaseCollection[] = L"Microsoft.UI.Xaml.SetterBaseCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.SizeChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISizeChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_SizeChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_SizeChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_SizeChangedEventArgs[] = L"Microsoft.UI.Xaml.SizeChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.SizeHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.ISizeHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ISizeHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_SizeHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_SizeHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_SizeHelper[] = L"Microsoft.UI.Xaml.SizeHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.StateTrigger
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IStateTriggerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IStateTrigger ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_StateTrigger_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_StateTrigger_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_StateTrigger[] = L"Microsoft.UI.Xaml.StateTrigger";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.StateTriggerBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IStateTriggerBase ** Default Interface **
 *    Microsoft.UI.Xaml.IStateTriggerBaseProtected
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_StateTriggerBase_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_StateTriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_StateTriggerBase[] = L"Microsoft.UI.Xaml.StateTriggerBase";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.Style
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via the Microsoft.UI.Xaml.IStyleFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IStyle ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Style_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Style_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Style[] = L"Microsoft.UI.Xaml.Style";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TargetPropertyPath
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *   Type can be activated via the Microsoft.UI.Xaml.ITargetPropertyPathFactory interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ITargetPropertyPath ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TargetPropertyPath_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TargetPropertyPath_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TargetPropertyPath[] = L"Microsoft.UI.Xaml.TargetPropertyPath";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.ThicknessHelper
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IThicknessHelperStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IThicknessHelper ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_ThicknessHelper_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_ThicknessHelper_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_ThicknessHelper[] = L"Microsoft.UI.Xaml.ThicknessHelper";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TriggerAction
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ITriggerAction ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TriggerAction_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TriggerAction_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TriggerAction[] = L"Microsoft.UI.Xaml.TriggerAction";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TriggerActionCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.TriggerAction ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.TriggerAction
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TriggerActionCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TriggerActionCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TriggerActionCollection[] = L"Microsoft.UI.Xaml.TriggerActionCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TriggerBase
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.ITriggerBase ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TriggerBase_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TriggerBase_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TriggerBase[] = L"Microsoft.UI.Xaml.TriggerBase";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.TriggerCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.TriggerBase ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.TriggerBase
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_TriggerCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_TriggerCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_TriggerCollection[] = L"Microsoft.UI.Xaml.TriggerCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.UIElement
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IUIElementStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IUIElement ** Default Interface **
 *    Microsoft.UI.Xaml.IUIElementOverrides
 *    Microsoft.UI.Composition.IAnimationObject
 *    Microsoft.UI.Composition.IVisualElement
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_UIElement_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_UIElement_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_UIElement[] = L"Microsoft.UI.Xaml.UIElement";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.UIElementWeakCollection
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Windows.Foundation.Collections.IVector_1_Microsoft.UI.Xaml.UIElement ** Default Interface **
 *    Windows.Foundation.Collections.IIterable_1_Microsoft.UI.Xaml.UIElement
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_UIElementWeakCollection_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_UIElementWeakCollection_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_UIElementWeakCollection[] = L"Microsoft.UI.Xaml.UIElementWeakCollection";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.UnhandledExceptionEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IUnhandledExceptionEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_UnhandledExceptionEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_UnhandledExceptionEventArgs[] = L"Microsoft.UI.Xaml.UnhandledExceptionEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.Vector3Transition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 7.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVector3Transition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Vector3Transition_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Vector3Transition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Vector3Transition[] = L"Microsoft.UI.Xaml.Vector3Transition";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x70000


/*
 *
 * Class Microsoft.UI.Xaml.VisualState
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualState ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualState_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualState_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualState[] = L"Microsoft.UI.Xaml.VisualState";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.VisualStateChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualStateChangedEventArgs ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualStateChangedEventArgs[] = L"Microsoft.UI.Xaml.VisualStateChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.VisualStateGroup
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass can be activated.
 *   Type can be activated via RoActivateInstance starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualStateGroup ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateGroup_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateGroup_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualStateGroup[] = L"Microsoft.UI.Xaml.VisualStateGroup";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.VisualStateManager
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IVisualStateManagerStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualStateManager ** Default Interface **
 *    Microsoft.UI.Xaml.IVisualStateManagerProtected
 *    Microsoft.UI.Xaml.IVisualStateManagerOverrides
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateManager_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualStateManager_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualStateManager[] = L"Microsoft.UI.Xaml.VisualStateManager";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.VisualTransition
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IVisualTransition ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_VisualTransition_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_VisualTransition_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_VisualTransition[] = L"Microsoft.UI.Xaml.VisualTransition";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.Window
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IWindowStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindow ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_Window_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_Window_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_Window[] = L"Microsoft.UI.Xaml.Window";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowActivatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowActivatedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowActivatedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowActivatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowActivatedEventArgs[] = L"Microsoft.UI.Xaml.WindowActivatedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowCreatedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowCreatedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowCreatedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowCreatedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowCreatedEventArgs[] = L"Microsoft.UI.Xaml.WindowCreatedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowEventArgs[] = L"Microsoft.UI.Xaml.WindowEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowSizeChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowSizeChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowSizeChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowSizeChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowSizeChangedEventArgs[] = L"Microsoft.UI.Xaml.WindowSizeChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IWindowVisibilityChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_WindowVisibilityChangedEventArgs[] = L"Microsoft.UI.Xaml.WindowVisibilityChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.XamlRoot
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * RuntimeClass contains static methods.
 *   Static Methods exist on the Microsoft.UI.Xaml.IXamlRootStatics interface starting with version 1.0 of the Microsoft.UI.Xaml.WinUIContract API contract
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IXamlRoot ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_XamlRoot_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_XamlRoot_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_XamlRoot[] = L"Microsoft.UI.Xaml.XamlRoot";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000


/*
 *
 * Class Microsoft.UI.Xaml.XamlRootChangedEventArgs
 *
 * Introduced to Microsoft.UI.Xaml.WinUIContract in version 1.0
 *
 *
 * Class implements the following interfaces:
 *    Microsoft.UI.Xaml.IXamlRootChangedEventArgs ** Default Interface **
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000

#ifndef RUNTIMECLASS_Microsoft_UI_Xaml_XamlRootChangedEventArgs_DEFINED
#define RUNTIMECLASS_Microsoft_UI_Xaml_XamlRootChangedEventArgs_DEFINED
extern const __declspec(selectany) _Null_terminated_ WCHAR RuntimeClass_Microsoft_UI_Xaml_XamlRootChangedEventArgs[] = L"Microsoft.UI.Xaml.XamlRootChangedEventArgs";
#endif
#endif // MICROSOFT_UI_XAML_WINUICONTRACT_VERSION >= 0x10000




#endif // defined(__cplusplus)
#pragma pop_macro("MIDL_CONST_ID")
#endif // __Microsoft2EUI2EXaml_p_h__

#endif // __Microsoft2EUI2EXaml_h__
